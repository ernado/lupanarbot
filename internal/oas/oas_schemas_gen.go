// Code generated by ogen, DO NOT EDIT.

package oas

import (
	"github.com/go-faster/errors"
)

type APIKey struct {
	APIKey string
	Roles  []string
}

// GetAPIKey returns the value of APIKey.
func (s *APIKey) GetAPIKey() string {
	return s.APIKey
}

// GetRoles returns the value of Roles.
func (s *APIKey) GetRoles() []string {
	return s.Roles
}

// SetAPIKey sets the value of APIKey.
func (s *APIKey) SetAPIKey(val string) {
	s.APIKey = val
}

// SetRoles sets the value of Roles.
func (s *APIKey) SetRoles(val []string) {
	s.Roles = val
}

// Ref: #/components/schemas/account-v1.AccountDto
type AccountV1AccountDto struct {
	// Encrypted PUUID. Exact length of 78 characters.
	Puuid string `json:"puuid"`
	// This field may be excluded from the response if the account doesn't have a gameName.
	GameName OptString `json:"gameName"`
	// This field may be excluded from the response if the account doesn't have a tagLine.
	TagLine OptString `json:"tagLine"`
}

// GetPuuid returns the value of Puuid.
func (s *AccountV1AccountDto) GetPuuid() string {
	return s.Puuid
}

// GetGameName returns the value of GameName.
func (s *AccountV1AccountDto) GetGameName() OptString {
	return s.GameName
}

// GetTagLine returns the value of TagLine.
func (s *AccountV1AccountDto) GetTagLine() OptString {
	return s.TagLine
}

// SetPuuid sets the value of Puuid.
func (s *AccountV1AccountDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetGameName sets the value of GameName.
func (s *AccountV1AccountDto) SetGameName(val OptString) {
	s.GameName = val
}

// SetTagLine sets the value of TagLine.
func (s *AccountV1AccountDto) SetTagLine(val OptString) {
	s.TagLine = val
}

func (*AccountV1AccountDto) accountV1GetByAccessTokenRes() {}
func (*AccountV1AccountDto) accountV1GetByPuuidRes()       {}
func (*AccountV1AccountDto) accountV1GetByRiotIdRes()      {}

// Account region.
// Ref: #/components/schemas/account-v1.AccountRegionDTO
type AccountV1AccountRegionDTO struct {
	// Player Universal Unique Identifier. Exact length of 78 characters. (Encrypted).
	Puuid string `json:"puuid"`
	// Game to lookup active region.
	Game string `json:"game"`
	// Player active region.
	Region string `json:"region"`
}

// GetPuuid returns the value of Puuid.
func (s *AccountV1AccountRegionDTO) GetPuuid() string {
	return s.Puuid
}

// GetGame returns the value of Game.
func (s *AccountV1AccountRegionDTO) GetGame() string {
	return s.Game
}

// GetRegion returns the value of Region.
func (s *AccountV1AccountRegionDTO) GetRegion() string {
	return s.Region
}

// SetPuuid sets the value of Puuid.
func (s *AccountV1AccountRegionDTO) SetPuuid(val string) {
	s.Puuid = val
}

// SetGame sets the value of Game.
func (s *AccountV1AccountRegionDTO) SetGame(val string) {
	s.Game = val
}

// SetRegion sets the value of Region.
func (s *AccountV1AccountRegionDTO) SetRegion(val string) {
	s.Region = val
}

func (*AccountV1AccountRegionDTO) accountV1GetActiveRegionRes() {}

// Ref: #/components/schemas/account-v1.ActiveShardDto
type AccountV1ActiveShardDto struct {
	Puuid       string `json:"puuid"`
	Game        string `json:"game"`
	ActiveShard string `json:"activeShard"`
}

// GetPuuid returns the value of Puuid.
func (s *AccountV1ActiveShardDto) GetPuuid() string {
	return s.Puuid
}

// GetGame returns the value of Game.
func (s *AccountV1ActiveShardDto) GetGame() string {
	return s.Game
}

// GetActiveShard returns the value of ActiveShard.
func (s *AccountV1ActiveShardDto) GetActiveShard() string {
	return s.ActiveShard
}

// SetPuuid sets the value of Puuid.
func (s *AccountV1ActiveShardDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetGame sets the value of Game.
func (s *AccountV1ActiveShardDto) SetGame(val string) {
	s.Game = val
}

// SetActiveShard sets the value of ActiveShard.
func (s *AccountV1ActiveShardDto) SetActiveShard(val string) {
	s.ActiveShard = val
}

func (*AccountV1ActiveShardDto) accountV1GetActiveShardRes() {}

// AccountV1GetActiveRegionBadGateway is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionBadGateway struct{}

func (*AccountV1GetActiveRegionBadGateway) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionBadRequest is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionBadRequest struct{}

func (*AccountV1GetActiveRegionBadRequest) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionForbidden is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionForbidden struct{}

func (*AccountV1GetActiveRegionForbidden) accountV1GetActiveRegionRes() {}

type AccountV1GetActiveRegionGame string

const (
	AccountV1GetActiveRegionGameLol AccountV1GetActiveRegionGame = "lol"
	AccountV1GetActiveRegionGameTft AccountV1GetActiveRegionGame = "tft"
)

// AllValues returns all AccountV1GetActiveRegionGame values.
func (AccountV1GetActiveRegionGame) AllValues() []AccountV1GetActiveRegionGame {
	return []AccountV1GetActiveRegionGame{
		AccountV1GetActiveRegionGameLol,
		AccountV1GetActiveRegionGameTft,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AccountV1GetActiveRegionGame) MarshalText() ([]byte, error) {
	switch s {
	case AccountV1GetActiveRegionGameLol:
		return []byte(s), nil
	case AccountV1GetActiveRegionGameTft:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccountV1GetActiveRegionGame) UnmarshalText(data []byte) error {
	switch AccountV1GetActiveRegionGame(data) {
	case AccountV1GetActiveRegionGameLol:
		*s = AccountV1GetActiveRegionGameLol
		return nil
	case AccountV1GetActiveRegionGameTft:
		*s = AccountV1GetActiveRegionGameTft
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// AccountV1GetActiveRegionGatewayTimeout is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionGatewayTimeout struct{}

func (*AccountV1GetActiveRegionGatewayTimeout) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionInternalServerError is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionInternalServerError struct{}

func (*AccountV1GetActiveRegionInternalServerError) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionMethodNotAllowed is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionMethodNotAllowed struct{}

func (*AccountV1GetActiveRegionMethodNotAllowed) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionNotFound is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionNotFound struct{}

func (*AccountV1GetActiveRegionNotFound) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionServiceUnavailable is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionServiceUnavailable struct{}

func (*AccountV1GetActiveRegionServiceUnavailable) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionTooManyRequests is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionTooManyRequests struct{}

func (*AccountV1GetActiveRegionTooManyRequests) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionUnauthorized is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionUnauthorized struct{}

func (*AccountV1GetActiveRegionUnauthorized) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveRegionUnsupportedMediaType is response for AccountV1GetActiveRegion operation.
type AccountV1GetActiveRegionUnsupportedMediaType struct{}

func (*AccountV1GetActiveRegionUnsupportedMediaType) accountV1GetActiveRegionRes() {}

// AccountV1GetActiveShardBadGateway is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardBadGateway struct{}

func (*AccountV1GetActiveShardBadGateway) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardBadRequest is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardBadRequest struct{}

func (*AccountV1GetActiveShardBadRequest) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardForbidden is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardForbidden struct{}

func (*AccountV1GetActiveShardForbidden) accountV1GetActiveShardRes() {}

type AccountV1GetActiveShardGame string

const (
	AccountV1GetActiveShardGameVal AccountV1GetActiveShardGame = "val"
	AccountV1GetActiveShardGameLor AccountV1GetActiveShardGame = "lor"
)

// AllValues returns all AccountV1GetActiveShardGame values.
func (AccountV1GetActiveShardGame) AllValues() []AccountV1GetActiveShardGame {
	return []AccountV1GetActiveShardGame{
		AccountV1GetActiveShardGameVal,
		AccountV1GetActiveShardGameLor,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s AccountV1GetActiveShardGame) MarshalText() ([]byte, error) {
	switch s {
	case AccountV1GetActiveShardGameVal:
		return []byte(s), nil
	case AccountV1GetActiveShardGameLor:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *AccountV1GetActiveShardGame) UnmarshalText(data []byte) error {
	switch AccountV1GetActiveShardGame(data) {
	case AccountV1GetActiveShardGameVal:
		*s = AccountV1GetActiveShardGameVal
		return nil
	case AccountV1GetActiveShardGameLor:
		*s = AccountV1GetActiveShardGameLor
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// AccountV1GetActiveShardGatewayTimeout is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardGatewayTimeout struct{}

func (*AccountV1GetActiveShardGatewayTimeout) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardInternalServerError is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardInternalServerError struct{}

func (*AccountV1GetActiveShardInternalServerError) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardMethodNotAllowed is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardMethodNotAllowed struct{}

func (*AccountV1GetActiveShardMethodNotAllowed) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardNotFound is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardNotFound struct{}

func (*AccountV1GetActiveShardNotFound) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardServiceUnavailable is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardServiceUnavailable struct{}

func (*AccountV1GetActiveShardServiceUnavailable) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardTooManyRequests is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardTooManyRequests struct{}

func (*AccountV1GetActiveShardTooManyRequests) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardUnauthorized is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardUnauthorized struct{}

func (*AccountV1GetActiveShardUnauthorized) accountV1GetActiveShardRes() {}

// AccountV1GetActiveShardUnsupportedMediaType is response for AccountV1GetActiveShard operation.
type AccountV1GetActiveShardUnsupportedMediaType struct{}

func (*AccountV1GetActiveShardUnsupportedMediaType) accountV1GetActiveShardRes() {}

// AccountV1GetByAccessTokenBadGateway is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenBadGateway struct{}

func (*AccountV1GetByAccessTokenBadGateway) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenBadRequest is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenBadRequest struct{}

func (*AccountV1GetByAccessTokenBadRequest) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenForbidden is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenForbidden struct{}

func (*AccountV1GetByAccessTokenForbidden) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenGatewayTimeout is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenGatewayTimeout struct{}

func (*AccountV1GetByAccessTokenGatewayTimeout) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenInternalServerError is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenInternalServerError struct{}

func (*AccountV1GetByAccessTokenInternalServerError) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenMethodNotAllowed is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenMethodNotAllowed struct{}

func (*AccountV1GetByAccessTokenMethodNotAllowed) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenNotFound is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenNotFound struct{}

func (*AccountV1GetByAccessTokenNotFound) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenServiceUnavailable is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenServiceUnavailable struct{}

func (*AccountV1GetByAccessTokenServiceUnavailable) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenTooManyRequests is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenTooManyRequests struct{}

func (*AccountV1GetByAccessTokenTooManyRequests) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenUnauthorized is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenUnauthorized struct{}

func (*AccountV1GetByAccessTokenUnauthorized) accountV1GetByAccessTokenRes() {}

// AccountV1GetByAccessTokenUnsupportedMediaType is response for AccountV1GetByAccessToken operation.
type AccountV1GetByAccessTokenUnsupportedMediaType struct{}

func (*AccountV1GetByAccessTokenUnsupportedMediaType) accountV1GetByAccessTokenRes() {}

// AccountV1GetByPuuidBadGateway is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidBadGateway struct{}

func (*AccountV1GetByPuuidBadGateway) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidBadRequest is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidBadRequest struct{}

func (*AccountV1GetByPuuidBadRequest) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidForbidden is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidForbidden struct{}

func (*AccountV1GetByPuuidForbidden) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidGatewayTimeout is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidGatewayTimeout struct{}

func (*AccountV1GetByPuuidGatewayTimeout) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidInternalServerError is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidInternalServerError struct{}

func (*AccountV1GetByPuuidInternalServerError) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidMethodNotAllowed is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidMethodNotAllowed struct{}

func (*AccountV1GetByPuuidMethodNotAllowed) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidNotFound is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidNotFound struct{}

func (*AccountV1GetByPuuidNotFound) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidServiceUnavailable is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidServiceUnavailable struct{}

func (*AccountV1GetByPuuidServiceUnavailable) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidTooManyRequests is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidTooManyRequests struct{}

func (*AccountV1GetByPuuidTooManyRequests) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidUnauthorized is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidUnauthorized struct{}

func (*AccountV1GetByPuuidUnauthorized) accountV1GetByPuuidRes() {}

// AccountV1GetByPuuidUnsupportedMediaType is response for AccountV1GetByPuuid operation.
type AccountV1GetByPuuidUnsupportedMediaType struct{}

func (*AccountV1GetByPuuidUnsupportedMediaType) accountV1GetByPuuidRes() {}

// AccountV1GetByRiotIdBadGateway is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdBadGateway struct{}

func (*AccountV1GetByRiotIdBadGateway) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdBadRequest is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdBadRequest struct{}

func (*AccountV1GetByRiotIdBadRequest) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdForbidden is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdForbidden struct{}

func (*AccountV1GetByRiotIdForbidden) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdGatewayTimeout is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdGatewayTimeout struct{}

func (*AccountV1GetByRiotIdGatewayTimeout) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdInternalServerError is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdInternalServerError struct{}

func (*AccountV1GetByRiotIdInternalServerError) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdMethodNotAllowed is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdMethodNotAllowed struct{}

func (*AccountV1GetByRiotIdMethodNotAllowed) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdNotFound is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdNotFound struct{}

func (*AccountV1GetByRiotIdNotFound) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdServiceUnavailable is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdServiceUnavailable struct{}

func (*AccountV1GetByRiotIdServiceUnavailable) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdTooManyRequests is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdTooManyRequests struct{}

func (*AccountV1GetByRiotIdTooManyRequests) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdUnauthorized is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdUnauthorized struct{}

func (*AccountV1GetByRiotIdUnauthorized) accountV1GetByRiotIdRes() {}

// AccountV1GetByRiotIdUnsupportedMediaType is response for AccountV1GetByRiotId operation.
type AccountV1GetByRiotIdUnsupportedMediaType struct{}

func (*AccountV1GetByRiotIdUnsupportedMediaType) accountV1GetByRiotIdRes() {}

// This object contains single Champion Mastery information for player and champion combination.
// Ref: #/components/schemas/champion-mastery-v4.ChampionMasteryDto
type ChampionMasteryV4ChampionMasteryDto struct {
	// Player Universal Unique Identifier. Exact length of 78 characters. (Encrypted).
	Puuid string `json:"puuid"`
	// Number of points needed to achieve next level. Zero if player reached maximum champion level for
	// this champion.
	ChampionPointsUntilNextLevel int64 `json:"championPointsUntilNextLevel"`
	// Is chest granted for this champion or not in current season.
	ChestGranted OptBool `json:"chestGranted"`
	// Champion ID for this entry.
	ChampionId int64 `json:"championId"`
	// Last time this champion was played by this player - in Unix milliseconds time format.
	LastPlayTime int64 `json:"lastPlayTime"`
	// Champion level for specified player and champion combination.
	ChampionLevel int32 `json:"championLevel"`
	// Total number of champion points for this player and champion combination - they are used to
	// determine championLevel.
	ChampionPoints int32 `json:"championPoints"`
	// Number of points earned since current level has been achieved.
	ChampionPointsSinceLastLevel int64                                    `json:"championPointsSinceLastLevel"`
	MarkRequiredForNextLevel     int32                                    `json:"markRequiredForNextLevel"`
	ChampionSeasonMilestone      int32                                    `json:"championSeasonMilestone"`
	NextSeasonMilestone          ChampionMasteryV4NextSeasonMilestonesDto `json:"nextSeasonMilestone"`
	// The token earned for this champion at the current championLevel. When the championLevel is
	// advanced the tokensEarned resets to 0.
	TokensEarned    int32    `json:"tokensEarned"`
	MilestoneGrades []string `json:"milestoneGrades"`
}

// GetPuuid returns the value of Puuid.
func (s *ChampionMasteryV4ChampionMasteryDto) GetPuuid() string {
	return s.Puuid
}

// GetChampionPointsUntilNextLevel returns the value of ChampionPointsUntilNextLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) GetChampionPointsUntilNextLevel() int64 {
	return s.ChampionPointsUntilNextLevel
}

// GetChestGranted returns the value of ChestGranted.
func (s *ChampionMasteryV4ChampionMasteryDto) GetChestGranted() OptBool {
	return s.ChestGranted
}

// GetChampionId returns the value of ChampionId.
func (s *ChampionMasteryV4ChampionMasteryDto) GetChampionId() int64 {
	return s.ChampionId
}

// GetLastPlayTime returns the value of LastPlayTime.
func (s *ChampionMasteryV4ChampionMasteryDto) GetLastPlayTime() int64 {
	return s.LastPlayTime
}

// GetChampionLevel returns the value of ChampionLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) GetChampionLevel() int32 {
	return s.ChampionLevel
}

// GetChampionPoints returns the value of ChampionPoints.
func (s *ChampionMasteryV4ChampionMasteryDto) GetChampionPoints() int32 {
	return s.ChampionPoints
}

// GetChampionPointsSinceLastLevel returns the value of ChampionPointsSinceLastLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) GetChampionPointsSinceLastLevel() int64 {
	return s.ChampionPointsSinceLastLevel
}

// GetMarkRequiredForNextLevel returns the value of MarkRequiredForNextLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) GetMarkRequiredForNextLevel() int32 {
	return s.MarkRequiredForNextLevel
}

// GetChampionSeasonMilestone returns the value of ChampionSeasonMilestone.
func (s *ChampionMasteryV4ChampionMasteryDto) GetChampionSeasonMilestone() int32 {
	return s.ChampionSeasonMilestone
}

// GetNextSeasonMilestone returns the value of NextSeasonMilestone.
func (s *ChampionMasteryV4ChampionMasteryDto) GetNextSeasonMilestone() ChampionMasteryV4NextSeasonMilestonesDto {
	return s.NextSeasonMilestone
}

// GetTokensEarned returns the value of TokensEarned.
func (s *ChampionMasteryV4ChampionMasteryDto) GetTokensEarned() int32 {
	return s.TokensEarned
}

// GetMilestoneGrades returns the value of MilestoneGrades.
func (s *ChampionMasteryV4ChampionMasteryDto) GetMilestoneGrades() []string {
	return s.MilestoneGrades
}

// SetPuuid sets the value of Puuid.
func (s *ChampionMasteryV4ChampionMasteryDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetChampionPointsUntilNextLevel sets the value of ChampionPointsUntilNextLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) SetChampionPointsUntilNextLevel(val int64) {
	s.ChampionPointsUntilNextLevel = val
}

// SetChestGranted sets the value of ChestGranted.
func (s *ChampionMasteryV4ChampionMasteryDto) SetChestGranted(val OptBool) {
	s.ChestGranted = val
}

// SetChampionId sets the value of ChampionId.
func (s *ChampionMasteryV4ChampionMasteryDto) SetChampionId(val int64) {
	s.ChampionId = val
}

// SetLastPlayTime sets the value of LastPlayTime.
func (s *ChampionMasteryV4ChampionMasteryDto) SetLastPlayTime(val int64) {
	s.LastPlayTime = val
}

// SetChampionLevel sets the value of ChampionLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) SetChampionLevel(val int32) {
	s.ChampionLevel = val
}

// SetChampionPoints sets the value of ChampionPoints.
func (s *ChampionMasteryV4ChampionMasteryDto) SetChampionPoints(val int32) {
	s.ChampionPoints = val
}

// SetChampionPointsSinceLastLevel sets the value of ChampionPointsSinceLastLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) SetChampionPointsSinceLastLevel(val int64) {
	s.ChampionPointsSinceLastLevel = val
}

// SetMarkRequiredForNextLevel sets the value of MarkRequiredForNextLevel.
func (s *ChampionMasteryV4ChampionMasteryDto) SetMarkRequiredForNextLevel(val int32) {
	s.MarkRequiredForNextLevel = val
}

// SetChampionSeasonMilestone sets the value of ChampionSeasonMilestone.
func (s *ChampionMasteryV4ChampionMasteryDto) SetChampionSeasonMilestone(val int32) {
	s.ChampionSeasonMilestone = val
}

// SetNextSeasonMilestone sets the value of NextSeasonMilestone.
func (s *ChampionMasteryV4ChampionMasteryDto) SetNextSeasonMilestone(val ChampionMasteryV4NextSeasonMilestonesDto) {
	s.NextSeasonMilestone = val
}

// SetTokensEarned sets the value of TokensEarned.
func (s *ChampionMasteryV4ChampionMasteryDto) SetTokensEarned(val int32) {
	s.TokensEarned = val
}

// SetMilestoneGrades sets the value of MilestoneGrades.
func (s *ChampionMasteryV4ChampionMasteryDto) SetMilestoneGrades(val []string) {
	s.MilestoneGrades = val
}

func (*ChampionMasteryV4ChampionMasteryDto) championMasteryV4GetChampionMasteryByPUUIDRes() {}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDBadGateway is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDBadGateway struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDBadGateway) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDBadRequest is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDBadRequest struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDBadRequest) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDForbidden is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDForbidden struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDForbidden) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDGatewayTimeout is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDGatewayTimeout struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDGatewayTimeout) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDInternalServerError is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDInternalServerError struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDInternalServerError) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDMethodNotAllowed is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDMethodNotAllowed struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDMethodNotAllowed) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDNotFound is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDNotFound struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDNotFound) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

type ChampionMasteryV4GetAllChampionMasteriesByPUUIDOKApplicationJSON []ChampionMasteryV4ChampionMasteryDto

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDOKApplicationJSON) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDServiceUnavailable is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDServiceUnavailable struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDServiceUnavailable) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDTooManyRequests is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDTooManyRequests struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDTooManyRequests) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDUnauthorized is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDUnauthorized struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDUnauthorized) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetAllChampionMasteriesByPUUIDUnsupportedMediaType is response for ChampionMasteryV4GetAllChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetAllChampionMasteriesByPUUIDUnsupportedMediaType struct{}

func (*ChampionMasteryV4GetAllChampionMasteriesByPUUIDUnsupportedMediaType) championMasteryV4GetAllChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDBadGateway is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDBadGateway struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDBadGateway) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDBadRequest is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDBadRequest struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDBadRequest) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDForbidden is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDForbidden struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDForbidden) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDGatewayTimeout is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDGatewayTimeout struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDGatewayTimeout) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDInternalServerError is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDInternalServerError struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDInternalServerError) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDMethodNotAllowed is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDMethodNotAllowed struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDMethodNotAllowed) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDNotFound is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDNotFound struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDNotFound) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDServiceUnavailable is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDServiceUnavailable struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDServiceUnavailable) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDTooManyRequests is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDTooManyRequests struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDTooManyRequests) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDUnauthorized is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDUnauthorized struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDUnauthorized) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryByPUUIDUnsupportedMediaType is response for ChampionMasteryV4GetChampionMasteryByPUUID operation.
type ChampionMasteryV4GetChampionMasteryByPUUIDUnsupportedMediaType struct{}

func (*ChampionMasteryV4GetChampionMasteryByPUUIDUnsupportedMediaType) championMasteryV4GetChampionMasteryByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDBadGateway is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDBadGateway struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDBadGateway) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDBadRequest is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDBadRequest struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDBadRequest) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDForbidden is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDForbidden struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDForbidden) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDGatewayTimeout is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDGatewayTimeout struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDGatewayTimeout) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDInternalServerError is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDInternalServerError struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDInternalServerError) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDMethodNotAllowed is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDMethodNotAllowed struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDMethodNotAllowed) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDNotFound is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDNotFound struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDNotFound) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

type ChampionMasteryV4GetChampionMasteryScoreByPUUIDOKApplicationJSON int32

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDOKApplicationJSON) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDServiceUnavailable is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDServiceUnavailable struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDServiceUnavailable) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDTooManyRequests is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDTooManyRequests struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDTooManyRequests) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDUnauthorized is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDUnauthorized struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDUnauthorized) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetChampionMasteryScoreByPUUIDUnsupportedMediaType is response for ChampionMasteryV4GetChampionMasteryScoreByPUUID operation.
type ChampionMasteryV4GetChampionMasteryScoreByPUUIDUnsupportedMediaType struct{}

func (*ChampionMasteryV4GetChampionMasteryScoreByPUUIDUnsupportedMediaType) championMasteryV4GetChampionMasteryScoreByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDBadGateway is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDBadGateway struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDBadGateway) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDBadRequest is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDBadRequest struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDBadRequest) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDForbidden is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDForbidden struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDForbidden) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDGatewayTimeout is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDGatewayTimeout struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDGatewayTimeout) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDInternalServerError is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDInternalServerError struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDInternalServerError) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDMethodNotAllowed is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDMethodNotAllowed struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDMethodNotAllowed) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDNotFound is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDNotFound struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDNotFound) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

type ChampionMasteryV4GetTopChampionMasteriesByPUUIDOKApplicationJSON []ChampionMasteryV4ChampionMasteryDto

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDOKApplicationJSON) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDServiceUnavailable is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDServiceUnavailable struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDServiceUnavailable) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDTooManyRequests is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDTooManyRequests struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDTooManyRequests) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDUnauthorized is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDUnauthorized struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDUnauthorized) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// ChampionMasteryV4GetTopChampionMasteriesByPUUIDUnsupportedMediaType is response for ChampionMasteryV4GetTopChampionMasteriesByPUUID operation.
type ChampionMasteryV4GetTopChampionMasteriesByPUUIDUnsupportedMediaType struct{}

func (*ChampionMasteryV4GetTopChampionMasteriesByPUUIDUnsupportedMediaType) championMasteryV4GetTopChampionMasteriesByPUUIDRes() {
}

// This object contains required next season milestone information.
// Ref: #/components/schemas/champion-mastery-v4.NextSeasonMilestonesDto
type ChampionMasteryV4NextSeasonMilestonesDto struct {
	RequireGradeCounts ChampionMasteryV4NextSeasonMilestonesDtoRequireGradeCounts `json:"requireGradeCounts"`
	// Reward marks.
	RewardMarks int32 `json:"rewardMarks"`
	// Bonus.
	Bonus bool `json:"bonus"`
	// Reward configuration.
	RewardConfig       OptChampionMasteryV4RewardConfigDto `json:"rewardConfig"`
	TotalGamesRequires int32                               `json:"totalGamesRequires"`
}

// GetRequireGradeCounts returns the value of RequireGradeCounts.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) GetRequireGradeCounts() ChampionMasteryV4NextSeasonMilestonesDtoRequireGradeCounts {
	return s.RequireGradeCounts
}

// GetRewardMarks returns the value of RewardMarks.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) GetRewardMarks() int32 {
	return s.RewardMarks
}

// GetBonus returns the value of Bonus.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) GetBonus() bool {
	return s.Bonus
}

// GetRewardConfig returns the value of RewardConfig.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) GetRewardConfig() OptChampionMasteryV4RewardConfigDto {
	return s.RewardConfig
}

// GetTotalGamesRequires returns the value of TotalGamesRequires.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) GetTotalGamesRequires() int32 {
	return s.TotalGamesRequires
}

// SetRequireGradeCounts sets the value of RequireGradeCounts.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) SetRequireGradeCounts(val ChampionMasteryV4NextSeasonMilestonesDtoRequireGradeCounts) {
	s.RequireGradeCounts = val
}

// SetRewardMarks sets the value of RewardMarks.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) SetRewardMarks(val int32) {
	s.RewardMarks = val
}

// SetBonus sets the value of Bonus.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) SetBonus(val bool) {
	s.Bonus = val
}

// SetRewardConfig sets the value of RewardConfig.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) SetRewardConfig(val OptChampionMasteryV4RewardConfigDto) {
	s.RewardConfig = val
}

// SetTotalGamesRequires sets the value of TotalGamesRequires.
func (s *ChampionMasteryV4NextSeasonMilestonesDto) SetTotalGamesRequires(val int32) {
	s.TotalGamesRequires = val
}

type ChampionMasteryV4NextSeasonMilestonesDtoRequireGradeCounts map[string]int32

func (s *ChampionMasteryV4NextSeasonMilestonesDtoRequireGradeCounts) init() ChampionMasteryV4NextSeasonMilestonesDtoRequireGradeCounts {
	m := *s
	if m == nil {
		m = map[string]int32{}
		*s = m
	}
	return m
}

// This object contains required reward config information.
// Ref: #/components/schemas/champion-mastery-v4.RewardConfigDto
type ChampionMasteryV4RewardConfigDto struct {
	// Reward value.
	RewardValue string `json:"rewardValue"`
	// Reward type.
	RewardType string `json:"rewardType"`
	// Maximun reward.
	MaximumReward int32 `json:"maximumReward"`
}

// GetRewardValue returns the value of RewardValue.
func (s *ChampionMasteryV4RewardConfigDto) GetRewardValue() string {
	return s.RewardValue
}

// GetRewardType returns the value of RewardType.
func (s *ChampionMasteryV4RewardConfigDto) GetRewardType() string {
	return s.RewardType
}

// GetMaximumReward returns the value of MaximumReward.
func (s *ChampionMasteryV4RewardConfigDto) GetMaximumReward() int32 {
	return s.MaximumReward
}

// SetRewardValue sets the value of RewardValue.
func (s *ChampionMasteryV4RewardConfigDto) SetRewardValue(val string) {
	s.RewardValue = val
}

// SetRewardType sets the value of RewardType.
func (s *ChampionMasteryV4RewardConfigDto) SetRewardType(val string) {
	s.RewardType = val
}

// SetMaximumReward sets the value of MaximumReward.
func (s *ChampionMasteryV4RewardConfigDto) SetMaximumReward(val int32) {
	s.MaximumReward = val
}

// Ref: #/components/schemas/champion-v3.ChampionInfo
type ChampionV3ChampionInfo struct {
	MaxNewPlayerLevel            int32   `json:"maxNewPlayerLevel"`
	FreeChampionIdsForNewPlayers []int32 `json:"freeChampionIdsForNewPlayers"`
	FreeChampionIds              []int32 `json:"freeChampionIds"`
}

// GetMaxNewPlayerLevel returns the value of MaxNewPlayerLevel.
func (s *ChampionV3ChampionInfo) GetMaxNewPlayerLevel() int32 {
	return s.MaxNewPlayerLevel
}

// GetFreeChampionIdsForNewPlayers returns the value of FreeChampionIdsForNewPlayers.
func (s *ChampionV3ChampionInfo) GetFreeChampionIdsForNewPlayers() []int32 {
	return s.FreeChampionIdsForNewPlayers
}

// GetFreeChampionIds returns the value of FreeChampionIds.
func (s *ChampionV3ChampionInfo) GetFreeChampionIds() []int32 {
	return s.FreeChampionIds
}

// SetMaxNewPlayerLevel sets the value of MaxNewPlayerLevel.
func (s *ChampionV3ChampionInfo) SetMaxNewPlayerLevel(val int32) {
	s.MaxNewPlayerLevel = val
}

// SetFreeChampionIdsForNewPlayers sets the value of FreeChampionIdsForNewPlayers.
func (s *ChampionV3ChampionInfo) SetFreeChampionIdsForNewPlayers(val []int32) {
	s.FreeChampionIdsForNewPlayers = val
}

// SetFreeChampionIds sets the value of FreeChampionIds.
func (s *ChampionV3ChampionInfo) SetFreeChampionIds(val []int32) {
	s.FreeChampionIds = val
}

func (*ChampionV3ChampionInfo) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoBadGateway is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoBadGateway struct{}

func (*ChampionV3GetChampionInfoBadGateway) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoBadRequest is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoBadRequest struct{}

func (*ChampionV3GetChampionInfoBadRequest) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoForbidden is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoForbidden struct{}

func (*ChampionV3GetChampionInfoForbidden) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoGatewayTimeout is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoGatewayTimeout struct{}

func (*ChampionV3GetChampionInfoGatewayTimeout) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoInternalServerError is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoInternalServerError struct{}

func (*ChampionV3GetChampionInfoInternalServerError) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoMethodNotAllowed is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoMethodNotAllowed struct{}

func (*ChampionV3GetChampionInfoMethodNotAllowed) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoNotFound is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoNotFound struct{}

func (*ChampionV3GetChampionInfoNotFound) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoServiceUnavailable is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoServiceUnavailable struct{}

func (*ChampionV3GetChampionInfoServiceUnavailable) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoTooManyRequests is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoTooManyRequests struct{}

func (*ChampionV3GetChampionInfoTooManyRequests) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoUnauthorized is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoUnauthorized struct{}

func (*ChampionV3GetChampionInfoUnauthorized) championV3GetChampionInfoRes() {}

// ChampionV3GetChampionInfoUnsupportedMediaType is response for ChampionV3GetChampionInfo operation.
type ChampionV3GetChampionInfoUnsupportedMediaType struct{}

func (*ChampionV3GetChampionInfoUnsupportedMediaType) championV3GetChampionInfoRes() {}

// ClashV1GetPlayersByPUUIDBadGateway is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDBadGateway struct{}

func (*ClashV1GetPlayersByPUUIDBadGateway) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDBadRequest is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDBadRequest struct{}

func (*ClashV1GetPlayersByPUUIDBadRequest) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDForbidden is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDForbidden struct{}

func (*ClashV1GetPlayersByPUUIDForbidden) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDGatewayTimeout is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDGatewayTimeout struct{}

func (*ClashV1GetPlayersByPUUIDGatewayTimeout) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDInternalServerError is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDInternalServerError struct{}

func (*ClashV1GetPlayersByPUUIDInternalServerError) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDMethodNotAllowed is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDMethodNotAllowed struct{}

func (*ClashV1GetPlayersByPUUIDMethodNotAllowed) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDNotFound is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDNotFound struct{}

func (*ClashV1GetPlayersByPUUIDNotFound) clashV1GetPlayersByPUUIDRes() {}

type ClashV1GetPlayersByPUUIDOKApplicationJSON []ClashV1PlayerDto

func (*ClashV1GetPlayersByPUUIDOKApplicationJSON) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDServiceUnavailable is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDServiceUnavailable struct{}

func (*ClashV1GetPlayersByPUUIDServiceUnavailable) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDTooManyRequests is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDTooManyRequests struct{}

func (*ClashV1GetPlayersByPUUIDTooManyRequests) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDUnauthorized is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDUnauthorized struct{}

func (*ClashV1GetPlayersByPUUIDUnauthorized) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetPlayersByPUUIDUnsupportedMediaType is response for ClashV1GetPlayersByPUUID operation.
type ClashV1GetPlayersByPUUIDUnsupportedMediaType struct{}

func (*ClashV1GetPlayersByPUUIDUnsupportedMediaType) clashV1GetPlayersByPUUIDRes() {}

// ClashV1GetTeamByIdBadGateway is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdBadGateway struct{}

func (*ClashV1GetTeamByIdBadGateway) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdBadRequest is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdBadRequest struct{}

func (*ClashV1GetTeamByIdBadRequest) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdForbidden is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdForbidden struct{}

func (*ClashV1GetTeamByIdForbidden) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdGatewayTimeout is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdGatewayTimeout struct{}

func (*ClashV1GetTeamByIdGatewayTimeout) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdInternalServerError is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdInternalServerError struct{}

func (*ClashV1GetTeamByIdInternalServerError) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdMethodNotAllowed is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdMethodNotAllowed struct{}

func (*ClashV1GetTeamByIdMethodNotAllowed) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdNotFound is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdNotFound struct{}

func (*ClashV1GetTeamByIdNotFound) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdServiceUnavailable is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdServiceUnavailable struct{}

func (*ClashV1GetTeamByIdServiceUnavailable) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdTooManyRequests is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdTooManyRequests struct{}

func (*ClashV1GetTeamByIdTooManyRequests) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdUnauthorized is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdUnauthorized struct{}

func (*ClashV1GetTeamByIdUnauthorized) clashV1GetTeamByIdRes() {}

// ClashV1GetTeamByIdUnsupportedMediaType is response for ClashV1GetTeamById operation.
type ClashV1GetTeamByIdUnsupportedMediaType struct{}

func (*ClashV1GetTeamByIdUnsupportedMediaType) clashV1GetTeamByIdRes() {}

// ClashV1GetTournamentByIdBadGateway is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdBadGateway struct{}

func (*ClashV1GetTournamentByIdBadGateway) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdBadRequest is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdBadRequest struct{}

func (*ClashV1GetTournamentByIdBadRequest) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdForbidden is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdForbidden struct{}

func (*ClashV1GetTournamentByIdForbidden) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdGatewayTimeout is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdGatewayTimeout struct{}

func (*ClashV1GetTournamentByIdGatewayTimeout) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdInternalServerError is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdInternalServerError struct{}

func (*ClashV1GetTournamentByIdInternalServerError) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdMethodNotAllowed is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdMethodNotAllowed struct{}

func (*ClashV1GetTournamentByIdMethodNotAllowed) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdNotFound is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdNotFound struct{}

func (*ClashV1GetTournamentByIdNotFound) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdServiceUnavailable is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdServiceUnavailable struct{}

func (*ClashV1GetTournamentByIdServiceUnavailable) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdTooManyRequests is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdTooManyRequests struct{}

func (*ClashV1GetTournamentByIdTooManyRequests) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdUnauthorized is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdUnauthorized struct{}

func (*ClashV1GetTournamentByIdUnauthorized) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByIdUnsupportedMediaType is response for ClashV1GetTournamentById operation.
type ClashV1GetTournamentByIdUnsupportedMediaType struct{}

func (*ClashV1GetTournamentByIdUnsupportedMediaType) clashV1GetTournamentByIdRes() {}

// ClashV1GetTournamentByTeamBadGateway is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamBadGateway struct{}

func (*ClashV1GetTournamentByTeamBadGateway) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamBadRequest is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamBadRequest struct{}

func (*ClashV1GetTournamentByTeamBadRequest) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamForbidden is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamForbidden struct{}

func (*ClashV1GetTournamentByTeamForbidden) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamGatewayTimeout is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamGatewayTimeout struct{}

func (*ClashV1GetTournamentByTeamGatewayTimeout) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamInternalServerError is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamInternalServerError struct{}

func (*ClashV1GetTournamentByTeamInternalServerError) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamMethodNotAllowed is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamMethodNotAllowed struct{}

func (*ClashV1GetTournamentByTeamMethodNotAllowed) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamNotFound is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamNotFound struct{}

func (*ClashV1GetTournamentByTeamNotFound) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamServiceUnavailable is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamServiceUnavailable struct{}

func (*ClashV1GetTournamentByTeamServiceUnavailable) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamTooManyRequests is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamTooManyRequests struct{}

func (*ClashV1GetTournamentByTeamTooManyRequests) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamUnauthorized is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamUnauthorized struct{}

func (*ClashV1GetTournamentByTeamUnauthorized) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentByTeamUnsupportedMediaType is response for ClashV1GetTournamentByTeam operation.
type ClashV1GetTournamentByTeamUnsupportedMediaType struct{}

func (*ClashV1GetTournamentByTeamUnsupportedMediaType) clashV1GetTournamentByTeamRes() {}

// ClashV1GetTournamentsBadGateway is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsBadGateway struct{}

func (*ClashV1GetTournamentsBadGateway) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsBadRequest is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsBadRequest struct{}

func (*ClashV1GetTournamentsBadRequest) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsForbidden is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsForbidden struct{}

func (*ClashV1GetTournamentsForbidden) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsGatewayTimeout is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsGatewayTimeout struct{}

func (*ClashV1GetTournamentsGatewayTimeout) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsInternalServerError is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsInternalServerError struct{}

func (*ClashV1GetTournamentsInternalServerError) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsMethodNotAllowed is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsMethodNotAllowed struct{}

func (*ClashV1GetTournamentsMethodNotAllowed) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsNotFound is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsNotFound struct{}

func (*ClashV1GetTournamentsNotFound) clashV1GetTournamentsRes() {}

type ClashV1GetTournamentsOKApplicationJSON []ClashV1TournamentDto

func (*ClashV1GetTournamentsOKApplicationJSON) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsServiceUnavailable is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsServiceUnavailable struct{}

func (*ClashV1GetTournamentsServiceUnavailable) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsTooManyRequests is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsTooManyRequests struct{}

func (*ClashV1GetTournamentsTooManyRequests) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsUnauthorized is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsUnauthorized struct{}

func (*ClashV1GetTournamentsUnauthorized) clashV1GetTournamentsRes() {}

// ClashV1GetTournamentsUnsupportedMediaType is response for ClashV1GetTournaments operation.
type ClashV1GetTournamentsUnsupportedMediaType struct{}

func (*ClashV1GetTournamentsUnsupportedMediaType) clashV1GetTournamentsRes() {}

// Ref: #/components/schemas/clash-v1.PlayerDto
type ClashV1PlayerDto struct {
	Puuid  string    `json:"puuid"`
	TeamId OptString `json:"teamId"`
	// (Legal values:  UNSELECTED,  FILL,  TOP,  JUNGLE,  MIDDLE,  BOTTOM,  UTILITY).
	Position ClashV1PlayerDtoPosition `json:"position"`
	// (Legal values:  CAPTAIN,  MEMBER).
	Role ClashV1PlayerDtoRole `json:"role"`
}

// GetPuuid returns the value of Puuid.
func (s *ClashV1PlayerDto) GetPuuid() string {
	return s.Puuid
}

// GetTeamId returns the value of TeamId.
func (s *ClashV1PlayerDto) GetTeamId() OptString {
	return s.TeamId
}

// GetPosition returns the value of Position.
func (s *ClashV1PlayerDto) GetPosition() ClashV1PlayerDtoPosition {
	return s.Position
}

// GetRole returns the value of Role.
func (s *ClashV1PlayerDto) GetRole() ClashV1PlayerDtoRole {
	return s.Role
}

// SetPuuid sets the value of Puuid.
func (s *ClashV1PlayerDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetTeamId sets the value of TeamId.
func (s *ClashV1PlayerDto) SetTeamId(val OptString) {
	s.TeamId = val
}

// SetPosition sets the value of Position.
func (s *ClashV1PlayerDto) SetPosition(val ClashV1PlayerDtoPosition) {
	s.Position = val
}

// SetRole sets the value of Role.
func (s *ClashV1PlayerDto) SetRole(val ClashV1PlayerDtoRole) {
	s.Role = val
}

// (Legal values:  UNSELECTED,  FILL,  TOP,  JUNGLE,  MIDDLE,  BOTTOM,  UTILITY).
type ClashV1PlayerDtoPosition string

const (
	ClashV1PlayerDtoPositionUNSELECTED ClashV1PlayerDtoPosition = "UNSELECTED"
	ClashV1PlayerDtoPositionFILL       ClashV1PlayerDtoPosition = "FILL"
	ClashV1PlayerDtoPositionTOP        ClashV1PlayerDtoPosition = "TOP"
	ClashV1PlayerDtoPositionJUNGLE     ClashV1PlayerDtoPosition = "JUNGLE"
	ClashV1PlayerDtoPositionMIDDLE     ClashV1PlayerDtoPosition = "MIDDLE"
	ClashV1PlayerDtoPositionBOTTOM     ClashV1PlayerDtoPosition = "BOTTOM"
	ClashV1PlayerDtoPositionUTILITY    ClashV1PlayerDtoPosition = "UTILITY"
)

// AllValues returns all ClashV1PlayerDtoPosition values.
func (ClashV1PlayerDtoPosition) AllValues() []ClashV1PlayerDtoPosition {
	return []ClashV1PlayerDtoPosition{
		ClashV1PlayerDtoPositionUNSELECTED,
		ClashV1PlayerDtoPositionFILL,
		ClashV1PlayerDtoPositionTOP,
		ClashV1PlayerDtoPositionJUNGLE,
		ClashV1PlayerDtoPositionMIDDLE,
		ClashV1PlayerDtoPositionBOTTOM,
		ClashV1PlayerDtoPositionUTILITY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ClashV1PlayerDtoPosition) MarshalText() ([]byte, error) {
	switch s {
	case ClashV1PlayerDtoPositionUNSELECTED:
		return []byte(s), nil
	case ClashV1PlayerDtoPositionFILL:
		return []byte(s), nil
	case ClashV1PlayerDtoPositionTOP:
		return []byte(s), nil
	case ClashV1PlayerDtoPositionJUNGLE:
		return []byte(s), nil
	case ClashV1PlayerDtoPositionMIDDLE:
		return []byte(s), nil
	case ClashV1PlayerDtoPositionBOTTOM:
		return []byte(s), nil
	case ClashV1PlayerDtoPositionUTILITY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ClashV1PlayerDtoPosition) UnmarshalText(data []byte) error {
	switch ClashV1PlayerDtoPosition(data) {
	case ClashV1PlayerDtoPositionUNSELECTED:
		*s = ClashV1PlayerDtoPositionUNSELECTED
		return nil
	case ClashV1PlayerDtoPositionFILL:
		*s = ClashV1PlayerDtoPositionFILL
		return nil
	case ClashV1PlayerDtoPositionTOP:
		*s = ClashV1PlayerDtoPositionTOP
		return nil
	case ClashV1PlayerDtoPositionJUNGLE:
		*s = ClashV1PlayerDtoPositionJUNGLE
		return nil
	case ClashV1PlayerDtoPositionMIDDLE:
		*s = ClashV1PlayerDtoPositionMIDDLE
		return nil
	case ClashV1PlayerDtoPositionBOTTOM:
		*s = ClashV1PlayerDtoPositionBOTTOM
		return nil
	case ClashV1PlayerDtoPositionUTILITY:
		*s = ClashV1PlayerDtoPositionUTILITY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// (Legal values:  CAPTAIN,  MEMBER).
type ClashV1PlayerDtoRole string

const (
	ClashV1PlayerDtoRoleCAPTAIN ClashV1PlayerDtoRole = "CAPTAIN"
	ClashV1PlayerDtoRoleMEMBER  ClashV1PlayerDtoRole = "MEMBER"
)

// AllValues returns all ClashV1PlayerDtoRole values.
func (ClashV1PlayerDtoRole) AllValues() []ClashV1PlayerDtoRole {
	return []ClashV1PlayerDtoRole{
		ClashV1PlayerDtoRoleCAPTAIN,
		ClashV1PlayerDtoRoleMEMBER,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ClashV1PlayerDtoRole) MarshalText() ([]byte, error) {
	switch s {
	case ClashV1PlayerDtoRoleCAPTAIN:
		return []byte(s), nil
	case ClashV1PlayerDtoRoleMEMBER:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ClashV1PlayerDtoRole) UnmarshalText(data []byte) error {
	switch ClashV1PlayerDtoRole(data) {
	case ClashV1PlayerDtoRoleCAPTAIN:
		*s = ClashV1PlayerDtoRoleCAPTAIN
		return nil
	case ClashV1PlayerDtoRoleMEMBER:
		*s = ClashV1PlayerDtoRoleMEMBER
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/clash-v1.TeamDto
type ClashV1TeamDto struct {
	ID           string `json:"id"`
	TournamentId int32  `json:"tournamentId"`
	Name         string `json:"name"`
	IconId       int32  `json:"iconId"`
	Tier         int32  `json:"tier"`
	// Summoner ID of the team captain.
	Captain      string `json:"captain"`
	Abbreviation string `json:"abbreviation"`
	// Team members.
	Players []ClashV1PlayerDto `json:"players"`
}

// GetID returns the value of ID.
func (s *ClashV1TeamDto) GetID() string {
	return s.ID
}

// GetTournamentId returns the value of TournamentId.
func (s *ClashV1TeamDto) GetTournamentId() int32 {
	return s.TournamentId
}

// GetName returns the value of Name.
func (s *ClashV1TeamDto) GetName() string {
	return s.Name
}

// GetIconId returns the value of IconId.
func (s *ClashV1TeamDto) GetIconId() int32 {
	return s.IconId
}

// GetTier returns the value of Tier.
func (s *ClashV1TeamDto) GetTier() int32 {
	return s.Tier
}

// GetCaptain returns the value of Captain.
func (s *ClashV1TeamDto) GetCaptain() string {
	return s.Captain
}

// GetAbbreviation returns the value of Abbreviation.
func (s *ClashV1TeamDto) GetAbbreviation() string {
	return s.Abbreviation
}

// GetPlayers returns the value of Players.
func (s *ClashV1TeamDto) GetPlayers() []ClashV1PlayerDto {
	return s.Players
}

// SetID sets the value of ID.
func (s *ClashV1TeamDto) SetID(val string) {
	s.ID = val
}

// SetTournamentId sets the value of TournamentId.
func (s *ClashV1TeamDto) SetTournamentId(val int32) {
	s.TournamentId = val
}

// SetName sets the value of Name.
func (s *ClashV1TeamDto) SetName(val string) {
	s.Name = val
}

// SetIconId sets the value of IconId.
func (s *ClashV1TeamDto) SetIconId(val int32) {
	s.IconId = val
}

// SetTier sets the value of Tier.
func (s *ClashV1TeamDto) SetTier(val int32) {
	s.Tier = val
}

// SetCaptain sets the value of Captain.
func (s *ClashV1TeamDto) SetCaptain(val string) {
	s.Captain = val
}

// SetAbbreviation sets the value of Abbreviation.
func (s *ClashV1TeamDto) SetAbbreviation(val string) {
	s.Abbreviation = val
}

// SetPlayers sets the value of Players.
func (s *ClashV1TeamDto) SetPlayers(val []ClashV1PlayerDto) {
	s.Players = val
}

func (*ClashV1TeamDto) clashV1GetTeamByIdRes() {}

// Ref: #/components/schemas/clash-v1.TournamentDto
type ClashV1TournamentDto struct {
	ID               int32  `json:"id"`
	ThemeId          int32  `json:"themeId"`
	NameKey          string `json:"nameKey"`
	NameKeySecondary string `json:"nameKeySecondary"`
	// Tournament phase.
	Schedule []ClashV1TournamentPhaseDto `json:"schedule"`
}

// GetID returns the value of ID.
func (s *ClashV1TournamentDto) GetID() int32 {
	return s.ID
}

// GetThemeId returns the value of ThemeId.
func (s *ClashV1TournamentDto) GetThemeId() int32 {
	return s.ThemeId
}

// GetNameKey returns the value of NameKey.
func (s *ClashV1TournamentDto) GetNameKey() string {
	return s.NameKey
}

// GetNameKeySecondary returns the value of NameKeySecondary.
func (s *ClashV1TournamentDto) GetNameKeySecondary() string {
	return s.NameKeySecondary
}

// GetSchedule returns the value of Schedule.
func (s *ClashV1TournamentDto) GetSchedule() []ClashV1TournamentPhaseDto {
	return s.Schedule
}

// SetID sets the value of ID.
func (s *ClashV1TournamentDto) SetID(val int32) {
	s.ID = val
}

// SetThemeId sets the value of ThemeId.
func (s *ClashV1TournamentDto) SetThemeId(val int32) {
	s.ThemeId = val
}

// SetNameKey sets the value of NameKey.
func (s *ClashV1TournamentDto) SetNameKey(val string) {
	s.NameKey = val
}

// SetNameKeySecondary sets the value of NameKeySecondary.
func (s *ClashV1TournamentDto) SetNameKeySecondary(val string) {
	s.NameKeySecondary = val
}

// SetSchedule sets the value of Schedule.
func (s *ClashV1TournamentDto) SetSchedule(val []ClashV1TournamentPhaseDto) {
	s.Schedule = val
}

func (*ClashV1TournamentDto) clashV1GetTournamentByIdRes()   {}
func (*ClashV1TournamentDto) clashV1GetTournamentByTeamRes() {}

// Ref: #/components/schemas/clash-v1.TournamentPhaseDto
type ClashV1TournamentPhaseDto struct {
	ID               int32 `json:"id"`
	RegistrationTime int64 `json:"registrationTime"`
	StartTime        int64 `json:"startTime"`
	Cancelled        bool  `json:"cancelled"`
}

// GetID returns the value of ID.
func (s *ClashV1TournamentPhaseDto) GetID() int32 {
	return s.ID
}

// GetRegistrationTime returns the value of RegistrationTime.
func (s *ClashV1TournamentPhaseDto) GetRegistrationTime() int64 {
	return s.RegistrationTime
}

// GetStartTime returns the value of StartTime.
func (s *ClashV1TournamentPhaseDto) GetStartTime() int64 {
	return s.StartTime
}

// GetCancelled returns the value of Cancelled.
func (s *ClashV1TournamentPhaseDto) GetCancelled() bool {
	return s.Cancelled
}

// SetID sets the value of ID.
func (s *ClashV1TournamentPhaseDto) SetID(val int32) {
	s.ID = val
}

// SetRegistrationTime sets the value of RegistrationTime.
func (s *ClashV1TournamentPhaseDto) SetRegistrationTime(val int64) {
	s.RegistrationTime = val
}

// SetStartTime sets the value of StartTime.
func (s *ClashV1TournamentPhaseDto) SetStartTime(val int64) {
	s.StartTime = val
}

// SetCancelled sets the value of Cancelled.
func (s *ClashV1TournamentPhaseDto) SetCancelled(val bool) {
	s.Cancelled = val
}

// LeagueExpV4GetLeagueEntriesBadGateway is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesBadGateway struct{}

func (*LeagueExpV4GetLeagueEntriesBadGateway) leagueExpV4GetLeagueEntriesRes() {}

// LeagueExpV4GetLeagueEntriesBadRequest is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesBadRequest struct{}

func (*LeagueExpV4GetLeagueEntriesBadRequest) leagueExpV4GetLeagueEntriesRes() {}

type LeagueExpV4GetLeagueEntriesDivision string

const (
	LeagueExpV4GetLeagueEntriesDivisionI   LeagueExpV4GetLeagueEntriesDivision = "I"
	LeagueExpV4GetLeagueEntriesDivisionII  LeagueExpV4GetLeagueEntriesDivision = "II"
	LeagueExpV4GetLeagueEntriesDivisionIII LeagueExpV4GetLeagueEntriesDivision = "III"
	LeagueExpV4GetLeagueEntriesDivisionIV  LeagueExpV4GetLeagueEntriesDivision = "IV"
)

// AllValues returns all LeagueExpV4GetLeagueEntriesDivision values.
func (LeagueExpV4GetLeagueEntriesDivision) AllValues() []LeagueExpV4GetLeagueEntriesDivision {
	return []LeagueExpV4GetLeagueEntriesDivision{
		LeagueExpV4GetLeagueEntriesDivisionI,
		LeagueExpV4GetLeagueEntriesDivisionII,
		LeagueExpV4GetLeagueEntriesDivisionIII,
		LeagueExpV4GetLeagueEntriesDivisionIV,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueExpV4GetLeagueEntriesDivision) MarshalText() ([]byte, error) {
	switch s {
	case LeagueExpV4GetLeagueEntriesDivisionI:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesDivisionII:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesDivisionIII:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesDivisionIV:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueExpV4GetLeagueEntriesDivision) UnmarshalText(data []byte) error {
	switch LeagueExpV4GetLeagueEntriesDivision(data) {
	case LeagueExpV4GetLeagueEntriesDivisionI:
		*s = LeagueExpV4GetLeagueEntriesDivisionI
		return nil
	case LeagueExpV4GetLeagueEntriesDivisionII:
		*s = LeagueExpV4GetLeagueEntriesDivisionII
		return nil
	case LeagueExpV4GetLeagueEntriesDivisionIII:
		*s = LeagueExpV4GetLeagueEntriesDivisionIII
		return nil
	case LeagueExpV4GetLeagueEntriesDivisionIV:
		*s = LeagueExpV4GetLeagueEntriesDivisionIV
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueExpV4GetLeagueEntriesForbidden is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesForbidden struct{}

func (*LeagueExpV4GetLeagueEntriesForbidden) leagueExpV4GetLeagueEntriesRes() {}

// LeagueExpV4GetLeagueEntriesGatewayTimeout is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesGatewayTimeout struct{}

func (*LeagueExpV4GetLeagueEntriesGatewayTimeout) leagueExpV4GetLeagueEntriesRes() {}

// LeagueExpV4GetLeagueEntriesInternalServerError is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesInternalServerError struct{}

func (*LeagueExpV4GetLeagueEntriesInternalServerError) leagueExpV4GetLeagueEntriesRes() {}

// LeagueExpV4GetLeagueEntriesMethodNotAllowed is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesMethodNotAllowed struct{}

func (*LeagueExpV4GetLeagueEntriesMethodNotAllowed) leagueExpV4GetLeagueEntriesRes() {}

// LeagueExpV4GetLeagueEntriesNotFound is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesNotFound struct{}

func (*LeagueExpV4GetLeagueEntriesNotFound) leagueExpV4GetLeagueEntriesRes() {}

type LeagueExpV4GetLeagueEntriesOKApplicationJSON []LeagueExpV4LeagueEntryDTO

func (*LeagueExpV4GetLeagueEntriesOKApplicationJSON) leagueExpV4GetLeagueEntriesRes() {}

type LeagueExpV4GetLeagueEntriesQueue string

const (
	LeagueExpV4GetLeagueEntriesQueueRANKEDSOLO5x5 LeagueExpV4GetLeagueEntriesQueue = "RANKED_SOLO_5x5"
	LeagueExpV4GetLeagueEntriesQueueRANKEDTFT     LeagueExpV4GetLeagueEntriesQueue = "RANKED_TFT"
	LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXSR  LeagueExpV4GetLeagueEntriesQueue = "RANKED_FLEX_SR"
	LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXTT  LeagueExpV4GetLeagueEntriesQueue = "RANKED_FLEX_TT"
)

// AllValues returns all LeagueExpV4GetLeagueEntriesQueue values.
func (LeagueExpV4GetLeagueEntriesQueue) AllValues() []LeagueExpV4GetLeagueEntriesQueue {
	return []LeagueExpV4GetLeagueEntriesQueue{
		LeagueExpV4GetLeagueEntriesQueueRANKEDSOLO5x5,
		LeagueExpV4GetLeagueEntriesQueueRANKEDTFT,
		LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXSR,
		LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXTT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueExpV4GetLeagueEntriesQueue) MarshalText() ([]byte, error) {
	switch s {
	case LeagueExpV4GetLeagueEntriesQueueRANKEDSOLO5x5:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesQueueRANKEDTFT:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXSR:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXTT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueExpV4GetLeagueEntriesQueue) UnmarshalText(data []byte) error {
	switch LeagueExpV4GetLeagueEntriesQueue(data) {
	case LeagueExpV4GetLeagueEntriesQueueRANKEDSOLO5x5:
		*s = LeagueExpV4GetLeagueEntriesQueueRANKEDSOLO5x5
		return nil
	case LeagueExpV4GetLeagueEntriesQueueRANKEDTFT:
		*s = LeagueExpV4GetLeagueEntriesQueueRANKEDTFT
		return nil
	case LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXSR:
		*s = LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXSR
		return nil
	case LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXTT:
		*s = LeagueExpV4GetLeagueEntriesQueueRANKEDFLEXTT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueExpV4GetLeagueEntriesServiceUnavailable is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesServiceUnavailable struct{}

func (*LeagueExpV4GetLeagueEntriesServiceUnavailable) leagueExpV4GetLeagueEntriesRes() {}

type LeagueExpV4GetLeagueEntriesTier string

const (
	LeagueExpV4GetLeagueEntriesTierCHALLENGER  LeagueExpV4GetLeagueEntriesTier = "CHALLENGER"
	LeagueExpV4GetLeagueEntriesTierGRANDMASTER LeagueExpV4GetLeagueEntriesTier = "GRANDMASTER"
	LeagueExpV4GetLeagueEntriesTierMASTER      LeagueExpV4GetLeagueEntriesTier = "MASTER"
	LeagueExpV4GetLeagueEntriesTierDIAMOND     LeagueExpV4GetLeagueEntriesTier = "DIAMOND"
	LeagueExpV4GetLeagueEntriesTierEMERALD     LeagueExpV4GetLeagueEntriesTier = "EMERALD"
	LeagueExpV4GetLeagueEntriesTierPLATINUM    LeagueExpV4GetLeagueEntriesTier = "PLATINUM"
	LeagueExpV4GetLeagueEntriesTierGOLD        LeagueExpV4GetLeagueEntriesTier = "GOLD"
	LeagueExpV4GetLeagueEntriesTierSILVER      LeagueExpV4GetLeagueEntriesTier = "SILVER"
	LeagueExpV4GetLeagueEntriesTierBRONZE      LeagueExpV4GetLeagueEntriesTier = "BRONZE"
	LeagueExpV4GetLeagueEntriesTierIRON        LeagueExpV4GetLeagueEntriesTier = "IRON"
)

// AllValues returns all LeagueExpV4GetLeagueEntriesTier values.
func (LeagueExpV4GetLeagueEntriesTier) AllValues() []LeagueExpV4GetLeagueEntriesTier {
	return []LeagueExpV4GetLeagueEntriesTier{
		LeagueExpV4GetLeagueEntriesTierCHALLENGER,
		LeagueExpV4GetLeagueEntriesTierGRANDMASTER,
		LeagueExpV4GetLeagueEntriesTierMASTER,
		LeagueExpV4GetLeagueEntriesTierDIAMOND,
		LeagueExpV4GetLeagueEntriesTierEMERALD,
		LeagueExpV4GetLeagueEntriesTierPLATINUM,
		LeagueExpV4GetLeagueEntriesTierGOLD,
		LeagueExpV4GetLeagueEntriesTierSILVER,
		LeagueExpV4GetLeagueEntriesTierBRONZE,
		LeagueExpV4GetLeagueEntriesTierIRON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueExpV4GetLeagueEntriesTier) MarshalText() ([]byte, error) {
	switch s {
	case LeagueExpV4GetLeagueEntriesTierCHALLENGER:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierGRANDMASTER:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierMASTER:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierDIAMOND:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierEMERALD:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierPLATINUM:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierGOLD:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierSILVER:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierBRONZE:
		return []byte(s), nil
	case LeagueExpV4GetLeagueEntriesTierIRON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueExpV4GetLeagueEntriesTier) UnmarshalText(data []byte) error {
	switch LeagueExpV4GetLeagueEntriesTier(data) {
	case LeagueExpV4GetLeagueEntriesTierCHALLENGER:
		*s = LeagueExpV4GetLeagueEntriesTierCHALLENGER
		return nil
	case LeagueExpV4GetLeagueEntriesTierGRANDMASTER:
		*s = LeagueExpV4GetLeagueEntriesTierGRANDMASTER
		return nil
	case LeagueExpV4GetLeagueEntriesTierMASTER:
		*s = LeagueExpV4GetLeagueEntriesTierMASTER
		return nil
	case LeagueExpV4GetLeagueEntriesTierDIAMOND:
		*s = LeagueExpV4GetLeagueEntriesTierDIAMOND
		return nil
	case LeagueExpV4GetLeagueEntriesTierEMERALD:
		*s = LeagueExpV4GetLeagueEntriesTierEMERALD
		return nil
	case LeagueExpV4GetLeagueEntriesTierPLATINUM:
		*s = LeagueExpV4GetLeagueEntriesTierPLATINUM
		return nil
	case LeagueExpV4GetLeagueEntriesTierGOLD:
		*s = LeagueExpV4GetLeagueEntriesTierGOLD
		return nil
	case LeagueExpV4GetLeagueEntriesTierSILVER:
		*s = LeagueExpV4GetLeagueEntriesTierSILVER
		return nil
	case LeagueExpV4GetLeagueEntriesTierBRONZE:
		*s = LeagueExpV4GetLeagueEntriesTierBRONZE
		return nil
	case LeagueExpV4GetLeagueEntriesTierIRON:
		*s = LeagueExpV4GetLeagueEntriesTierIRON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueExpV4GetLeagueEntriesTooManyRequests is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesTooManyRequests struct{}

func (*LeagueExpV4GetLeagueEntriesTooManyRequests) leagueExpV4GetLeagueEntriesRes() {}

// LeagueExpV4GetLeagueEntriesUnauthorized is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesUnauthorized struct{}

func (*LeagueExpV4GetLeagueEntriesUnauthorized) leagueExpV4GetLeagueEntriesRes() {}

// LeagueExpV4GetLeagueEntriesUnsupportedMediaType is response for LeagueExpV4GetLeagueEntries operation.
type LeagueExpV4GetLeagueEntriesUnsupportedMediaType struct{}

func (*LeagueExpV4GetLeagueEntriesUnsupportedMediaType) leagueExpV4GetLeagueEntriesRes() {}

// Ref: #/components/schemas/league-exp-v4.LeagueEntryDTO
type LeagueExpV4LeagueEntryDTO struct {
	LeagueId string `json:"leagueId"`
	// Player's summonerId (Encrypted).
	SummonerId OptString `json:"summonerId"`
	// Player's encrypted puuid.
	Puuid     string `json:"puuid"`
	QueueType string `json:"queueType"`
	Tier      string `json:"tier"`
	// The player's division within a tier.
	Rank         string `json:"rank"`
	LeaguePoints int32  `json:"leaguePoints"`
	// Winning team on Summoners Rift. First placement in Teamfight Tactics.
	Wins int32 `json:"wins"`
	// Losing team on Summoners Rift. Second through eighth placement in Teamfight Tactics.
	Losses     int32                       `json:"losses"`
	HotStreak  bool                        `json:"hotStreak"`
	Veteran    bool                        `json:"veteran"`
	FreshBlood bool                        `json:"freshBlood"`
	Inactive   bool                        `json:"inactive"`
	MiniSeries OptLeagueExpV4MiniSeriesDTO `json:"miniSeries"`
}

// GetLeagueId returns the value of LeagueId.
func (s *LeagueExpV4LeagueEntryDTO) GetLeagueId() string {
	return s.LeagueId
}

// GetSummonerId returns the value of SummonerId.
func (s *LeagueExpV4LeagueEntryDTO) GetSummonerId() OptString {
	return s.SummonerId
}

// GetPuuid returns the value of Puuid.
func (s *LeagueExpV4LeagueEntryDTO) GetPuuid() string {
	return s.Puuid
}

// GetQueueType returns the value of QueueType.
func (s *LeagueExpV4LeagueEntryDTO) GetQueueType() string {
	return s.QueueType
}

// GetTier returns the value of Tier.
func (s *LeagueExpV4LeagueEntryDTO) GetTier() string {
	return s.Tier
}

// GetRank returns the value of Rank.
func (s *LeagueExpV4LeagueEntryDTO) GetRank() string {
	return s.Rank
}

// GetLeaguePoints returns the value of LeaguePoints.
func (s *LeagueExpV4LeagueEntryDTO) GetLeaguePoints() int32 {
	return s.LeaguePoints
}

// GetWins returns the value of Wins.
func (s *LeagueExpV4LeagueEntryDTO) GetWins() int32 {
	return s.Wins
}

// GetLosses returns the value of Losses.
func (s *LeagueExpV4LeagueEntryDTO) GetLosses() int32 {
	return s.Losses
}

// GetHotStreak returns the value of HotStreak.
func (s *LeagueExpV4LeagueEntryDTO) GetHotStreak() bool {
	return s.HotStreak
}

// GetVeteran returns the value of Veteran.
func (s *LeagueExpV4LeagueEntryDTO) GetVeteran() bool {
	return s.Veteran
}

// GetFreshBlood returns the value of FreshBlood.
func (s *LeagueExpV4LeagueEntryDTO) GetFreshBlood() bool {
	return s.FreshBlood
}

// GetInactive returns the value of Inactive.
func (s *LeagueExpV4LeagueEntryDTO) GetInactive() bool {
	return s.Inactive
}

// GetMiniSeries returns the value of MiniSeries.
func (s *LeagueExpV4LeagueEntryDTO) GetMiniSeries() OptLeagueExpV4MiniSeriesDTO {
	return s.MiniSeries
}

// SetLeagueId sets the value of LeagueId.
func (s *LeagueExpV4LeagueEntryDTO) SetLeagueId(val string) {
	s.LeagueId = val
}

// SetSummonerId sets the value of SummonerId.
func (s *LeagueExpV4LeagueEntryDTO) SetSummonerId(val OptString) {
	s.SummonerId = val
}

// SetPuuid sets the value of Puuid.
func (s *LeagueExpV4LeagueEntryDTO) SetPuuid(val string) {
	s.Puuid = val
}

// SetQueueType sets the value of QueueType.
func (s *LeagueExpV4LeagueEntryDTO) SetQueueType(val string) {
	s.QueueType = val
}

// SetTier sets the value of Tier.
func (s *LeagueExpV4LeagueEntryDTO) SetTier(val string) {
	s.Tier = val
}

// SetRank sets the value of Rank.
func (s *LeagueExpV4LeagueEntryDTO) SetRank(val string) {
	s.Rank = val
}

// SetLeaguePoints sets the value of LeaguePoints.
func (s *LeagueExpV4LeagueEntryDTO) SetLeaguePoints(val int32) {
	s.LeaguePoints = val
}

// SetWins sets the value of Wins.
func (s *LeagueExpV4LeagueEntryDTO) SetWins(val int32) {
	s.Wins = val
}

// SetLosses sets the value of Losses.
func (s *LeagueExpV4LeagueEntryDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetHotStreak sets the value of HotStreak.
func (s *LeagueExpV4LeagueEntryDTO) SetHotStreak(val bool) {
	s.HotStreak = val
}

// SetVeteran sets the value of Veteran.
func (s *LeagueExpV4LeagueEntryDTO) SetVeteran(val bool) {
	s.Veteran = val
}

// SetFreshBlood sets the value of FreshBlood.
func (s *LeagueExpV4LeagueEntryDTO) SetFreshBlood(val bool) {
	s.FreshBlood = val
}

// SetInactive sets the value of Inactive.
func (s *LeagueExpV4LeagueEntryDTO) SetInactive(val bool) {
	s.Inactive = val
}

// SetMiniSeries sets the value of MiniSeries.
func (s *LeagueExpV4LeagueEntryDTO) SetMiniSeries(val OptLeagueExpV4MiniSeriesDTO) {
	s.MiniSeries = val
}

// Ref: #/components/schemas/league-exp-v4.MiniSeriesDTO
type LeagueExpV4MiniSeriesDTO struct {
	Losses   int32  `json:"losses"`
	Progress string `json:"progress"`
	Target   int32  `json:"target"`
	Wins     int32  `json:"wins"`
}

// GetLosses returns the value of Losses.
func (s *LeagueExpV4MiniSeriesDTO) GetLosses() int32 {
	return s.Losses
}

// GetProgress returns the value of Progress.
func (s *LeagueExpV4MiniSeriesDTO) GetProgress() string {
	return s.Progress
}

// GetTarget returns the value of Target.
func (s *LeagueExpV4MiniSeriesDTO) GetTarget() int32 {
	return s.Target
}

// GetWins returns the value of Wins.
func (s *LeagueExpV4MiniSeriesDTO) GetWins() int32 {
	return s.Wins
}

// SetLosses sets the value of Losses.
func (s *LeagueExpV4MiniSeriesDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetProgress sets the value of Progress.
func (s *LeagueExpV4MiniSeriesDTO) SetProgress(val string) {
	s.Progress = val
}

// SetTarget sets the value of Target.
func (s *LeagueExpV4MiniSeriesDTO) SetTarget(val int32) {
	s.Target = val
}

// SetWins sets the value of Wins.
func (s *LeagueExpV4MiniSeriesDTO) SetWins(val int32) {
	s.Wins = val
}

// LeagueV4GetChallengerLeagueBadGateway is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueBadGateway struct{}

func (*LeagueV4GetChallengerLeagueBadGateway) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueBadRequest is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueBadRequest struct{}

func (*LeagueV4GetChallengerLeagueBadRequest) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueForbidden is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueForbidden struct{}

func (*LeagueV4GetChallengerLeagueForbidden) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueGatewayTimeout is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueGatewayTimeout struct{}

func (*LeagueV4GetChallengerLeagueGatewayTimeout) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueInternalServerError is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueInternalServerError struct{}

func (*LeagueV4GetChallengerLeagueInternalServerError) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueMethodNotAllowed is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueMethodNotAllowed struct{}

func (*LeagueV4GetChallengerLeagueMethodNotAllowed) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueNotFound is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueNotFound struct{}

func (*LeagueV4GetChallengerLeagueNotFound) leagueV4GetChallengerLeagueRes() {}

type LeagueV4GetChallengerLeagueQueue string

const (
	LeagueV4GetChallengerLeagueQueueRANKEDSOLO5x5 LeagueV4GetChallengerLeagueQueue = "RANKED_SOLO_5x5"
	LeagueV4GetChallengerLeagueQueueRANKEDFLEXSR  LeagueV4GetChallengerLeagueQueue = "RANKED_FLEX_SR"
	LeagueV4GetChallengerLeagueQueueRANKEDFLEXTT  LeagueV4GetChallengerLeagueQueue = "RANKED_FLEX_TT"
)

// AllValues returns all LeagueV4GetChallengerLeagueQueue values.
func (LeagueV4GetChallengerLeagueQueue) AllValues() []LeagueV4GetChallengerLeagueQueue {
	return []LeagueV4GetChallengerLeagueQueue{
		LeagueV4GetChallengerLeagueQueueRANKEDSOLO5x5,
		LeagueV4GetChallengerLeagueQueueRANKEDFLEXSR,
		LeagueV4GetChallengerLeagueQueueRANKEDFLEXTT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueV4GetChallengerLeagueQueue) MarshalText() ([]byte, error) {
	switch s {
	case LeagueV4GetChallengerLeagueQueueRANKEDSOLO5x5:
		return []byte(s), nil
	case LeagueV4GetChallengerLeagueQueueRANKEDFLEXSR:
		return []byte(s), nil
	case LeagueV4GetChallengerLeagueQueueRANKEDFLEXTT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueV4GetChallengerLeagueQueue) UnmarshalText(data []byte) error {
	switch LeagueV4GetChallengerLeagueQueue(data) {
	case LeagueV4GetChallengerLeagueQueueRANKEDSOLO5x5:
		*s = LeagueV4GetChallengerLeagueQueueRANKEDSOLO5x5
		return nil
	case LeagueV4GetChallengerLeagueQueueRANKEDFLEXSR:
		*s = LeagueV4GetChallengerLeagueQueueRANKEDFLEXSR
		return nil
	case LeagueV4GetChallengerLeagueQueueRANKEDFLEXTT:
		*s = LeagueV4GetChallengerLeagueQueueRANKEDFLEXTT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueV4GetChallengerLeagueServiceUnavailable is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueServiceUnavailable struct{}

func (*LeagueV4GetChallengerLeagueServiceUnavailable) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueTooManyRequests is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueTooManyRequests struct{}

func (*LeagueV4GetChallengerLeagueTooManyRequests) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueUnauthorized is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueUnauthorized struct{}

func (*LeagueV4GetChallengerLeagueUnauthorized) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetChallengerLeagueUnsupportedMediaType is response for LeagueV4GetChallengerLeague operation.
type LeagueV4GetChallengerLeagueUnsupportedMediaType struct{}

func (*LeagueV4GetChallengerLeagueUnsupportedMediaType) leagueV4GetChallengerLeagueRes() {}

// LeagueV4GetGrandmasterLeagueBadGateway is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueBadGateway struct{}

func (*LeagueV4GetGrandmasterLeagueBadGateway) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueBadRequest is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueBadRequest struct{}

func (*LeagueV4GetGrandmasterLeagueBadRequest) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueForbidden is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueForbidden struct{}

func (*LeagueV4GetGrandmasterLeagueForbidden) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueGatewayTimeout is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueGatewayTimeout struct{}

func (*LeagueV4GetGrandmasterLeagueGatewayTimeout) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueInternalServerError is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueInternalServerError struct{}

func (*LeagueV4GetGrandmasterLeagueInternalServerError) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueMethodNotAllowed is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueMethodNotAllowed struct{}

func (*LeagueV4GetGrandmasterLeagueMethodNotAllowed) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueNotFound is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueNotFound struct{}

func (*LeagueV4GetGrandmasterLeagueNotFound) leagueV4GetGrandmasterLeagueRes() {}

type LeagueV4GetGrandmasterLeagueQueue string

const (
	LeagueV4GetGrandmasterLeagueQueueRANKEDSOLO5x5 LeagueV4GetGrandmasterLeagueQueue = "RANKED_SOLO_5x5"
	LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXSR  LeagueV4GetGrandmasterLeagueQueue = "RANKED_FLEX_SR"
	LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXTT  LeagueV4GetGrandmasterLeagueQueue = "RANKED_FLEX_TT"
)

// AllValues returns all LeagueV4GetGrandmasterLeagueQueue values.
func (LeagueV4GetGrandmasterLeagueQueue) AllValues() []LeagueV4GetGrandmasterLeagueQueue {
	return []LeagueV4GetGrandmasterLeagueQueue{
		LeagueV4GetGrandmasterLeagueQueueRANKEDSOLO5x5,
		LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXSR,
		LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXTT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueV4GetGrandmasterLeagueQueue) MarshalText() ([]byte, error) {
	switch s {
	case LeagueV4GetGrandmasterLeagueQueueRANKEDSOLO5x5:
		return []byte(s), nil
	case LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXSR:
		return []byte(s), nil
	case LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXTT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueV4GetGrandmasterLeagueQueue) UnmarshalText(data []byte) error {
	switch LeagueV4GetGrandmasterLeagueQueue(data) {
	case LeagueV4GetGrandmasterLeagueQueueRANKEDSOLO5x5:
		*s = LeagueV4GetGrandmasterLeagueQueueRANKEDSOLO5x5
		return nil
	case LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXSR:
		*s = LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXSR
		return nil
	case LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXTT:
		*s = LeagueV4GetGrandmasterLeagueQueueRANKEDFLEXTT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueV4GetGrandmasterLeagueServiceUnavailable is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueServiceUnavailable struct{}

func (*LeagueV4GetGrandmasterLeagueServiceUnavailable) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueTooManyRequests is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueTooManyRequests struct{}

func (*LeagueV4GetGrandmasterLeagueTooManyRequests) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueUnauthorized is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueUnauthorized struct{}

func (*LeagueV4GetGrandmasterLeagueUnauthorized) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetGrandmasterLeagueUnsupportedMediaType is response for LeagueV4GetGrandmasterLeague operation.
type LeagueV4GetGrandmasterLeagueUnsupportedMediaType struct{}

func (*LeagueV4GetGrandmasterLeagueUnsupportedMediaType) leagueV4GetGrandmasterLeagueRes() {}

// LeagueV4GetLeagueByIdBadGateway is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdBadGateway struct{}

func (*LeagueV4GetLeagueByIdBadGateway) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdBadRequest is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdBadRequest struct{}

func (*LeagueV4GetLeagueByIdBadRequest) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdForbidden is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdForbidden struct{}

func (*LeagueV4GetLeagueByIdForbidden) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdGatewayTimeout is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdGatewayTimeout struct{}

func (*LeagueV4GetLeagueByIdGatewayTimeout) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdInternalServerError is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdInternalServerError struct{}

func (*LeagueV4GetLeagueByIdInternalServerError) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdMethodNotAllowed is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdMethodNotAllowed struct{}

func (*LeagueV4GetLeagueByIdMethodNotAllowed) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdNotFound is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdNotFound struct{}

func (*LeagueV4GetLeagueByIdNotFound) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdServiceUnavailable is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdServiceUnavailable struct{}

func (*LeagueV4GetLeagueByIdServiceUnavailable) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdTooManyRequests is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdTooManyRequests struct{}

func (*LeagueV4GetLeagueByIdTooManyRequests) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdUnauthorized is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdUnauthorized struct{}

func (*LeagueV4GetLeagueByIdUnauthorized) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueByIdUnsupportedMediaType is response for LeagueV4GetLeagueById operation.
type LeagueV4GetLeagueByIdUnsupportedMediaType struct{}

func (*LeagueV4GetLeagueByIdUnsupportedMediaType) leagueV4GetLeagueByIdRes() {}

// LeagueV4GetLeagueEntriesBadGateway is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesBadGateway struct{}

func (*LeagueV4GetLeagueEntriesBadGateway) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesBadRequest is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesBadRequest struct{}

func (*LeagueV4GetLeagueEntriesBadRequest) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesByPUUIDBadGateway is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDBadGateway struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDBadGateway) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDBadRequest is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDBadRequest struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDBadRequest) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDForbidden is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDForbidden struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDForbidden) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDGatewayTimeout is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDGatewayTimeout struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDGatewayTimeout) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDInternalServerError is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDInternalServerError struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDInternalServerError) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDMethodNotAllowed is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDMethodNotAllowed struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDMethodNotAllowed) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDNotFound is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDNotFound struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDNotFound) leagueV4GetLeagueEntriesByPUUIDRes() {}

type LeagueV4GetLeagueEntriesByPUUIDOKApplicationJSON []LeagueV4LeagueEntryDTO

func (*LeagueV4GetLeagueEntriesByPUUIDOKApplicationJSON) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDServiceUnavailable is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDServiceUnavailable struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDServiceUnavailable) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDTooManyRequests is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDTooManyRequests struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDTooManyRequests) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDUnauthorized is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDUnauthorized struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDUnauthorized) leagueV4GetLeagueEntriesByPUUIDRes() {}

// LeagueV4GetLeagueEntriesByPUUIDUnsupportedMediaType is response for LeagueV4GetLeagueEntriesByPUUID operation.
type LeagueV4GetLeagueEntriesByPUUIDUnsupportedMediaType struct{}

func (*LeagueV4GetLeagueEntriesByPUUIDUnsupportedMediaType) leagueV4GetLeagueEntriesByPUUIDRes() {}

type LeagueV4GetLeagueEntriesDivision string

const (
	LeagueV4GetLeagueEntriesDivisionI   LeagueV4GetLeagueEntriesDivision = "I"
	LeagueV4GetLeagueEntriesDivisionII  LeagueV4GetLeagueEntriesDivision = "II"
	LeagueV4GetLeagueEntriesDivisionIII LeagueV4GetLeagueEntriesDivision = "III"
	LeagueV4GetLeagueEntriesDivisionIV  LeagueV4GetLeagueEntriesDivision = "IV"
)

// AllValues returns all LeagueV4GetLeagueEntriesDivision values.
func (LeagueV4GetLeagueEntriesDivision) AllValues() []LeagueV4GetLeagueEntriesDivision {
	return []LeagueV4GetLeagueEntriesDivision{
		LeagueV4GetLeagueEntriesDivisionI,
		LeagueV4GetLeagueEntriesDivisionII,
		LeagueV4GetLeagueEntriesDivisionIII,
		LeagueV4GetLeagueEntriesDivisionIV,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueV4GetLeagueEntriesDivision) MarshalText() ([]byte, error) {
	switch s {
	case LeagueV4GetLeagueEntriesDivisionI:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesDivisionII:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesDivisionIII:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesDivisionIV:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueV4GetLeagueEntriesDivision) UnmarshalText(data []byte) error {
	switch LeagueV4GetLeagueEntriesDivision(data) {
	case LeagueV4GetLeagueEntriesDivisionI:
		*s = LeagueV4GetLeagueEntriesDivisionI
		return nil
	case LeagueV4GetLeagueEntriesDivisionII:
		*s = LeagueV4GetLeagueEntriesDivisionII
		return nil
	case LeagueV4GetLeagueEntriesDivisionIII:
		*s = LeagueV4GetLeagueEntriesDivisionIII
		return nil
	case LeagueV4GetLeagueEntriesDivisionIV:
		*s = LeagueV4GetLeagueEntriesDivisionIV
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueV4GetLeagueEntriesForbidden is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesForbidden struct{}

func (*LeagueV4GetLeagueEntriesForbidden) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesGatewayTimeout is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesGatewayTimeout struct{}

func (*LeagueV4GetLeagueEntriesGatewayTimeout) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesInternalServerError is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesInternalServerError struct{}

func (*LeagueV4GetLeagueEntriesInternalServerError) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesMethodNotAllowed is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesMethodNotAllowed struct{}

func (*LeagueV4GetLeagueEntriesMethodNotAllowed) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesNotFound is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesNotFound struct{}

func (*LeagueV4GetLeagueEntriesNotFound) leagueV4GetLeagueEntriesRes() {}

type LeagueV4GetLeagueEntriesOKApplicationJSON []LeagueV4LeagueEntryDTO

func (*LeagueV4GetLeagueEntriesOKApplicationJSON) leagueV4GetLeagueEntriesRes() {}

type LeagueV4GetLeagueEntriesQueue string

const (
	LeagueV4GetLeagueEntriesQueueRANKEDSOLO5x5 LeagueV4GetLeagueEntriesQueue = "RANKED_SOLO_5x5"
	LeagueV4GetLeagueEntriesQueueRANKEDFLEXSR  LeagueV4GetLeagueEntriesQueue = "RANKED_FLEX_SR"
	LeagueV4GetLeagueEntriesQueueRANKEDFLEXTT  LeagueV4GetLeagueEntriesQueue = "RANKED_FLEX_TT"
)

// AllValues returns all LeagueV4GetLeagueEntriesQueue values.
func (LeagueV4GetLeagueEntriesQueue) AllValues() []LeagueV4GetLeagueEntriesQueue {
	return []LeagueV4GetLeagueEntriesQueue{
		LeagueV4GetLeagueEntriesQueueRANKEDSOLO5x5,
		LeagueV4GetLeagueEntriesQueueRANKEDFLEXSR,
		LeagueV4GetLeagueEntriesQueueRANKEDFLEXTT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueV4GetLeagueEntriesQueue) MarshalText() ([]byte, error) {
	switch s {
	case LeagueV4GetLeagueEntriesQueueRANKEDSOLO5x5:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesQueueRANKEDFLEXSR:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesQueueRANKEDFLEXTT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueV4GetLeagueEntriesQueue) UnmarshalText(data []byte) error {
	switch LeagueV4GetLeagueEntriesQueue(data) {
	case LeagueV4GetLeagueEntriesQueueRANKEDSOLO5x5:
		*s = LeagueV4GetLeagueEntriesQueueRANKEDSOLO5x5
		return nil
	case LeagueV4GetLeagueEntriesQueueRANKEDFLEXSR:
		*s = LeagueV4GetLeagueEntriesQueueRANKEDFLEXSR
		return nil
	case LeagueV4GetLeagueEntriesQueueRANKEDFLEXTT:
		*s = LeagueV4GetLeagueEntriesQueueRANKEDFLEXTT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueV4GetLeagueEntriesServiceUnavailable is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesServiceUnavailable struct{}

func (*LeagueV4GetLeagueEntriesServiceUnavailable) leagueV4GetLeagueEntriesRes() {}

type LeagueV4GetLeagueEntriesTier string

const (
	LeagueV4GetLeagueEntriesTierDIAMOND  LeagueV4GetLeagueEntriesTier = "DIAMOND"
	LeagueV4GetLeagueEntriesTierEMERALD  LeagueV4GetLeagueEntriesTier = "EMERALD"
	LeagueV4GetLeagueEntriesTierPLATINUM LeagueV4GetLeagueEntriesTier = "PLATINUM"
	LeagueV4GetLeagueEntriesTierGOLD     LeagueV4GetLeagueEntriesTier = "GOLD"
	LeagueV4GetLeagueEntriesTierSILVER   LeagueV4GetLeagueEntriesTier = "SILVER"
	LeagueV4GetLeagueEntriesTierBRONZE   LeagueV4GetLeagueEntriesTier = "BRONZE"
	LeagueV4GetLeagueEntriesTierIRON     LeagueV4GetLeagueEntriesTier = "IRON"
)

// AllValues returns all LeagueV4GetLeagueEntriesTier values.
func (LeagueV4GetLeagueEntriesTier) AllValues() []LeagueV4GetLeagueEntriesTier {
	return []LeagueV4GetLeagueEntriesTier{
		LeagueV4GetLeagueEntriesTierDIAMOND,
		LeagueV4GetLeagueEntriesTierEMERALD,
		LeagueV4GetLeagueEntriesTierPLATINUM,
		LeagueV4GetLeagueEntriesTierGOLD,
		LeagueV4GetLeagueEntriesTierSILVER,
		LeagueV4GetLeagueEntriesTierBRONZE,
		LeagueV4GetLeagueEntriesTierIRON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueV4GetLeagueEntriesTier) MarshalText() ([]byte, error) {
	switch s {
	case LeagueV4GetLeagueEntriesTierDIAMOND:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesTierEMERALD:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesTierPLATINUM:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesTierGOLD:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesTierSILVER:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesTierBRONZE:
		return []byte(s), nil
	case LeagueV4GetLeagueEntriesTierIRON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueV4GetLeagueEntriesTier) UnmarshalText(data []byte) error {
	switch LeagueV4GetLeagueEntriesTier(data) {
	case LeagueV4GetLeagueEntriesTierDIAMOND:
		*s = LeagueV4GetLeagueEntriesTierDIAMOND
		return nil
	case LeagueV4GetLeagueEntriesTierEMERALD:
		*s = LeagueV4GetLeagueEntriesTierEMERALD
		return nil
	case LeagueV4GetLeagueEntriesTierPLATINUM:
		*s = LeagueV4GetLeagueEntriesTierPLATINUM
		return nil
	case LeagueV4GetLeagueEntriesTierGOLD:
		*s = LeagueV4GetLeagueEntriesTierGOLD
		return nil
	case LeagueV4GetLeagueEntriesTierSILVER:
		*s = LeagueV4GetLeagueEntriesTierSILVER
		return nil
	case LeagueV4GetLeagueEntriesTierBRONZE:
		*s = LeagueV4GetLeagueEntriesTierBRONZE
		return nil
	case LeagueV4GetLeagueEntriesTierIRON:
		*s = LeagueV4GetLeagueEntriesTierIRON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueV4GetLeagueEntriesTooManyRequests is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesTooManyRequests struct{}

func (*LeagueV4GetLeagueEntriesTooManyRequests) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesUnauthorized is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesUnauthorized struct{}

func (*LeagueV4GetLeagueEntriesUnauthorized) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetLeagueEntriesUnsupportedMediaType is response for LeagueV4GetLeagueEntries operation.
type LeagueV4GetLeagueEntriesUnsupportedMediaType struct{}

func (*LeagueV4GetLeagueEntriesUnsupportedMediaType) leagueV4GetLeagueEntriesRes() {}

// LeagueV4GetMasterLeagueBadGateway is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueBadGateway struct{}

func (*LeagueV4GetMasterLeagueBadGateway) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueBadRequest is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueBadRequest struct{}

func (*LeagueV4GetMasterLeagueBadRequest) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueForbidden is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueForbidden struct{}

func (*LeagueV4GetMasterLeagueForbidden) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueGatewayTimeout is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueGatewayTimeout struct{}

func (*LeagueV4GetMasterLeagueGatewayTimeout) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueInternalServerError is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueInternalServerError struct{}

func (*LeagueV4GetMasterLeagueInternalServerError) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueMethodNotAllowed is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueMethodNotAllowed struct{}

func (*LeagueV4GetMasterLeagueMethodNotAllowed) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueNotFound is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueNotFound struct{}

func (*LeagueV4GetMasterLeagueNotFound) leagueV4GetMasterLeagueRes() {}

type LeagueV4GetMasterLeagueQueue string

const (
	LeagueV4GetMasterLeagueQueueRANKEDSOLO5x5 LeagueV4GetMasterLeagueQueue = "RANKED_SOLO_5x5"
	LeagueV4GetMasterLeagueQueueRANKEDFLEXSR  LeagueV4GetMasterLeagueQueue = "RANKED_FLEX_SR"
	LeagueV4GetMasterLeagueQueueRANKEDFLEXTT  LeagueV4GetMasterLeagueQueue = "RANKED_FLEX_TT"
)

// AllValues returns all LeagueV4GetMasterLeagueQueue values.
func (LeagueV4GetMasterLeagueQueue) AllValues() []LeagueV4GetMasterLeagueQueue {
	return []LeagueV4GetMasterLeagueQueue{
		LeagueV4GetMasterLeagueQueueRANKEDSOLO5x5,
		LeagueV4GetMasterLeagueQueueRANKEDFLEXSR,
		LeagueV4GetMasterLeagueQueueRANKEDFLEXTT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LeagueV4GetMasterLeagueQueue) MarshalText() ([]byte, error) {
	switch s {
	case LeagueV4GetMasterLeagueQueueRANKEDSOLO5x5:
		return []byte(s), nil
	case LeagueV4GetMasterLeagueQueueRANKEDFLEXSR:
		return []byte(s), nil
	case LeagueV4GetMasterLeagueQueueRANKEDFLEXTT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LeagueV4GetMasterLeagueQueue) UnmarshalText(data []byte) error {
	switch LeagueV4GetMasterLeagueQueue(data) {
	case LeagueV4GetMasterLeagueQueueRANKEDSOLO5x5:
		*s = LeagueV4GetMasterLeagueQueueRANKEDSOLO5x5
		return nil
	case LeagueV4GetMasterLeagueQueueRANKEDFLEXSR:
		*s = LeagueV4GetMasterLeagueQueueRANKEDFLEXSR
		return nil
	case LeagueV4GetMasterLeagueQueueRANKEDFLEXTT:
		*s = LeagueV4GetMasterLeagueQueueRANKEDFLEXTT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LeagueV4GetMasterLeagueServiceUnavailable is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueServiceUnavailable struct{}

func (*LeagueV4GetMasterLeagueServiceUnavailable) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueTooManyRequests is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueTooManyRequests struct{}

func (*LeagueV4GetMasterLeagueTooManyRequests) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueUnauthorized is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueUnauthorized struct{}

func (*LeagueV4GetMasterLeagueUnauthorized) leagueV4GetMasterLeagueRes() {}

// LeagueV4GetMasterLeagueUnsupportedMediaType is response for LeagueV4GetMasterLeague operation.
type LeagueV4GetMasterLeagueUnsupportedMediaType struct{}

func (*LeagueV4GetMasterLeagueUnsupportedMediaType) leagueV4GetMasterLeagueRes() {}

// Ref: #/components/schemas/league-v4.LeagueEntryDTO
type LeagueV4LeagueEntryDTO struct {
	LeagueId OptString `json:"leagueId"`
	// Player's encrypted puuid.
	Puuid     string    `json:"puuid"`
	QueueType string    `json:"queueType"`
	Tier      OptString `json:"tier"`
	// The player's division within a tier.
	Rank         OptString `json:"rank"`
	LeaguePoints int32     `json:"leaguePoints"`
	// Winning team on Summoners Rift.
	Wins int32 `json:"wins"`
	// Losing team on Summoners Rift.
	Losses     int32                    `json:"losses"`
	HotStreak  bool                     `json:"hotStreak"`
	Veteran    bool                     `json:"veteran"`
	FreshBlood bool                     `json:"freshBlood"`
	Inactive   bool                     `json:"inactive"`
	MiniSeries OptLeagueV4MiniSeriesDTO `json:"miniSeries"`
	// Encrypted summoner ID. This field is deprecated and will be removed. Use `puuid` instead.
	SummonerId OptString `json:"summonerId"`
}

// GetLeagueId returns the value of LeagueId.
func (s *LeagueV4LeagueEntryDTO) GetLeagueId() OptString {
	return s.LeagueId
}

// GetPuuid returns the value of Puuid.
func (s *LeagueV4LeagueEntryDTO) GetPuuid() string {
	return s.Puuid
}

// GetQueueType returns the value of QueueType.
func (s *LeagueV4LeagueEntryDTO) GetQueueType() string {
	return s.QueueType
}

// GetTier returns the value of Tier.
func (s *LeagueV4LeagueEntryDTO) GetTier() OptString {
	return s.Tier
}

// GetRank returns the value of Rank.
func (s *LeagueV4LeagueEntryDTO) GetRank() OptString {
	return s.Rank
}

// GetLeaguePoints returns the value of LeaguePoints.
func (s *LeagueV4LeagueEntryDTO) GetLeaguePoints() int32 {
	return s.LeaguePoints
}

// GetWins returns the value of Wins.
func (s *LeagueV4LeagueEntryDTO) GetWins() int32 {
	return s.Wins
}

// GetLosses returns the value of Losses.
func (s *LeagueV4LeagueEntryDTO) GetLosses() int32 {
	return s.Losses
}

// GetHotStreak returns the value of HotStreak.
func (s *LeagueV4LeagueEntryDTO) GetHotStreak() bool {
	return s.HotStreak
}

// GetVeteran returns the value of Veteran.
func (s *LeagueV4LeagueEntryDTO) GetVeteran() bool {
	return s.Veteran
}

// GetFreshBlood returns the value of FreshBlood.
func (s *LeagueV4LeagueEntryDTO) GetFreshBlood() bool {
	return s.FreshBlood
}

// GetInactive returns the value of Inactive.
func (s *LeagueV4LeagueEntryDTO) GetInactive() bool {
	return s.Inactive
}

// GetMiniSeries returns the value of MiniSeries.
func (s *LeagueV4LeagueEntryDTO) GetMiniSeries() OptLeagueV4MiniSeriesDTO {
	return s.MiniSeries
}

// GetSummonerId returns the value of SummonerId.
func (s *LeagueV4LeagueEntryDTO) GetSummonerId() OptString {
	return s.SummonerId
}

// SetLeagueId sets the value of LeagueId.
func (s *LeagueV4LeagueEntryDTO) SetLeagueId(val OptString) {
	s.LeagueId = val
}

// SetPuuid sets the value of Puuid.
func (s *LeagueV4LeagueEntryDTO) SetPuuid(val string) {
	s.Puuid = val
}

// SetQueueType sets the value of QueueType.
func (s *LeagueV4LeagueEntryDTO) SetQueueType(val string) {
	s.QueueType = val
}

// SetTier sets the value of Tier.
func (s *LeagueV4LeagueEntryDTO) SetTier(val OptString) {
	s.Tier = val
}

// SetRank sets the value of Rank.
func (s *LeagueV4LeagueEntryDTO) SetRank(val OptString) {
	s.Rank = val
}

// SetLeaguePoints sets the value of LeaguePoints.
func (s *LeagueV4LeagueEntryDTO) SetLeaguePoints(val int32) {
	s.LeaguePoints = val
}

// SetWins sets the value of Wins.
func (s *LeagueV4LeagueEntryDTO) SetWins(val int32) {
	s.Wins = val
}

// SetLosses sets the value of Losses.
func (s *LeagueV4LeagueEntryDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetHotStreak sets the value of HotStreak.
func (s *LeagueV4LeagueEntryDTO) SetHotStreak(val bool) {
	s.HotStreak = val
}

// SetVeteran sets the value of Veteran.
func (s *LeagueV4LeagueEntryDTO) SetVeteran(val bool) {
	s.Veteran = val
}

// SetFreshBlood sets the value of FreshBlood.
func (s *LeagueV4LeagueEntryDTO) SetFreshBlood(val bool) {
	s.FreshBlood = val
}

// SetInactive sets the value of Inactive.
func (s *LeagueV4LeagueEntryDTO) SetInactive(val bool) {
	s.Inactive = val
}

// SetMiniSeries sets the value of MiniSeries.
func (s *LeagueV4LeagueEntryDTO) SetMiniSeries(val OptLeagueV4MiniSeriesDTO) {
	s.MiniSeries = val
}

// SetSummonerId sets the value of SummonerId.
func (s *LeagueV4LeagueEntryDTO) SetSummonerId(val OptString) {
	s.SummonerId = val
}

// Ref: #/components/schemas/league-v4.LeagueItemDTO
type LeagueV4LeagueItemDTO struct {
	FreshBlood bool `json:"freshBlood"`
	// Winning team on Summoners Rift.
	Wins         int32                    `json:"wins"`
	MiniSeries   OptLeagueV4MiniSeriesDTO `json:"miniSeries"`
	Inactive     bool                     `json:"inactive"`
	Veteran      bool                     `json:"veteran"`
	HotStreak    bool                     `json:"hotStreak"`
	Rank         string                   `json:"rank"`
	LeaguePoints int32                    `json:"leaguePoints"`
	// Losing team on Summoners Rift.
	Losses int32 `json:"losses"`
	// Player's encrypted puuid.
	Puuid string `json:"puuid"`
	// Encrypted summoner ID. This field is deprecated and will be removed. Use `puuid` instead.
	SummonerId OptString `json:"summonerId"`
}

// GetFreshBlood returns the value of FreshBlood.
func (s *LeagueV4LeagueItemDTO) GetFreshBlood() bool {
	return s.FreshBlood
}

// GetWins returns the value of Wins.
func (s *LeagueV4LeagueItemDTO) GetWins() int32 {
	return s.Wins
}

// GetMiniSeries returns the value of MiniSeries.
func (s *LeagueV4LeagueItemDTO) GetMiniSeries() OptLeagueV4MiniSeriesDTO {
	return s.MiniSeries
}

// GetInactive returns the value of Inactive.
func (s *LeagueV4LeagueItemDTO) GetInactive() bool {
	return s.Inactive
}

// GetVeteran returns the value of Veteran.
func (s *LeagueV4LeagueItemDTO) GetVeteran() bool {
	return s.Veteran
}

// GetHotStreak returns the value of HotStreak.
func (s *LeagueV4LeagueItemDTO) GetHotStreak() bool {
	return s.HotStreak
}

// GetRank returns the value of Rank.
func (s *LeagueV4LeagueItemDTO) GetRank() string {
	return s.Rank
}

// GetLeaguePoints returns the value of LeaguePoints.
func (s *LeagueV4LeagueItemDTO) GetLeaguePoints() int32 {
	return s.LeaguePoints
}

// GetLosses returns the value of Losses.
func (s *LeagueV4LeagueItemDTO) GetLosses() int32 {
	return s.Losses
}

// GetPuuid returns the value of Puuid.
func (s *LeagueV4LeagueItemDTO) GetPuuid() string {
	return s.Puuid
}

// GetSummonerId returns the value of SummonerId.
func (s *LeagueV4LeagueItemDTO) GetSummonerId() OptString {
	return s.SummonerId
}

// SetFreshBlood sets the value of FreshBlood.
func (s *LeagueV4LeagueItemDTO) SetFreshBlood(val bool) {
	s.FreshBlood = val
}

// SetWins sets the value of Wins.
func (s *LeagueV4LeagueItemDTO) SetWins(val int32) {
	s.Wins = val
}

// SetMiniSeries sets the value of MiniSeries.
func (s *LeagueV4LeagueItemDTO) SetMiniSeries(val OptLeagueV4MiniSeriesDTO) {
	s.MiniSeries = val
}

// SetInactive sets the value of Inactive.
func (s *LeagueV4LeagueItemDTO) SetInactive(val bool) {
	s.Inactive = val
}

// SetVeteran sets the value of Veteran.
func (s *LeagueV4LeagueItemDTO) SetVeteran(val bool) {
	s.Veteran = val
}

// SetHotStreak sets the value of HotStreak.
func (s *LeagueV4LeagueItemDTO) SetHotStreak(val bool) {
	s.HotStreak = val
}

// SetRank sets the value of Rank.
func (s *LeagueV4LeagueItemDTO) SetRank(val string) {
	s.Rank = val
}

// SetLeaguePoints sets the value of LeaguePoints.
func (s *LeagueV4LeagueItemDTO) SetLeaguePoints(val int32) {
	s.LeaguePoints = val
}

// SetLosses sets the value of Losses.
func (s *LeagueV4LeagueItemDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetPuuid sets the value of Puuid.
func (s *LeagueV4LeagueItemDTO) SetPuuid(val string) {
	s.Puuid = val
}

// SetSummonerId sets the value of SummonerId.
func (s *LeagueV4LeagueItemDTO) SetSummonerId(val OptString) {
	s.SummonerId = val
}

// Ref: #/components/schemas/league-v4.LeagueListDTO
type LeagueV4LeagueListDTO struct {
	LeagueId OptString               `json:"leagueId"`
	Entries  []LeagueV4LeagueItemDTO `json:"entries"`
	Tier     string                  `json:"tier"`
	Name     OptString               `json:"name"`
	Queue    OptString               `json:"queue"`
}

// GetLeagueId returns the value of LeagueId.
func (s *LeagueV4LeagueListDTO) GetLeagueId() OptString {
	return s.LeagueId
}

// GetEntries returns the value of Entries.
func (s *LeagueV4LeagueListDTO) GetEntries() []LeagueV4LeagueItemDTO {
	return s.Entries
}

// GetTier returns the value of Tier.
func (s *LeagueV4LeagueListDTO) GetTier() string {
	return s.Tier
}

// GetName returns the value of Name.
func (s *LeagueV4LeagueListDTO) GetName() OptString {
	return s.Name
}

// GetQueue returns the value of Queue.
func (s *LeagueV4LeagueListDTO) GetQueue() OptString {
	return s.Queue
}

// SetLeagueId sets the value of LeagueId.
func (s *LeagueV4LeagueListDTO) SetLeagueId(val OptString) {
	s.LeagueId = val
}

// SetEntries sets the value of Entries.
func (s *LeagueV4LeagueListDTO) SetEntries(val []LeagueV4LeagueItemDTO) {
	s.Entries = val
}

// SetTier sets the value of Tier.
func (s *LeagueV4LeagueListDTO) SetTier(val string) {
	s.Tier = val
}

// SetName sets the value of Name.
func (s *LeagueV4LeagueListDTO) SetName(val OptString) {
	s.Name = val
}

// SetQueue sets the value of Queue.
func (s *LeagueV4LeagueListDTO) SetQueue(val OptString) {
	s.Queue = val
}

func (*LeagueV4LeagueListDTO) leagueV4GetChallengerLeagueRes()  {}
func (*LeagueV4LeagueListDTO) leagueV4GetGrandmasterLeagueRes() {}
func (*LeagueV4LeagueListDTO) leagueV4GetLeagueByIdRes()        {}
func (*LeagueV4LeagueListDTO) leagueV4GetMasterLeagueRes()      {}

// Ref: #/components/schemas/league-v4.MiniSeriesDTO
type LeagueV4MiniSeriesDTO struct {
	Losses   int32  `json:"losses"`
	Progress string `json:"progress"`
	Target   int32  `json:"target"`
	Wins     int32  `json:"wins"`
}

// GetLosses returns the value of Losses.
func (s *LeagueV4MiniSeriesDTO) GetLosses() int32 {
	return s.Losses
}

// GetProgress returns the value of Progress.
func (s *LeagueV4MiniSeriesDTO) GetProgress() string {
	return s.Progress
}

// GetTarget returns the value of Target.
func (s *LeagueV4MiniSeriesDTO) GetTarget() int32 {
	return s.Target
}

// GetWins returns the value of Wins.
func (s *LeagueV4MiniSeriesDTO) GetWins() int32 {
	return s.Wins
}

// SetLosses sets the value of Losses.
func (s *LeagueV4MiniSeriesDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetProgress sets the value of Progress.
func (s *LeagueV4MiniSeriesDTO) SetProgress(val string) {
	s.Progress = val
}

// SetTarget sets the value of Target.
func (s *LeagueV4MiniSeriesDTO) SetTarget(val int32) {
	s.Target = val
}

// SetWins sets the value of Wins.
func (s *LeagueV4MiniSeriesDTO) SetWins(val int32) {
	s.Wins = val
}

// Ref: #/components/schemas/lol-challenges-v1.ApexPlayerInfoDto
type LolChallengesV1ApexPlayerInfoDto struct {
	Puuid    string  `json:"puuid"`
	Value    float64 `json:"value"`
	Position int32   `json:"position"`
}

// GetPuuid returns the value of Puuid.
func (s *LolChallengesV1ApexPlayerInfoDto) GetPuuid() string {
	return s.Puuid
}

// GetValue returns the value of Value.
func (s *LolChallengesV1ApexPlayerInfoDto) GetValue() float64 {
	return s.Value
}

// GetPosition returns the value of Position.
func (s *LolChallengesV1ApexPlayerInfoDto) GetPosition() int32 {
	return s.Position
}

// SetPuuid sets the value of Puuid.
func (s *LolChallengesV1ApexPlayerInfoDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetValue sets the value of Value.
func (s *LolChallengesV1ApexPlayerInfoDto) SetValue(val float64) {
	s.Value = val
}

// SetPosition sets the value of Position.
func (s *LolChallengesV1ApexPlayerInfoDto) SetPosition(val int32) {
	s.Position = val
}

// Ref: #/components/schemas/lol-challenges-v1.ChallengeConfigInfoDto
type LolChallengesV1ChallengeConfigInfoDto struct {
	ID             int64                                               `json:"id"`
	LocalizedNames LolChallengesV1ChallengeConfigInfoDtoLocalizedNames `json:"localizedNames"`
	// DISABLED - not visible and not calculated, HIDDEN - not visible, but calculated, ENABLED - visible
	// and calculated, ARCHIVED - visible, but not calculated.
	State LolChallengesV1ChallengeConfigInfoDtoState `json:"state"`
	// LIFETIME - stats are incremented without reset, SEASON - stats are accumulated by season and reset
	// at the beginning of new season.
	Tracking       OptLolChallengesV1ChallengeConfigInfoDtoTracking `json:"tracking"`
	StartTimestamp OptInt64                                         `json:"startTimestamp"`
	EndTimestamp   OptInt64                                         `json:"endTimestamp"`
	Leaderboard    bool                                             `json:"leaderboard"`
	Thresholds     LolChallengesV1ChallengeConfigInfoDtoThresholds  `json:"thresholds"`
}

// GetID returns the value of ID.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetID() int64 {
	return s.ID
}

// GetLocalizedNames returns the value of LocalizedNames.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetLocalizedNames() LolChallengesV1ChallengeConfigInfoDtoLocalizedNames {
	return s.LocalizedNames
}

// GetState returns the value of State.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetState() LolChallengesV1ChallengeConfigInfoDtoState {
	return s.State
}

// GetTracking returns the value of Tracking.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetTracking() OptLolChallengesV1ChallengeConfigInfoDtoTracking {
	return s.Tracking
}

// GetStartTimestamp returns the value of StartTimestamp.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetStartTimestamp() OptInt64 {
	return s.StartTimestamp
}

// GetEndTimestamp returns the value of EndTimestamp.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetEndTimestamp() OptInt64 {
	return s.EndTimestamp
}

// GetLeaderboard returns the value of Leaderboard.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetLeaderboard() bool {
	return s.Leaderboard
}

// GetThresholds returns the value of Thresholds.
func (s *LolChallengesV1ChallengeConfigInfoDto) GetThresholds() LolChallengesV1ChallengeConfigInfoDtoThresholds {
	return s.Thresholds
}

// SetID sets the value of ID.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetID(val int64) {
	s.ID = val
}

// SetLocalizedNames sets the value of LocalizedNames.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetLocalizedNames(val LolChallengesV1ChallengeConfigInfoDtoLocalizedNames) {
	s.LocalizedNames = val
}

// SetState sets the value of State.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetState(val LolChallengesV1ChallengeConfigInfoDtoState) {
	s.State = val
}

// SetTracking sets the value of Tracking.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetTracking(val OptLolChallengesV1ChallengeConfigInfoDtoTracking) {
	s.Tracking = val
}

// SetStartTimestamp sets the value of StartTimestamp.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetStartTimestamp(val OptInt64) {
	s.StartTimestamp = val
}

// SetEndTimestamp sets the value of EndTimestamp.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetEndTimestamp(val OptInt64) {
	s.EndTimestamp = val
}

// SetLeaderboard sets the value of Leaderboard.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetLeaderboard(val bool) {
	s.Leaderboard = val
}

// SetThresholds sets the value of Thresholds.
func (s *LolChallengesV1ChallengeConfigInfoDto) SetThresholds(val LolChallengesV1ChallengeConfigInfoDtoThresholds) {
	s.Thresholds = val
}

func (*LolChallengesV1ChallengeConfigInfoDto) lolChallengesV1GetChallengeConfigsRes() {}

type LolChallengesV1ChallengeConfigInfoDtoLocalizedNames map[string]LolChallengesV1ChallengeConfigInfoDtoLocalizedNamesItem

func (s *LolChallengesV1ChallengeConfigInfoDtoLocalizedNames) init() LolChallengesV1ChallengeConfigInfoDtoLocalizedNames {
	m := *s
	if m == nil {
		m = map[string]LolChallengesV1ChallengeConfigInfoDtoLocalizedNamesItem{}
		*s = m
	}
	return m
}

type LolChallengesV1ChallengeConfigInfoDtoLocalizedNamesItem map[string]string

func (s *LolChallengesV1ChallengeConfigInfoDtoLocalizedNamesItem) init() LolChallengesV1ChallengeConfigInfoDtoLocalizedNamesItem {
	m := *s
	if m == nil {
		m = map[string]string{}
		*s = m
	}
	return m
}

// DISABLED - not visible and not calculated, HIDDEN - not visible, but calculated, ENABLED - visible
// and calculated, ARCHIVED - visible, but not calculated.
type LolChallengesV1ChallengeConfigInfoDtoState string

const (
	LolChallengesV1ChallengeConfigInfoDtoStateDISABLED LolChallengesV1ChallengeConfigInfoDtoState = "DISABLED"
	LolChallengesV1ChallengeConfigInfoDtoStateHIDDEN   LolChallengesV1ChallengeConfigInfoDtoState = "HIDDEN"
	LolChallengesV1ChallengeConfigInfoDtoStateENABLED  LolChallengesV1ChallengeConfigInfoDtoState = "ENABLED"
	LolChallengesV1ChallengeConfigInfoDtoStateARCHIVED LolChallengesV1ChallengeConfigInfoDtoState = "ARCHIVED"
)

// AllValues returns all LolChallengesV1ChallengeConfigInfoDtoState values.
func (LolChallengesV1ChallengeConfigInfoDtoState) AllValues() []LolChallengesV1ChallengeConfigInfoDtoState {
	return []LolChallengesV1ChallengeConfigInfoDtoState{
		LolChallengesV1ChallengeConfigInfoDtoStateDISABLED,
		LolChallengesV1ChallengeConfigInfoDtoStateHIDDEN,
		LolChallengesV1ChallengeConfigInfoDtoStateENABLED,
		LolChallengesV1ChallengeConfigInfoDtoStateARCHIVED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolChallengesV1ChallengeConfigInfoDtoState) MarshalText() ([]byte, error) {
	switch s {
	case LolChallengesV1ChallengeConfigInfoDtoStateDISABLED:
		return []byte(s), nil
	case LolChallengesV1ChallengeConfigInfoDtoStateHIDDEN:
		return []byte(s), nil
	case LolChallengesV1ChallengeConfigInfoDtoStateENABLED:
		return []byte(s), nil
	case LolChallengesV1ChallengeConfigInfoDtoStateARCHIVED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolChallengesV1ChallengeConfigInfoDtoState) UnmarshalText(data []byte) error {
	switch LolChallengesV1ChallengeConfigInfoDtoState(data) {
	case LolChallengesV1ChallengeConfigInfoDtoStateDISABLED:
		*s = LolChallengesV1ChallengeConfigInfoDtoStateDISABLED
		return nil
	case LolChallengesV1ChallengeConfigInfoDtoStateHIDDEN:
		*s = LolChallengesV1ChallengeConfigInfoDtoStateHIDDEN
		return nil
	case LolChallengesV1ChallengeConfigInfoDtoStateENABLED:
		*s = LolChallengesV1ChallengeConfigInfoDtoStateENABLED
		return nil
	case LolChallengesV1ChallengeConfigInfoDtoStateARCHIVED:
		*s = LolChallengesV1ChallengeConfigInfoDtoStateARCHIVED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type LolChallengesV1ChallengeConfigInfoDtoThresholds map[string]float64

func (s *LolChallengesV1ChallengeConfigInfoDtoThresholds) init() LolChallengesV1ChallengeConfigInfoDtoThresholds {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

// LIFETIME - stats are incremented without reset, SEASON - stats are accumulated by season and reset
// at the beginning of new season.
type LolChallengesV1ChallengeConfigInfoDtoTracking string

const (
	LolChallengesV1ChallengeConfigInfoDtoTrackingLIFETIME LolChallengesV1ChallengeConfigInfoDtoTracking = "LIFETIME"
	LolChallengesV1ChallengeConfigInfoDtoTrackingSEASON   LolChallengesV1ChallengeConfigInfoDtoTracking = "SEASON"
)

// AllValues returns all LolChallengesV1ChallengeConfigInfoDtoTracking values.
func (LolChallengesV1ChallengeConfigInfoDtoTracking) AllValues() []LolChallengesV1ChallengeConfigInfoDtoTracking {
	return []LolChallengesV1ChallengeConfigInfoDtoTracking{
		LolChallengesV1ChallengeConfigInfoDtoTrackingLIFETIME,
		LolChallengesV1ChallengeConfigInfoDtoTrackingSEASON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolChallengesV1ChallengeConfigInfoDtoTracking) MarshalText() ([]byte, error) {
	switch s {
	case LolChallengesV1ChallengeConfigInfoDtoTrackingLIFETIME:
		return []byte(s), nil
	case LolChallengesV1ChallengeConfigInfoDtoTrackingSEASON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolChallengesV1ChallengeConfigInfoDtoTracking) UnmarshalText(data []byte) error {
	switch LolChallengesV1ChallengeConfigInfoDtoTracking(data) {
	case LolChallengesV1ChallengeConfigInfoDtoTrackingLIFETIME:
		*s = LolChallengesV1ChallengeConfigInfoDtoTrackingLIFETIME
		return nil
	case LolChallengesV1ChallengeConfigInfoDtoTrackingSEASON:
		*s = LolChallengesV1ChallengeConfigInfoDtoTrackingSEASON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/lol-challenges-v1.ChallengeInfo
type LolChallengesV1ChallengeInfo struct {
	ChallengeId    int64    `json:"challengeId"`
	Percentile     float64  `json:"percentile"`
	Level          string   `json:"level"`
	Value          float64  `json:"value"`
	AchievedTime   OptInt64 `json:"achievedTime"`
	Position       OptInt64 `json:"position"`
	PlayersInLevel OptInt64 `json:"playersInLevel"`
}

// GetChallengeId returns the value of ChallengeId.
func (s *LolChallengesV1ChallengeInfo) GetChallengeId() int64 {
	return s.ChallengeId
}

// GetPercentile returns the value of Percentile.
func (s *LolChallengesV1ChallengeInfo) GetPercentile() float64 {
	return s.Percentile
}

// GetLevel returns the value of Level.
func (s *LolChallengesV1ChallengeInfo) GetLevel() string {
	return s.Level
}

// GetValue returns the value of Value.
func (s *LolChallengesV1ChallengeInfo) GetValue() float64 {
	return s.Value
}

// GetAchievedTime returns the value of AchievedTime.
func (s *LolChallengesV1ChallengeInfo) GetAchievedTime() OptInt64 {
	return s.AchievedTime
}

// GetPosition returns the value of Position.
func (s *LolChallengesV1ChallengeInfo) GetPosition() OptInt64 {
	return s.Position
}

// GetPlayersInLevel returns the value of PlayersInLevel.
func (s *LolChallengesV1ChallengeInfo) GetPlayersInLevel() OptInt64 {
	return s.PlayersInLevel
}

// SetChallengeId sets the value of ChallengeId.
func (s *LolChallengesV1ChallengeInfo) SetChallengeId(val int64) {
	s.ChallengeId = val
}

// SetPercentile sets the value of Percentile.
func (s *LolChallengesV1ChallengeInfo) SetPercentile(val float64) {
	s.Percentile = val
}

// SetLevel sets the value of Level.
func (s *LolChallengesV1ChallengeInfo) SetLevel(val string) {
	s.Level = val
}

// SetValue sets the value of Value.
func (s *LolChallengesV1ChallengeInfo) SetValue(val float64) {
	s.Value = val
}

// SetAchievedTime sets the value of AchievedTime.
func (s *LolChallengesV1ChallengeInfo) SetAchievedTime(val OptInt64) {
	s.AchievedTime = val
}

// SetPosition sets the value of Position.
func (s *LolChallengesV1ChallengeInfo) SetPosition(val OptInt64) {
	s.Position = val
}

// SetPlayersInLevel sets the value of PlayersInLevel.
func (s *LolChallengesV1ChallengeInfo) SetPlayersInLevel(val OptInt64) {
	s.PlayersInLevel = val
}

// Ref: #/components/schemas/lol-challenges-v1.ChallengePoints
type LolChallengesV1ChallengePoints struct {
	Level      string     `json:"level"`
	Current    int64      `json:"current"`
	Max        int64      `json:"max"`
	Percentile OptFloat64 `json:"percentile"`
}

// GetLevel returns the value of Level.
func (s *LolChallengesV1ChallengePoints) GetLevel() string {
	return s.Level
}

// GetCurrent returns the value of Current.
func (s *LolChallengesV1ChallengePoints) GetCurrent() int64 {
	return s.Current
}

// GetMax returns the value of Max.
func (s *LolChallengesV1ChallengePoints) GetMax() int64 {
	return s.Max
}

// GetPercentile returns the value of Percentile.
func (s *LolChallengesV1ChallengePoints) GetPercentile() OptFloat64 {
	return s.Percentile
}

// SetLevel sets the value of Level.
func (s *LolChallengesV1ChallengePoints) SetLevel(val string) {
	s.Level = val
}

// SetCurrent sets the value of Current.
func (s *LolChallengesV1ChallengePoints) SetCurrent(val int64) {
	s.Current = val
}

// SetMax sets the value of Max.
func (s *LolChallengesV1ChallengePoints) SetMax(val int64) {
	s.Max = val
}

// SetPercentile sets the value of Percentile.
func (s *LolChallengesV1ChallengePoints) SetPercentile(val OptFloat64) {
	s.Percentile = val
}

// LolChallengesV1GetAllChallengeConfigsBadGateway is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsBadGateway struct{}

func (*LolChallengesV1GetAllChallengeConfigsBadGateway) lolChallengesV1GetAllChallengeConfigsRes() {}

// LolChallengesV1GetAllChallengeConfigsBadRequest is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsBadRequest struct{}

func (*LolChallengesV1GetAllChallengeConfigsBadRequest) lolChallengesV1GetAllChallengeConfigsRes() {}

// LolChallengesV1GetAllChallengeConfigsForbidden is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsForbidden struct{}

func (*LolChallengesV1GetAllChallengeConfigsForbidden) lolChallengesV1GetAllChallengeConfigsRes() {}

// LolChallengesV1GetAllChallengeConfigsGatewayTimeout is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsGatewayTimeout struct{}

func (*LolChallengesV1GetAllChallengeConfigsGatewayTimeout) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengeConfigsInternalServerError is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsInternalServerError struct{}

func (*LolChallengesV1GetAllChallengeConfigsInternalServerError) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengeConfigsMethodNotAllowed is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsMethodNotAllowed struct{}

func (*LolChallengesV1GetAllChallengeConfigsMethodNotAllowed) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengeConfigsNotFound is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsNotFound struct{}

func (*LolChallengesV1GetAllChallengeConfigsNotFound) lolChallengesV1GetAllChallengeConfigsRes() {}

type LolChallengesV1GetAllChallengeConfigsOKApplicationJSON []LolChallengesV1ChallengeConfigInfoDto

func (*LolChallengesV1GetAllChallengeConfigsOKApplicationJSON) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengeConfigsServiceUnavailable is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsServiceUnavailable struct{}

func (*LolChallengesV1GetAllChallengeConfigsServiceUnavailable) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengeConfigsTooManyRequests is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsTooManyRequests struct{}

func (*LolChallengesV1GetAllChallengeConfigsTooManyRequests) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengeConfigsUnauthorized is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsUnauthorized struct{}

func (*LolChallengesV1GetAllChallengeConfigsUnauthorized) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengeConfigsUnsupportedMediaType is response for LolChallengesV1GetAllChallengeConfigs operation.
type LolChallengesV1GetAllChallengeConfigsUnsupportedMediaType struct{}

func (*LolChallengesV1GetAllChallengeConfigsUnsupportedMediaType) lolChallengesV1GetAllChallengeConfigsRes() {
}

// LolChallengesV1GetAllChallengePercentilesBadGateway is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesBadGateway struct{}

func (*LolChallengesV1GetAllChallengePercentilesBadGateway) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesBadRequest is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesBadRequest struct{}

func (*LolChallengesV1GetAllChallengePercentilesBadRequest) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesForbidden is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesForbidden struct{}

func (*LolChallengesV1GetAllChallengePercentilesForbidden) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesGatewayTimeout is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesGatewayTimeout struct{}

func (*LolChallengesV1GetAllChallengePercentilesGatewayTimeout) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesInternalServerError is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesInternalServerError struct{}

func (*LolChallengesV1GetAllChallengePercentilesInternalServerError) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesMethodNotAllowed is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesMethodNotAllowed struct{}

func (*LolChallengesV1GetAllChallengePercentilesMethodNotAllowed) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesNotFound is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesNotFound struct{}

func (*LolChallengesV1GetAllChallengePercentilesNotFound) lolChallengesV1GetAllChallengePercentilesRes() {
}

type LolChallengesV1GetAllChallengePercentilesOK map[string]LolChallengesV1GetAllChallengePercentilesOKItem

func (s *LolChallengesV1GetAllChallengePercentilesOK) init() LolChallengesV1GetAllChallengePercentilesOK {
	m := *s
	if m == nil {
		m = map[string]LolChallengesV1GetAllChallengePercentilesOKItem{}
		*s = m
	}
	return m
}

func (*LolChallengesV1GetAllChallengePercentilesOK) lolChallengesV1GetAllChallengePercentilesRes() {}

type LolChallengesV1GetAllChallengePercentilesOKItem map[string]float64

func (s *LolChallengesV1GetAllChallengePercentilesOKItem) init() LolChallengesV1GetAllChallengePercentilesOKItem {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

// LolChallengesV1GetAllChallengePercentilesServiceUnavailable is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesServiceUnavailable struct{}

func (*LolChallengesV1GetAllChallengePercentilesServiceUnavailable) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesTooManyRequests is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesTooManyRequests struct{}

func (*LolChallengesV1GetAllChallengePercentilesTooManyRequests) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesUnauthorized is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesUnauthorized struct{}

func (*LolChallengesV1GetAllChallengePercentilesUnauthorized) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetAllChallengePercentilesUnsupportedMediaType is response for LolChallengesV1GetAllChallengePercentiles operation.
type LolChallengesV1GetAllChallengePercentilesUnsupportedMediaType struct{}

func (*LolChallengesV1GetAllChallengePercentilesUnsupportedMediaType) lolChallengesV1GetAllChallengePercentilesRes() {
}

// LolChallengesV1GetChallengeConfigsBadGateway is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsBadGateway struct{}

func (*LolChallengesV1GetChallengeConfigsBadGateway) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsBadRequest is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsBadRequest struct{}

func (*LolChallengesV1GetChallengeConfigsBadRequest) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsForbidden is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsForbidden struct{}

func (*LolChallengesV1GetChallengeConfigsForbidden) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsGatewayTimeout is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsGatewayTimeout struct{}

func (*LolChallengesV1GetChallengeConfigsGatewayTimeout) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsInternalServerError is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsInternalServerError struct{}

func (*LolChallengesV1GetChallengeConfigsInternalServerError) lolChallengesV1GetChallengeConfigsRes() {
}

// LolChallengesV1GetChallengeConfigsMethodNotAllowed is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsMethodNotAllowed struct{}

func (*LolChallengesV1GetChallengeConfigsMethodNotAllowed) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsNotFound is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsNotFound struct{}

func (*LolChallengesV1GetChallengeConfigsNotFound) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsServiceUnavailable is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsServiceUnavailable struct{}

func (*LolChallengesV1GetChallengeConfigsServiceUnavailable) lolChallengesV1GetChallengeConfigsRes() {
}

// LolChallengesV1GetChallengeConfigsTooManyRequests is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsTooManyRequests struct{}

func (*LolChallengesV1GetChallengeConfigsTooManyRequests) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsUnauthorized is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsUnauthorized struct{}

func (*LolChallengesV1GetChallengeConfigsUnauthorized) lolChallengesV1GetChallengeConfigsRes() {}

// LolChallengesV1GetChallengeConfigsUnsupportedMediaType is response for LolChallengesV1GetChallengeConfigs operation.
type LolChallengesV1GetChallengeConfigsUnsupportedMediaType struct{}

func (*LolChallengesV1GetChallengeConfigsUnsupportedMediaType) lolChallengesV1GetChallengeConfigsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsBadGateway is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsBadGateway struct{}

func (*LolChallengesV1GetChallengeLeaderboardsBadGateway) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsBadRequest is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsBadRequest struct{}

func (*LolChallengesV1GetChallengeLeaderboardsBadRequest) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsForbidden is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsForbidden struct{}

func (*LolChallengesV1GetChallengeLeaderboardsForbidden) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsGatewayTimeout is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsGatewayTimeout struct{}

func (*LolChallengesV1GetChallengeLeaderboardsGatewayTimeout) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsInternalServerError is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsInternalServerError struct{}

func (*LolChallengesV1GetChallengeLeaderboardsInternalServerError) lolChallengesV1GetChallengeLeaderboardsRes() {
}

type LolChallengesV1GetChallengeLeaderboardsLevel string

const (
	LolChallengesV1GetChallengeLeaderboardsLevelNONE                      LolChallengesV1GetChallengeLeaderboardsLevel = "NONE"
	LolChallengesV1GetChallengeLeaderboardsLevelIRON                      LolChallengesV1GetChallengeLeaderboardsLevel = "IRON"
	LolChallengesV1GetChallengeLeaderboardsLevelBRONZE                    LolChallengesV1GetChallengeLeaderboardsLevel = "BRONZE"
	LolChallengesV1GetChallengeLeaderboardsLevelSILVER                    LolChallengesV1GetChallengeLeaderboardsLevel = "SILVER"
	LolChallengesV1GetChallengeLeaderboardsLevelGOLD                      LolChallengesV1GetChallengeLeaderboardsLevel = "GOLD"
	LolChallengesV1GetChallengeLeaderboardsLevelPLATINUM                  LolChallengesV1GetChallengeLeaderboardsLevel = "PLATINUM"
	LolChallengesV1GetChallengeLeaderboardsLevelDIAMOND                   LolChallengesV1GetChallengeLeaderboardsLevel = "DIAMOND"
	LolChallengesV1GetChallengeLeaderboardsLevelMASTER                    LolChallengesV1GetChallengeLeaderboardsLevel = "MASTER"
	LolChallengesV1GetChallengeLeaderboardsLevelGRANDMASTER               LolChallengesV1GetChallengeLeaderboardsLevel = "GRANDMASTER"
	LolChallengesV1GetChallengeLeaderboardsLevelCHALLENGER                LolChallengesV1GetChallengeLeaderboardsLevel = "CHALLENGER"
	LolChallengesV1GetChallengeLeaderboardsLevelHIGHESTNOTLEADERBOARDONLY LolChallengesV1GetChallengeLeaderboardsLevel = "HIGHEST_NOT_LEADERBOARD_ONLY"
	LolChallengesV1GetChallengeLeaderboardsLevelHIGHEST                   LolChallengesV1GetChallengeLeaderboardsLevel = "HIGHEST"
	LolChallengesV1GetChallengeLeaderboardsLevelLOWEST                    LolChallengesV1GetChallengeLeaderboardsLevel = "LOWEST"
)

// AllValues returns all LolChallengesV1GetChallengeLeaderboardsLevel values.
func (LolChallengesV1GetChallengeLeaderboardsLevel) AllValues() []LolChallengesV1GetChallengeLeaderboardsLevel {
	return []LolChallengesV1GetChallengeLeaderboardsLevel{
		LolChallengesV1GetChallengeLeaderboardsLevelNONE,
		LolChallengesV1GetChallengeLeaderboardsLevelIRON,
		LolChallengesV1GetChallengeLeaderboardsLevelBRONZE,
		LolChallengesV1GetChallengeLeaderboardsLevelSILVER,
		LolChallengesV1GetChallengeLeaderboardsLevelGOLD,
		LolChallengesV1GetChallengeLeaderboardsLevelPLATINUM,
		LolChallengesV1GetChallengeLeaderboardsLevelDIAMOND,
		LolChallengesV1GetChallengeLeaderboardsLevelMASTER,
		LolChallengesV1GetChallengeLeaderboardsLevelGRANDMASTER,
		LolChallengesV1GetChallengeLeaderboardsLevelCHALLENGER,
		LolChallengesV1GetChallengeLeaderboardsLevelHIGHESTNOTLEADERBOARDONLY,
		LolChallengesV1GetChallengeLeaderboardsLevelHIGHEST,
		LolChallengesV1GetChallengeLeaderboardsLevelLOWEST,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolChallengesV1GetChallengeLeaderboardsLevel) MarshalText() ([]byte, error) {
	switch s {
	case LolChallengesV1GetChallengeLeaderboardsLevelNONE:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelIRON:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelBRONZE:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelSILVER:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelGOLD:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelPLATINUM:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelDIAMOND:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelMASTER:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelGRANDMASTER:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelCHALLENGER:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelHIGHESTNOTLEADERBOARDONLY:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelHIGHEST:
		return []byte(s), nil
	case LolChallengesV1GetChallengeLeaderboardsLevelLOWEST:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolChallengesV1GetChallengeLeaderboardsLevel) UnmarshalText(data []byte) error {
	switch LolChallengesV1GetChallengeLeaderboardsLevel(data) {
	case LolChallengesV1GetChallengeLeaderboardsLevelNONE:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelNONE
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelIRON:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelIRON
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelBRONZE:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelBRONZE
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelSILVER:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelSILVER
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelGOLD:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelGOLD
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelPLATINUM:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelPLATINUM
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelDIAMOND:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelDIAMOND
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelMASTER:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelMASTER
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelGRANDMASTER:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelGRANDMASTER
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelCHALLENGER:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelCHALLENGER
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelHIGHESTNOTLEADERBOARDONLY:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelHIGHESTNOTLEADERBOARDONLY
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelHIGHEST:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelHIGHEST
		return nil
	case LolChallengesV1GetChallengeLeaderboardsLevelLOWEST:
		*s = LolChallengesV1GetChallengeLeaderboardsLevelLOWEST
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LolChallengesV1GetChallengeLeaderboardsMethodNotAllowed is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsMethodNotAllowed struct{}

func (*LolChallengesV1GetChallengeLeaderboardsMethodNotAllowed) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsNotFound is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsNotFound struct{}

func (*LolChallengesV1GetChallengeLeaderboardsNotFound) lolChallengesV1GetChallengeLeaderboardsRes() {
}

type LolChallengesV1GetChallengeLeaderboardsOKApplicationJSON []LolChallengesV1ApexPlayerInfoDto

func (*LolChallengesV1GetChallengeLeaderboardsOKApplicationJSON) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsServiceUnavailable is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsServiceUnavailable struct{}

func (*LolChallengesV1GetChallengeLeaderboardsServiceUnavailable) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsTooManyRequests is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsTooManyRequests struct{}

func (*LolChallengesV1GetChallengeLeaderboardsTooManyRequests) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsUnauthorized is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsUnauthorized struct{}

func (*LolChallengesV1GetChallengeLeaderboardsUnauthorized) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengeLeaderboardsUnsupportedMediaType is response for LolChallengesV1GetChallengeLeaderboards operation.
type LolChallengesV1GetChallengeLeaderboardsUnsupportedMediaType struct{}

func (*LolChallengesV1GetChallengeLeaderboardsUnsupportedMediaType) lolChallengesV1GetChallengeLeaderboardsRes() {
}

// LolChallengesV1GetChallengePercentilesBadGateway is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesBadGateway struct{}

func (*LolChallengesV1GetChallengePercentilesBadGateway) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesBadRequest is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesBadRequest struct{}

func (*LolChallengesV1GetChallengePercentilesBadRequest) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesForbidden is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesForbidden struct{}

func (*LolChallengesV1GetChallengePercentilesForbidden) lolChallengesV1GetChallengePercentilesRes() {}

// LolChallengesV1GetChallengePercentilesGatewayTimeout is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesGatewayTimeout struct{}

func (*LolChallengesV1GetChallengePercentilesGatewayTimeout) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesInternalServerError is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesInternalServerError struct{}

func (*LolChallengesV1GetChallengePercentilesInternalServerError) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesMethodNotAllowed is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesMethodNotAllowed struct{}

func (*LolChallengesV1GetChallengePercentilesMethodNotAllowed) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesNotFound is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesNotFound struct{}

func (*LolChallengesV1GetChallengePercentilesNotFound) lolChallengesV1GetChallengePercentilesRes() {}

type LolChallengesV1GetChallengePercentilesOK map[string]float64

func (s *LolChallengesV1GetChallengePercentilesOK) init() LolChallengesV1GetChallengePercentilesOK {
	m := *s
	if m == nil {
		m = map[string]float64{}
		*s = m
	}
	return m
}

func (*LolChallengesV1GetChallengePercentilesOK) lolChallengesV1GetChallengePercentilesRes() {}

// LolChallengesV1GetChallengePercentilesServiceUnavailable is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesServiceUnavailable struct{}

func (*LolChallengesV1GetChallengePercentilesServiceUnavailable) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesTooManyRequests is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesTooManyRequests struct{}

func (*LolChallengesV1GetChallengePercentilesTooManyRequests) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesUnauthorized is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesUnauthorized struct{}

func (*LolChallengesV1GetChallengePercentilesUnauthorized) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetChallengePercentilesUnsupportedMediaType is response for LolChallengesV1GetChallengePercentiles operation.
type LolChallengesV1GetChallengePercentilesUnsupportedMediaType struct{}

func (*LolChallengesV1GetChallengePercentilesUnsupportedMediaType) lolChallengesV1GetChallengePercentilesRes() {
}

// LolChallengesV1GetPlayerDataBadGateway is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataBadGateway struct{}

func (*LolChallengesV1GetPlayerDataBadGateway) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataBadRequest is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataBadRequest struct{}

func (*LolChallengesV1GetPlayerDataBadRequest) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataForbidden is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataForbidden struct{}

func (*LolChallengesV1GetPlayerDataForbidden) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataGatewayTimeout is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataGatewayTimeout struct{}

func (*LolChallengesV1GetPlayerDataGatewayTimeout) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataInternalServerError is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataInternalServerError struct{}

func (*LolChallengesV1GetPlayerDataInternalServerError) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataMethodNotAllowed is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataMethodNotAllowed struct{}

func (*LolChallengesV1GetPlayerDataMethodNotAllowed) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataNotFound is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataNotFound struct{}

func (*LolChallengesV1GetPlayerDataNotFound) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataServiceUnavailable is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataServiceUnavailable struct{}

func (*LolChallengesV1GetPlayerDataServiceUnavailable) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataTooManyRequests is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataTooManyRequests struct{}

func (*LolChallengesV1GetPlayerDataTooManyRequests) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataUnauthorized is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataUnauthorized struct{}

func (*LolChallengesV1GetPlayerDataUnauthorized) lolChallengesV1GetPlayerDataRes() {}

// LolChallengesV1GetPlayerDataUnsupportedMediaType is response for LolChallengesV1GetPlayerData operation.
type LolChallengesV1GetPlayerDataUnsupportedMediaType struct{}

func (*LolChallengesV1GetPlayerDataUnsupportedMediaType) lolChallengesV1GetPlayerDataRes() {}

// Ref: #/components/schemas/lol-challenges-v1.PlayerClientPreferences
type LolChallengesV1PlayerClientPreferences struct {
	BannerAccent             OptString `json:"bannerAccent"`
	Title                    OptString `json:"title"`
	ChallengeIds             []int64   `json:"challengeIds"`
	CrestBorder              OptString `json:"crestBorder"`
	PrestigeCrestBorderLevel OptInt32  `json:"prestigeCrestBorderLevel"`
}

// GetBannerAccent returns the value of BannerAccent.
func (s *LolChallengesV1PlayerClientPreferences) GetBannerAccent() OptString {
	return s.BannerAccent
}

// GetTitle returns the value of Title.
func (s *LolChallengesV1PlayerClientPreferences) GetTitle() OptString {
	return s.Title
}

// GetChallengeIds returns the value of ChallengeIds.
func (s *LolChallengesV1PlayerClientPreferences) GetChallengeIds() []int64 {
	return s.ChallengeIds
}

// GetCrestBorder returns the value of CrestBorder.
func (s *LolChallengesV1PlayerClientPreferences) GetCrestBorder() OptString {
	return s.CrestBorder
}

// GetPrestigeCrestBorderLevel returns the value of PrestigeCrestBorderLevel.
func (s *LolChallengesV1PlayerClientPreferences) GetPrestigeCrestBorderLevel() OptInt32 {
	return s.PrestigeCrestBorderLevel
}

// SetBannerAccent sets the value of BannerAccent.
func (s *LolChallengesV1PlayerClientPreferences) SetBannerAccent(val OptString) {
	s.BannerAccent = val
}

// SetTitle sets the value of Title.
func (s *LolChallengesV1PlayerClientPreferences) SetTitle(val OptString) {
	s.Title = val
}

// SetChallengeIds sets the value of ChallengeIds.
func (s *LolChallengesV1PlayerClientPreferences) SetChallengeIds(val []int64) {
	s.ChallengeIds = val
}

// SetCrestBorder sets the value of CrestBorder.
func (s *LolChallengesV1PlayerClientPreferences) SetCrestBorder(val OptString) {
	s.CrestBorder = val
}

// SetPrestigeCrestBorderLevel sets the value of PrestigeCrestBorderLevel.
func (s *LolChallengesV1PlayerClientPreferences) SetPrestigeCrestBorderLevel(val OptInt32) {
	s.PrestigeCrestBorderLevel = val
}

// Ref: #/components/schemas/lol-challenges-v1.PlayerInfoDto
type LolChallengesV1PlayerInfoDto struct {
	Challenges     []LolChallengesV1ChallengeInfo             `json:"challenges"`
	Preferences    LolChallengesV1PlayerClientPreferences     `json:"preferences"`
	TotalPoints    LolChallengesV1ChallengePoints             `json:"totalPoints"`
	CategoryPoints LolChallengesV1PlayerInfoDtoCategoryPoints `json:"categoryPoints"`
}

// GetChallenges returns the value of Challenges.
func (s *LolChallengesV1PlayerInfoDto) GetChallenges() []LolChallengesV1ChallengeInfo {
	return s.Challenges
}

// GetPreferences returns the value of Preferences.
func (s *LolChallengesV1PlayerInfoDto) GetPreferences() LolChallengesV1PlayerClientPreferences {
	return s.Preferences
}

// GetTotalPoints returns the value of TotalPoints.
func (s *LolChallengesV1PlayerInfoDto) GetTotalPoints() LolChallengesV1ChallengePoints {
	return s.TotalPoints
}

// GetCategoryPoints returns the value of CategoryPoints.
func (s *LolChallengesV1PlayerInfoDto) GetCategoryPoints() LolChallengesV1PlayerInfoDtoCategoryPoints {
	return s.CategoryPoints
}

// SetChallenges sets the value of Challenges.
func (s *LolChallengesV1PlayerInfoDto) SetChallenges(val []LolChallengesV1ChallengeInfo) {
	s.Challenges = val
}

// SetPreferences sets the value of Preferences.
func (s *LolChallengesV1PlayerInfoDto) SetPreferences(val LolChallengesV1PlayerClientPreferences) {
	s.Preferences = val
}

// SetTotalPoints sets the value of TotalPoints.
func (s *LolChallengesV1PlayerInfoDto) SetTotalPoints(val LolChallengesV1ChallengePoints) {
	s.TotalPoints = val
}

// SetCategoryPoints sets the value of CategoryPoints.
func (s *LolChallengesV1PlayerInfoDto) SetCategoryPoints(val LolChallengesV1PlayerInfoDtoCategoryPoints) {
	s.CategoryPoints = val
}

func (*LolChallengesV1PlayerInfoDto) lolChallengesV1GetPlayerDataRes() {}

type LolChallengesV1PlayerInfoDtoCategoryPoints map[string]LolChallengesV1ChallengePoints

func (s *LolChallengesV1PlayerInfoDtoCategoryPoints) init() LolChallengesV1PlayerInfoDtoCategoryPoints {
	m := *s
	if m == nil {
		m = map[string]LolChallengesV1ChallengePoints{}
		*s = m
	}
	return m
}

// LolRsoMatchV1GetMatchBadGateway is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchBadGateway struct{}

func (*LolRsoMatchV1GetMatchBadGateway) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchBadRequest is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchBadRequest struct{}

func (*LolRsoMatchV1GetMatchBadRequest) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchForbidden is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchForbidden struct{}

func (*LolRsoMatchV1GetMatchForbidden) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchGatewayTimeout is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchGatewayTimeout struct{}

func (*LolRsoMatchV1GetMatchGatewayTimeout) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchIdsBadGateway is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsBadGateway struct{}

func (*LolRsoMatchV1GetMatchIdsBadGateway) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsBadRequest is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsBadRequest struct{}

func (*LolRsoMatchV1GetMatchIdsBadRequest) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsForbidden is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsForbidden struct{}

func (*LolRsoMatchV1GetMatchIdsForbidden) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsGatewayTimeout is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsGatewayTimeout struct{}

func (*LolRsoMatchV1GetMatchIdsGatewayTimeout) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsInternalServerError is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsInternalServerError struct{}

func (*LolRsoMatchV1GetMatchIdsInternalServerError) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsMethodNotAllowed is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsMethodNotAllowed struct{}

func (*LolRsoMatchV1GetMatchIdsMethodNotAllowed) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsNotFound is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsNotFound struct{}

func (*LolRsoMatchV1GetMatchIdsNotFound) lolRsoMatchV1GetMatchIdsRes() {}

type LolRsoMatchV1GetMatchIdsOKApplicationJSON []string

func (*LolRsoMatchV1GetMatchIdsOKApplicationJSON) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsServiceUnavailable is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsServiceUnavailable struct{}

func (*LolRsoMatchV1GetMatchIdsServiceUnavailable) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsTooManyRequests is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsTooManyRequests struct{}

func (*LolRsoMatchV1GetMatchIdsTooManyRequests) lolRsoMatchV1GetMatchIdsRes() {}

type LolRsoMatchV1GetMatchIdsType string

const (
	LolRsoMatchV1GetMatchIdsTypeRanked   LolRsoMatchV1GetMatchIdsType = "ranked"
	LolRsoMatchV1GetMatchIdsTypeNormal   LolRsoMatchV1GetMatchIdsType = "normal"
	LolRsoMatchV1GetMatchIdsTypeTourney  LolRsoMatchV1GetMatchIdsType = "tourney"
	LolRsoMatchV1GetMatchIdsTypeTutorial LolRsoMatchV1GetMatchIdsType = "tutorial"
)

// AllValues returns all LolRsoMatchV1GetMatchIdsType values.
func (LolRsoMatchV1GetMatchIdsType) AllValues() []LolRsoMatchV1GetMatchIdsType {
	return []LolRsoMatchV1GetMatchIdsType{
		LolRsoMatchV1GetMatchIdsTypeRanked,
		LolRsoMatchV1GetMatchIdsTypeNormal,
		LolRsoMatchV1GetMatchIdsTypeTourney,
		LolRsoMatchV1GetMatchIdsTypeTutorial,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolRsoMatchV1GetMatchIdsType) MarshalText() ([]byte, error) {
	switch s {
	case LolRsoMatchV1GetMatchIdsTypeRanked:
		return []byte(s), nil
	case LolRsoMatchV1GetMatchIdsTypeNormal:
		return []byte(s), nil
	case LolRsoMatchV1GetMatchIdsTypeTourney:
		return []byte(s), nil
	case LolRsoMatchV1GetMatchIdsTypeTutorial:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolRsoMatchV1GetMatchIdsType) UnmarshalText(data []byte) error {
	switch LolRsoMatchV1GetMatchIdsType(data) {
	case LolRsoMatchV1GetMatchIdsTypeRanked:
		*s = LolRsoMatchV1GetMatchIdsTypeRanked
		return nil
	case LolRsoMatchV1GetMatchIdsTypeNormal:
		*s = LolRsoMatchV1GetMatchIdsTypeNormal
		return nil
	case LolRsoMatchV1GetMatchIdsTypeTourney:
		*s = LolRsoMatchV1GetMatchIdsTypeTourney
		return nil
	case LolRsoMatchV1GetMatchIdsTypeTutorial:
		*s = LolRsoMatchV1GetMatchIdsTypeTutorial
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LolRsoMatchV1GetMatchIdsUnauthorized is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsUnauthorized struct{}

func (*LolRsoMatchV1GetMatchIdsUnauthorized) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchIdsUnsupportedMediaType is response for LolRsoMatchV1GetMatchIds operation.
type LolRsoMatchV1GetMatchIdsUnsupportedMediaType struct{}

func (*LolRsoMatchV1GetMatchIdsUnsupportedMediaType) lolRsoMatchV1GetMatchIdsRes() {}

// LolRsoMatchV1GetMatchInternalServerError is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchInternalServerError struct{}

func (*LolRsoMatchV1GetMatchInternalServerError) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchMethodNotAllowed is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchMethodNotAllowed struct{}

func (*LolRsoMatchV1GetMatchMethodNotAllowed) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchNotFound is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchNotFound struct{}

func (*LolRsoMatchV1GetMatchNotFound) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchServiceUnavailable is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchServiceUnavailable struct{}

func (*LolRsoMatchV1GetMatchServiceUnavailable) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchTooManyRequests is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchTooManyRequests struct{}

func (*LolRsoMatchV1GetMatchTooManyRequests) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchUnauthorized is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchUnauthorized struct{}

func (*LolRsoMatchV1GetMatchUnauthorized) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetMatchUnsupportedMediaType is response for LolRsoMatchV1GetMatch operation.
type LolRsoMatchV1GetMatchUnsupportedMediaType struct{}

func (*LolRsoMatchV1GetMatchUnsupportedMediaType) lolRsoMatchV1GetMatchRes() {}

// LolRsoMatchV1GetTimelineBadGateway is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineBadGateway struct{}

func (*LolRsoMatchV1GetTimelineBadGateway) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineBadRequest is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineBadRequest struct{}

func (*LolRsoMatchV1GetTimelineBadRequest) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineForbidden is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineForbidden struct{}

func (*LolRsoMatchV1GetTimelineForbidden) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineGatewayTimeout is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineGatewayTimeout struct{}

func (*LolRsoMatchV1GetTimelineGatewayTimeout) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineInternalServerError is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineInternalServerError struct{}

func (*LolRsoMatchV1GetTimelineInternalServerError) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineMethodNotAllowed is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineMethodNotAllowed struct{}

func (*LolRsoMatchV1GetTimelineMethodNotAllowed) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineNotFound is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineNotFound struct{}

func (*LolRsoMatchV1GetTimelineNotFound) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineServiceUnavailable is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineServiceUnavailable struct{}

func (*LolRsoMatchV1GetTimelineServiceUnavailable) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineTooManyRequests is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineTooManyRequests struct{}

func (*LolRsoMatchV1GetTimelineTooManyRequests) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineUnauthorized is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineUnauthorized struct{}

func (*LolRsoMatchV1GetTimelineUnauthorized) lolRsoMatchV1GetTimelineRes() {}

// LolRsoMatchV1GetTimelineUnsupportedMediaType is response for LolRsoMatchV1GetTimeline operation.
type LolRsoMatchV1GetTimelineUnsupportedMediaType struct{}

func (*LolRsoMatchV1GetTimelineUnsupportedMediaType) lolRsoMatchV1GetTimelineRes() {}

// Ref: #/components/schemas/lol-status-v4.ContentDto
type LolStatusV4ContentDto struct {
	Locale  string `json:"locale"`
	Content string `json:"content"`
}

// GetLocale returns the value of Locale.
func (s *LolStatusV4ContentDto) GetLocale() string {
	return s.Locale
}

// GetContent returns the value of Content.
func (s *LolStatusV4ContentDto) GetContent() string {
	return s.Content
}

// SetLocale sets the value of Locale.
func (s *LolStatusV4ContentDto) SetLocale(val string) {
	s.Locale = val
}

// SetContent sets the value of Content.
func (s *LolStatusV4ContentDto) SetContent(val string) {
	s.Content = val
}

// LolStatusV4GetPlatformDataBadGateway is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataBadGateway struct{}

func (*LolStatusV4GetPlatformDataBadGateway) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataBadRequest is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataBadRequest struct{}

func (*LolStatusV4GetPlatformDataBadRequest) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataForbidden is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataForbidden struct{}

func (*LolStatusV4GetPlatformDataForbidden) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataGatewayTimeout is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataGatewayTimeout struct{}

func (*LolStatusV4GetPlatformDataGatewayTimeout) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataInternalServerError is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataInternalServerError struct{}

func (*LolStatusV4GetPlatformDataInternalServerError) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataMethodNotAllowed is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataMethodNotAllowed struct{}

func (*LolStatusV4GetPlatformDataMethodNotAllowed) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataNotFound is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataNotFound struct{}

func (*LolStatusV4GetPlatformDataNotFound) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataServiceUnavailable is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataServiceUnavailable struct{}

func (*LolStatusV4GetPlatformDataServiceUnavailable) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataTooManyRequests is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataTooManyRequests struct{}

func (*LolStatusV4GetPlatformDataTooManyRequests) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataUnauthorized is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataUnauthorized struct{}

func (*LolStatusV4GetPlatformDataUnauthorized) lolStatusV4GetPlatformDataRes() {}

// LolStatusV4GetPlatformDataUnsupportedMediaType is response for LolStatusV4GetPlatformData operation.
type LolStatusV4GetPlatformDataUnsupportedMediaType struct{}

func (*LolStatusV4GetPlatformDataUnsupportedMediaType) lolStatusV4GetPlatformDataRes() {}

// Ref: #/components/schemas/lol-status-v4.PlatformDataDto
type LolStatusV4PlatformDataDto struct {
	ID           string                 `json:"id"`
	Name         string                 `json:"name"`
	Locales      []string               `json:"locales"`
	Maintenances []LolStatusV4StatusDto `json:"maintenances"`
	Incidents    []LolStatusV4StatusDto `json:"incidents"`
}

// GetID returns the value of ID.
func (s *LolStatusV4PlatformDataDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *LolStatusV4PlatformDataDto) GetName() string {
	return s.Name
}

// GetLocales returns the value of Locales.
func (s *LolStatusV4PlatformDataDto) GetLocales() []string {
	return s.Locales
}

// GetMaintenances returns the value of Maintenances.
func (s *LolStatusV4PlatformDataDto) GetMaintenances() []LolStatusV4StatusDto {
	return s.Maintenances
}

// GetIncidents returns the value of Incidents.
func (s *LolStatusV4PlatformDataDto) GetIncidents() []LolStatusV4StatusDto {
	return s.Incidents
}

// SetID sets the value of ID.
func (s *LolStatusV4PlatformDataDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *LolStatusV4PlatformDataDto) SetName(val string) {
	s.Name = val
}

// SetLocales sets the value of Locales.
func (s *LolStatusV4PlatformDataDto) SetLocales(val []string) {
	s.Locales = val
}

// SetMaintenances sets the value of Maintenances.
func (s *LolStatusV4PlatformDataDto) SetMaintenances(val []LolStatusV4StatusDto) {
	s.Maintenances = val
}

// SetIncidents sets the value of Incidents.
func (s *LolStatusV4PlatformDataDto) SetIncidents(val []LolStatusV4StatusDto) {
	s.Incidents = val
}

func (*LolStatusV4PlatformDataDto) lolStatusV4GetPlatformDataRes() {}

// Ref: #/components/schemas/lol-status-v4.StatusDto
type LolStatusV4StatusDto struct {
	ID int32 `json:"id"`
	// (Legal values:  scheduled,  in_progress,  complete).
	MaintenanceStatus OptLolStatusV4StatusDtoMaintenanceStatus `json:"maintenance_status"`
	// (Legal values:  info,  warning,  critical).
	IncidentSeverity OptLolStatusV4StatusDtoIncidentSeverity `json:"incident_severity"`
	Titles           []LolStatusV4ContentDto                 `json:"titles"`
	Updates          []LolStatusV4UpdateDto                  `json:"updates"`
	CreatedAt        string                                  `json:"created_at"`
	ArchiveAt        OptString                               `json:"archive_at"`
	UpdatedAt        OptString                               `json:"updated_at"`
	// (Legal values: windows, macos, android, ios, ps4, xbone, switch).
	Platforms []LolStatusV4StatusDtoPlatformsItem `json:"platforms"`
}

// GetID returns the value of ID.
func (s *LolStatusV4StatusDto) GetID() int32 {
	return s.ID
}

// GetMaintenanceStatus returns the value of MaintenanceStatus.
func (s *LolStatusV4StatusDto) GetMaintenanceStatus() OptLolStatusV4StatusDtoMaintenanceStatus {
	return s.MaintenanceStatus
}

// GetIncidentSeverity returns the value of IncidentSeverity.
func (s *LolStatusV4StatusDto) GetIncidentSeverity() OptLolStatusV4StatusDtoIncidentSeverity {
	return s.IncidentSeverity
}

// GetTitles returns the value of Titles.
func (s *LolStatusV4StatusDto) GetTitles() []LolStatusV4ContentDto {
	return s.Titles
}

// GetUpdates returns the value of Updates.
func (s *LolStatusV4StatusDto) GetUpdates() []LolStatusV4UpdateDto {
	return s.Updates
}

// GetCreatedAt returns the value of CreatedAt.
func (s *LolStatusV4StatusDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetArchiveAt returns the value of ArchiveAt.
func (s *LolStatusV4StatusDto) GetArchiveAt() OptString {
	return s.ArchiveAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *LolStatusV4StatusDto) GetUpdatedAt() OptString {
	return s.UpdatedAt
}

// GetPlatforms returns the value of Platforms.
func (s *LolStatusV4StatusDto) GetPlatforms() []LolStatusV4StatusDtoPlatformsItem {
	return s.Platforms
}

// SetID sets the value of ID.
func (s *LolStatusV4StatusDto) SetID(val int32) {
	s.ID = val
}

// SetMaintenanceStatus sets the value of MaintenanceStatus.
func (s *LolStatusV4StatusDto) SetMaintenanceStatus(val OptLolStatusV4StatusDtoMaintenanceStatus) {
	s.MaintenanceStatus = val
}

// SetIncidentSeverity sets the value of IncidentSeverity.
func (s *LolStatusV4StatusDto) SetIncidentSeverity(val OptLolStatusV4StatusDtoIncidentSeverity) {
	s.IncidentSeverity = val
}

// SetTitles sets the value of Titles.
func (s *LolStatusV4StatusDto) SetTitles(val []LolStatusV4ContentDto) {
	s.Titles = val
}

// SetUpdates sets the value of Updates.
func (s *LolStatusV4StatusDto) SetUpdates(val []LolStatusV4UpdateDto) {
	s.Updates = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *LolStatusV4StatusDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetArchiveAt sets the value of ArchiveAt.
func (s *LolStatusV4StatusDto) SetArchiveAt(val OptString) {
	s.ArchiveAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *LolStatusV4StatusDto) SetUpdatedAt(val OptString) {
	s.UpdatedAt = val
}

// SetPlatforms sets the value of Platforms.
func (s *LolStatusV4StatusDto) SetPlatforms(val []LolStatusV4StatusDtoPlatformsItem) {
	s.Platforms = val
}

// (Legal values:  info,  warning,  critical).
type LolStatusV4StatusDtoIncidentSeverity string

const (
	LolStatusV4StatusDtoIncidentSeverityInfo     LolStatusV4StatusDtoIncidentSeverity = "info"
	LolStatusV4StatusDtoIncidentSeverityWarning  LolStatusV4StatusDtoIncidentSeverity = "warning"
	LolStatusV4StatusDtoIncidentSeverityCritical LolStatusV4StatusDtoIncidentSeverity = "critical"
)

// AllValues returns all LolStatusV4StatusDtoIncidentSeverity values.
func (LolStatusV4StatusDtoIncidentSeverity) AllValues() []LolStatusV4StatusDtoIncidentSeverity {
	return []LolStatusV4StatusDtoIncidentSeverity{
		LolStatusV4StatusDtoIncidentSeverityInfo,
		LolStatusV4StatusDtoIncidentSeverityWarning,
		LolStatusV4StatusDtoIncidentSeverityCritical,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolStatusV4StatusDtoIncidentSeverity) MarshalText() ([]byte, error) {
	switch s {
	case LolStatusV4StatusDtoIncidentSeverityInfo:
		return []byte(s), nil
	case LolStatusV4StatusDtoIncidentSeverityWarning:
		return []byte(s), nil
	case LolStatusV4StatusDtoIncidentSeverityCritical:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolStatusV4StatusDtoIncidentSeverity) UnmarshalText(data []byte) error {
	switch LolStatusV4StatusDtoIncidentSeverity(data) {
	case LolStatusV4StatusDtoIncidentSeverityInfo:
		*s = LolStatusV4StatusDtoIncidentSeverityInfo
		return nil
	case LolStatusV4StatusDtoIncidentSeverityWarning:
		*s = LolStatusV4StatusDtoIncidentSeverityWarning
		return nil
	case LolStatusV4StatusDtoIncidentSeverityCritical:
		*s = LolStatusV4StatusDtoIncidentSeverityCritical
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// (Legal values:  scheduled,  in_progress,  complete).
type LolStatusV4StatusDtoMaintenanceStatus string

const (
	LolStatusV4StatusDtoMaintenanceStatusScheduled  LolStatusV4StatusDtoMaintenanceStatus = "scheduled"
	LolStatusV4StatusDtoMaintenanceStatusInProgress LolStatusV4StatusDtoMaintenanceStatus = "in_progress"
	LolStatusV4StatusDtoMaintenanceStatusComplete   LolStatusV4StatusDtoMaintenanceStatus = "complete"
)

// AllValues returns all LolStatusV4StatusDtoMaintenanceStatus values.
func (LolStatusV4StatusDtoMaintenanceStatus) AllValues() []LolStatusV4StatusDtoMaintenanceStatus {
	return []LolStatusV4StatusDtoMaintenanceStatus{
		LolStatusV4StatusDtoMaintenanceStatusScheduled,
		LolStatusV4StatusDtoMaintenanceStatusInProgress,
		LolStatusV4StatusDtoMaintenanceStatusComplete,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolStatusV4StatusDtoMaintenanceStatus) MarshalText() ([]byte, error) {
	switch s {
	case LolStatusV4StatusDtoMaintenanceStatusScheduled:
		return []byte(s), nil
	case LolStatusV4StatusDtoMaintenanceStatusInProgress:
		return []byte(s), nil
	case LolStatusV4StatusDtoMaintenanceStatusComplete:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolStatusV4StatusDtoMaintenanceStatus) UnmarshalText(data []byte) error {
	switch LolStatusV4StatusDtoMaintenanceStatus(data) {
	case LolStatusV4StatusDtoMaintenanceStatusScheduled:
		*s = LolStatusV4StatusDtoMaintenanceStatusScheduled
		return nil
	case LolStatusV4StatusDtoMaintenanceStatusInProgress:
		*s = LolStatusV4StatusDtoMaintenanceStatusInProgress
		return nil
	case LolStatusV4StatusDtoMaintenanceStatusComplete:
		*s = LolStatusV4StatusDtoMaintenanceStatusComplete
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type LolStatusV4StatusDtoPlatformsItem string

const (
	LolStatusV4StatusDtoPlatformsItemWindows LolStatusV4StatusDtoPlatformsItem = "windows"
	LolStatusV4StatusDtoPlatformsItemMacos   LolStatusV4StatusDtoPlatformsItem = "macos"
	LolStatusV4StatusDtoPlatformsItemAndroid LolStatusV4StatusDtoPlatformsItem = "android"
	LolStatusV4StatusDtoPlatformsItemIos     LolStatusV4StatusDtoPlatformsItem = "ios"
	LolStatusV4StatusDtoPlatformsItemPs4     LolStatusV4StatusDtoPlatformsItem = "ps4"
	LolStatusV4StatusDtoPlatformsItemXbone   LolStatusV4StatusDtoPlatformsItem = "xbone"
	LolStatusV4StatusDtoPlatformsItemSwitch  LolStatusV4StatusDtoPlatformsItem = "switch"
)

// AllValues returns all LolStatusV4StatusDtoPlatformsItem values.
func (LolStatusV4StatusDtoPlatformsItem) AllValues() []LolStatusV4StatusDtoPlatformsItem {
	return []LolStatusV4StatusDtoPlatformsItem{
		LolStatusV4StatusDtoPlatformsItemWindows,
		LolStatusV4StatusDtoPlatformsItemMacos,
		LolStatusV4StatusDtoPlatformsItemAndroid,
		LolStatusV4StatusDtoPlatformsItemIos,
		LolStatusV4StatusDtoPlatformsItemPs4,
		LolStatusV4StatusDtoPlatformsItemXbone,
		LolStatusV4StatusDtoPlatformsItemSwitch,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolStatusV4StatusDtoPlatformsItem) MarshalText() ([]byte, error) {
	switch s {
	case LolStatusV4StatusDtoPlatformsItemWindows:
		return []byte(s), nil
	case LolStatusV4StatusDtoPlatformsItemMacos:
		return []byte(s), nil
	case LolStatusV4StatusDtoPlatformsItemAndroid:
		return []byte(s), nil
	case LolStatusV4StatusDtoPlatformsItemIos:
		return []byte(s), nil
	case LolStatusV4StatusDtoPlatformsItemPs4:
		return []byte(s), nil
	case LolStatusV4StatusDtoPlatformsItemXbone:
		return []byte(s), nil
	case LolStatusV4StatusDtoPlatformsItemSwitch:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolStatusV4StatusDtoPlatformsItem) UnmarshalText(data []byte) error {
	switch LolStatusV4StatusDtoPlatformsItem(data) {
	case LolStatusV4StatusDtoPlatformsItemWindows:
		*s = LolStatusV4StatusDtoPlatformsItemWindows
		return nil
	case LolStatusV4StatusDtoPlatformsItemMacos:
		*s = LolStatusV4StatusDtoPlatformsItemMacos
		return nil
	case LolStatusV4StatusDtoPlatformsItemAndroid:
		*s = LolStatusV4StatusDtoPlatformsItemAndroid
		return nil
	case LolStatusV4StatusDtoPlatformsItemIos:
		*s = LolStatusV4StatusDtoPlatformsItemIos
		return nil
	case LolStatusV4StatusDtoPlatformsItemPs4:
		*s = LolStatusV4StatusDtoPlatformsItemPs4
		return nil
	case LolStatusV4StatusDtoPlatformsItemXbone:
		*s = LolStatusV4StatusDtoPlatformsItemXbone
		return nil
	case LolStatusV4StatusDtoPlatformsItemSwitch:
		*s = LolStatusV4StatusDtoPlatformsItemSwitch
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/lol-status-v4.UpdateDto
type LolStatusV4UpdateDto struct {
	ID      int32  `json:"id"`
	Author  string `json:"author"`
	Publish bool   `json:"publish"`
	// (Legal values: riotclient, riotstatus, game).
	PublishLocations []LolStatusV4UpdateDtoPublishLocationsItem `json:"publish_locations"`
	Translations     []LolStatusV4ContentDto                    `json:"translations"`
	CreatedAt        string                                     `json:"created_at"`
	UpdatedAt        string                                     `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *LolStatusV4UpdateDto) GetID() int32 {
	return s.ID
}

// GetAuthor returns the value of Author.
func (s *LolStatusV4UpdateDto) GetAuthor() string {
	return s.Author
}

// GetPublish returns the value of Publish.
func (s *LolStatusV4UpdateDto) GetPublish() bool {
	return s.Publish
}

// GetPublishLocations returns the value of PublishLocations.
func (s *LolStatusV4UpdateDto) GetPublishLocations() []LolStatusV4UpdateDtoPublishLocationsItem {
	return s.PublishLocations
}

// GetTranslations returns the value of Translations.
func (s *LolStatusV4UpdateDto) GetTranslations() []LolStatusV4ContentDto {
	return s.Translations
}

// GetCreatedAt returns the value of CreatedAt.
func (s *LolStatusV4UpdateDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *LolStatusV4UpdateDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *LolStatusV4UpdateDto) SetID(val int32) {
	s.ID = val
}

// SetAuthor sets the value of Author.
func (s *LolStatusV4UpdateDto) SetAuthor(val string) {
	s.Author = val
}

// SetPublish sets the value of Publish.
func (s *LolStatusV4UpdateDto) SetPublish(val bool) {
	s.Publish = val
}

// SetPublishLocations sets the value of PublishLocations.
func (s *LolStatusV4UpdateDto) SetPublishLocations(val []LolStatusV4UpdateDtoPublishLocationsItem) {
	s.PublishLocations = val
}

// SetTranslations sets the value of Translations.
func (s *LolStatusV4UpdateDto) SetTranslations(val []LolStatusV4ContentDto) {
	s.Translations = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *LolStatusV4UpdateDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *LolStatusV4UpdateDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

type LolStatusV4UpdateDtoPublishLocationsItem string

const (
	LolStatusV4UpdateDtoPublishLocationsItemRiotclient LolStatusV4UpdateDtoPublishLocationsItem = "riotclient"
	LolStatusV4UpdateDtoPublishLocationsItemRiotstatus LolStatusV4UpdateDtoPublishLocationsItem = "riotstatus"
	LolStatusV4UpdateDtoPublishLocationsItemGame       LolStatusV4UpdateDtoPublishLocationsItem = "game"
)

// AllValues returns all LolStatusV4UpdateDtoPublishLocationsItem values.
func (LolStatusV4UpdateDtoPublishLocationsItem) AllValues() []LolStatusV4UpdateDtoPublishLocationsItem {
	return []LolStatusV4UpdateDtoPublishLocationsItem{
		LolStatusV4UpdateDtoPublishLocationsItemRiotclient,
		LolStatusV4UpdateDtoPublishLocationsItemRiotstatus,
		LolStatusV4UpdateDtoPublishLocationsItemGame,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LolStatusV4UpdateDtoPublishLocationsItem) MarshalText() ([]byte, error) {
	switch s {
	case LolStatusV4UpdateDtoPublishLocationsItemRiotclient:
		return []byte(s), nil
	case LolStatusV4UpdateDtoPublishLocationsItemRiotstatus:
		return []byte(s), nil
	case LolStatusV4UpdateDtoPublishLocationsItemGame:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LolStatusV4UpdateDtoPublishLocationsItem) UnmarshalText(data []byte) error {
	switch LolStatusV4UpdateDtoPublishLocationsItem(data) {
	case LolStatusV4UpdateDtoPublishLocationsItemRiotclient:
		*s = LolStatusV4UpdateDtoPublishLocationsItemRiotclient
		return nil
	case LolStatusV4UpdateDtoPublishLocationsItemRiotstatus:
		*s = LolStatusV4UpdateDtoPublishLocationsItemRiotstatus
		return nil
	case LolStatusV4UpdateDtoPublishLocationsItemGame:
		*s = LolStatusV4UpdateDtoPublishLocationsItemGame
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// LorDeckV1CreateDeckBadGateway is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckBadGateway struct{}

func (*LorDeckV1CreateDeckBadGateway) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckBadRequest is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckBadRequest struct{}

func (*LorDeckV1CreateDeckBadRequest) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckForbidden is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckForbidden struct{}

func (*LorDeckV1CreateDeckForbidden) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckGatewayTimeout is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckGatewayTimeout struct{}

func (*LorDeckV1CreateDeckGatewayTimeout) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckInternalServerError is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckInternalServerError struct{}

func (*LorDeckV1CreateDeckInternalServerError) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckMethodNotAllowed is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckMethodNotAllowed struct{}

func (*LorDeckV1CreateDeckMethodNotAllowed) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckNotFound is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckNotFound struct{}

func (*LorDeckV1CreateDeckNotFound) lorDeckV1CreateDeckRes() {}

type LorDeckV1CreateDeckOKApplicationJSON string

func (*LorDeckV1CreateDeckOKApplicationJSON) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckServiceUnavailable is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckServiceUnavailable struct{}

func (*LorDeckV1CreateDeckServiceUnavailable) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckTooManyRequests is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckTooManyRequests struct{}

func (*LorDeckV1CreateDeckTooManyRequests) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckUnauthorized is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckUnauthorized struct{}

func (*LorDeckV1CreateDeckUnauthorized) lorDeckV1CreateDeckRes() {}

// LorDeckV1CreateDeckUnsupportedMediaType is response for LorDeckV1CreateDeck operation.
type LorDeckV1CreateDeckUnsupportedMediaType struct{}

func (*LorDeckV1CreateDeckUnsupportedMediaType) lorDeckV1CreateDeckRes() {}

// Ref: #/components/schemas/lor-deck-v1.DeckDto
type LorDeckV1DeckDto struct {
	ID   string `json:"id"`
	Name string `json:"name"`
	Code string `json:"code"`
}

// GetID returns the value of ID.
func (s *LorDeckV1DeckDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *LorDeckV1DeckDto) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *LorDeckV1DeckDto) GetCode() string {
	return s.Code
}

// SetID sets the value of ID.
func (s *LorDeckV1DeckDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *LorDeckV1DeckDto) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *LorDeckV1DeckDto) SetCode(val string) {
	s.Code = val
}

// LorDeckV1GetDecksBadGateway is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksBadGateway struct{}

func (*LorDeckV1GetDecksBadGateway) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksBadRequest is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksBadRequest struct{}

func (*LorDeckV1GetDecksBadRequest) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksForbidden is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksForbidden struct{}

func (*LorDeckV1GetDecksForbidden) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksGatewayTimeout is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksGatewayTimeout struct{}

func (*LorDeckV1GetDecksGatewayTimeout) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksInternalServerError is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksInternalServerError struct{}

func (*LorDeckV1GetDecksInternalServerError) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksMethodNotAllowed is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksMethodNotAllowed struct{}

func (*LorDeckV1GetDecksMethodNotAllowed) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksNotFound is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksNotFound struct{}

func (*LorDeckV1GetDecksNotFound) lorDeckV1GetDecksRes() {}

type LorDeckV1GetDecksOKApplicationJSON []LorDeckV1DeckDto

func (*LorDeckV1GetDecksOKApplicationJSON) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksServiceUnavailable is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksServiceUnavailable struct{}

func (*LorDeckV1GetDecksServiceUnavailable) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksTooManyRequests is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksTooManyRequests struct{}

func (*LorDeckV1GetDecksTooManyRequests) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksUnauthorized is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksUnauthorized struct{}

func (*LorDeckV1GetDecksUnauthorized) lorDeckV1GetDecksRes() {}

// LorDeckV1GetDecksUnsupportedMediaType is response for LorDeckV1GetDecks operation.
type LorDeckV1GetDecksUnsupportedMediaType struct{}

func (*LorDeckV1GetDecksUnsupportedMediaType) lorDeckV1GetDecksRes() {}

// Ref: #/components/schemas/lor-deck-v1.NewDeckDto
type LorDeckV1NewDeckDto struct {
	Name string `json:"name"`
	Code string `json:"code"`
}

// GetName returns the value of Name.
func (s *LorDeckV1NewDeckDto) GetName() string {
	return s.Name
}

// GetCode returns the value of Code.
func (s *LorDeckV1NewDeckDto) GetCode() string {
	return s.Code
}

// SetName sets the value of Name.
func (s *LorDeckV1NewDeckDto) SetName(val string) {
	s.Name = val
}

// SetCode sets the value of Code.
func (s *LorDeckV1NewDeckDto) SetCode(val string) {
	s.Code = val
}

// Ref: #/components/schemas/lor-inventory-v1.CardDto
type LorInventoryV1CardDto struct {
	Code  string `json:"code"`
	Count string `json:"count"`
}

// GetCode returns the value of Code.
func (s *LorInventoryV1CardDto) GetCode() string {
	return s.Code
}

// GetCount returns the value of Count.
func (s *LorInventoryV1CardDto) GetCount() string {
	return s.Count
}

// SetCode sets the value of Code.
func (s *LorInventoryV1CardDto) SetCode(val string) {
	s.Code = val
}

// SetCount sets the value of Count.
func (s *LorInventoryV1CardDto) SetCount(val string) {
	s.Count = val
}

// LorInventoryV1GetCardsBadGateway is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsBadGateway struct{}

func (*LorInventoryV1GetCardsBadGateway) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsBadRequest is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsBadRequest struct{}

func (*LorInventoryV1GetCardsBadRequest) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsForbidden is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsForbidden struct{}

func (*LorInventoryV1GetCardsForbidden) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsGatewayTimeout is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsGatewayTimeout struct{}

func (*LorInventoryV1GetCardsGatewayTimeout) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsInternalServerError is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsInternalServerError struct{}

func (*LorInventoryV1GetCardsInternalServerError) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsMethodNotAllowed is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsMethodNotAllowed struct{}

func (*LorInventoryV1GetCardsMethodNotAllowed) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsNotFound is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsNotFound struct{}

func (*LorInventoryV1GetCardsNotFound) lorInventoryV1GetCardsRes() {}

type LorInventoryV1GetCardsOKApplicationJSON []LorInventoryV1CardDto

func (*LorInventoryV1GetCardsOKApplicationJSON) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsServiceUnavailable is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsServiceUnavailable struct{}

func (*LorInventoryV1GetCardsServiceUnavailable) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsTooManyRequests is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsTooManyRequests struct{}

func (*LorInventoryV1GetCardsTooManyRequests) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsUnauthorized is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsUnauthorized struct{}

func (*LorInventoryV1GetCardsUnauthorized) lorInventoryV1GetCardsRes() {}

// LorInventoryV1GetCardsUnsupportedMediaType is response for LorInventoryV1GetCards operation.
type LorInventoryV1GetCardsUnsupportedMediaType struct{}

func (*LorInventoryV1GetCardsUnsupportedMediaType) lorInventoryV1GetCardsRes() {}

// LorMatchV1GetMatchBadGateway is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchBadGateway struct{}

func (*LorMatchV1GetMatchBadGateway) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchBadRequest is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchBadRequest struct{}

func (*LorMatchV1GetMatchBadRequest) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchForbidden is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchForbidden struct{}

func (*LorMatchV1GetMatchForbidden) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchGatewayTimeout is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchGatewayTimeout struct{}

func (*LorMatchV1GetMatchGatewayTimeout) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchIdsByPUUIDBadGateway is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDBadGateway struct{}

func (*LorMatchV1GetMatchIdsByPUUIDBadGateway) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDBadRequest is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDBadRequest struct{}

func (*LorMatchV1GetMatchIdsByPUUIDBadRequest) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDForbidden is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDForbidden struct{}

func (*LorMatchV1GetMatchIdsByPUUIDForbidden) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDGatewayTimeout is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDGatewayTimeout struct{}

func (*LorMatchV1GetMatchIdsByPUUIDGatewayTimeout) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDInternalServerError is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDInternalServerError struct{}

func (*LorMatchV1GetMatchIdsByPUUIDInternalServerError) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDMethodNotAllowed is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDMethodNotAllowed struct{}

func (*LorMatchV1GetMatchIdsByPUUIDMethodNotAllowed) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDNotFound is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDNotFound struct{}

func (*LorMatchV1GetMatchIdsByPUUIDNotFound) lorMatchV1GetMatchIdsByPUUIDRes() {}

type LorMatchV1GetMatchIdsByPUUIDOKApplicationJSON []string

func (*LorMatchV1GetMatchIdsByPUUIDOKApplicationJSON) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDServiceUnavailable is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDServiceUnavailable struct{}

func (*LorMatchV1GetMatchIdsByPUUIDServiceUnavailable) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDTooManyRequests is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDTooManyRequests struct{}

func (*LorMatchV1GetMatchIdsByPUUIDTooManyRequests) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDUnauthorized is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDUnauthorized struct{}

func (*LorMatchV1GetMatchIdsByPUUIDUnauthorized) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchIdsByPUUIDUnsupportedMediaType is response for LorMatchV1GetMatchIdsByPUUID operation.
type LorMatchV1GetMatchIdsByPUUIDUnsupportedMediaType struct{}

func (*LorMatchV1GetMatchIdsByPUUIDUnsupportedMediaType) lorMatchV1GetMatchIdsByPUUIDRes() {}

// LorMatchV1GetMatchInternalServerError is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchInternalServerError struct{}

func (*LorMatchV1GetMatchInternalServerError) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchMethodNotAllowed is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchMethodNotAllowed struct{}

func (*LorMatchV1GetMatchMethodNotAllowed) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchNotFound is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchNotFound struct{}

func (*LorMatchV1GetMatchNotFound) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchServiceUnavailable is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchServiceUnavailable struct{}

func (*LorMatchV1GetMatchServiceUnavailable) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchTooManyRequests is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchTooManyRequests struct{}

func (*LorMatchV1GetMatchTooManyRequests) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchUnauthorized is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchUnauthorized struct{}

func (*LorMatchV1GetMatchUnauthorized) lorMatchV1GetMatchRes() {}

// LorMatchV1GetMatchUnsupportedMediaType is response for LorMatchV1GetMatch operation.
type LorMatchV1GetMatchUnsupportedMediaType struct{}

func (*LorMatchV1GetMatchUnsupportedMediaType) lorMatchV1GetMatchRes() {}

// Ref: #/components/schemas/lor-match-v1.InfoDto
type LorMatchV1InfoDto struct {
	// (Legal values:  Constructed,  Expeditions,  Tutorial).
	GameMode LorMatchV1InfoDtoGameMode `json:"game_mode"`
	// (Legal values:  Ranked,  Normal,  AI,  Tutorial,  VanillaTrial,  Singleton,  StandardGauntlet).
	GameType         LorMatchV1InfoDtoGameType `json:"game_type"`
	GameStartTimeUtc string                    `json:"game_start_time_utc"`
	GameVersion      string                    `json:"game_version"`
	// (Legal values:  standard,  eternal).
	GameFormat LorMatchV1InfoDtoGameFormat `json:"game_format"`
	Players    []LorMatchV1PlayerDto       `json:"players"`
	// Total turns taken by both players.
	TotalTurnCount int32 `json:"total_turn_count"`
}

// GetGameMode returns the value of GameMode.
func (s *LorMatchV1InfoDto) GetGameMode() LorMatchV1InfoDtoGameMode {
	return s.GameMode
}

// GetGameType returns the value of GameType.
func (s *LorMatchV1InfoDto) GetGameType() LorMatchV1InfoDtoGameType {
	return s.GameType
}

// GetGameStartTimeUtc returns the value of GameStartTimeUtc.
func (s *LorMatchV1InfoDto) GetGameStartTimeUtc() string {
	return s.GameStartTimeUtc
}

// GetGameVersion returns the value of GameVersion.
func (s *LorMatchV1InfoDto) GetGameVersion() string {
	return s.GameVersion
}

// GetGameFormat returns the value of GameFormat.
func (s *LorMatchV1InfoDto) GetGameFormat() LorMatchV1InfoDtoGameFormat {
	return s.GameFormat
}

// GetPlayers returns the value of Players.
func (s *LorMatchV1InfoDto) GetPlayers() []LorMatchV1PlayerDto {
	return s.Players
}

// GetTotalTurnCount returns the value of TotalTurnCount.
func (s *LorMatchV1InfoDto) GetTotalTurnCount() int32 {
	return s.TotalTurnCount
}

// SetGameMode sets the value of GameMode.
func (s *LorMatchV1InfoDto) SetGameMode(val LorMatchV1InfoDtoGameMode) {
	s.GameMode = val
}

// SetGameType sets the value of GameType.
func (s *LorMatchV1InfoDto) SetGameType(val LorMatchV1InfoDtoGameType) {
	s.GameType = val
}

// SetGameStartTimeUtc sets the value of GameStartTimeUtc.
func (s *LorMatchV1InfoDto) SetGameStartTimeUtc(val string) {
	s.GameStartTimeUtc = val
}

// SetGameVersion sets the value of GameVersion.
func (s *LorMatchV1InfoDto) SetGameVersion(val string) {
	s.GameVersion = val
}

// SetGameFormat sets the value of GameFormat.
func (s *LorMatchV1InfoDto) SetGameFormat(val LorMatchV1InfoDtoGameFormat) {
	s.GameFormat = val
}

// SetPlayers sets the value of Players.
func (s *LorMatchV1InfoDto) SetPlayers(val []LorMatchV1PlayerDto) {
	s.Players = val
}

// SetTotalTurnCount sets the value of TotalTurnCount.
func (s *LorMatchV1InfoDto) SetTotalTurnCount(val int32) {
	s.TotalTurnCount = val
}

// (Legal values:  standard,  eternal).
type LorMatchV1InfoDtoGameFormat string

const (
	LorMatchV1InfoDtoGameFormatStandard LorMatchV1InfoDtoGameFormat = "standard"
	LorMatchV1InfoDtoGameFormatEternal  LorMatchV1InfoDtoGameFormat = "eternal"
)

// AllValues returns all LorMatchV1InfoDtoGameFormat values.
func (LorMatchV1InfoDtoGameFormat) AllValues() []LorMatchV1InfoDtoGameFormat {
	return []LorMatchV1InfoDtoGameFormat{
		LorMatchV1InfoDtoGameFormatStandard,
		LorMatchV1InfoDtoGameFormatEternal,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LorMatchV1InfoDtoGameFormat) MarshalText() ([]byte, error) {
	switch s {
	case LorMatchV1InfoDtoGameFormatStandard:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameFormatEternal:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LorMatchV1InfoDtoGameFormat) UnmarshalText(data []byte) error {
	switch LorMatchV1InfoDtoGameFormat(data) {
	case LorMatchV1InfoDtoGameFormatStandard:
		*s = LorMatchV1InfoDtoGameFormatStandard
		return nil
	case LorMatchV1InfoDtoGameFormatEternal:
		*s = LorMatchV1InfoDtoGameFormatEternal
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// (Legal values:  Constructed,  Expeditions,  Tutorial).
type LorMatchV1InfoDtoGameMode string

const (
	LorMatchV1InfoDtoGameModeConstructed LorMatchV1InfoDtoGameMode = "Constructed"
	LorMatchV1InfoDtoGameModeExpeditions LorMatchV1InfoDtoGameMode = "Expeditions"
	LorMatchV1InfoDtoGameModeTutorial    LorMatchV1InfoDtoGameMode = "Tutorial"
)

// AllValues returns all LorMatchV1InfoDtoGameMode values.
func (LorMatchV1InfoDtoGameMode) AllValues() []LorMatchV1InfoDtoGameMode {
	return []LorMatchV1InfoDtoGameMode{
		LorMatchV1InfoDtoGameModeConstructed,
		LorMatchV1InfoDtoGameModeExpeditions,
		LorMatchV1InfoDtoGameModeTutorial,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LorMatchV1InfoDtoGameMode) MarshalText() ([]byte, error) {
	switch s {
	case LorMatchV1InfoDtoGameModeConstructed:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameModeExpeditions:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameModeTutorial:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LorMatchV1InfoDtoGameMode) UnmarshalText(data []byte) error {
	switch LorMatchV1InfoDtoGameMode(data) {
	case LorMatchV1InfoDtoGameModeConstructed:
		*s = LorMatchV1InfoDtoGameModeConstructed
		return nil
	case LorMatchV1InfoDtoGameModeExpeditions:
		*s = LorMatchV1InfoDtoGameModeExpeditions
		return nil
	case LorMatchV1InfoDtoGameModeTutorial:
		*s = LorMatchV1InfoDtoGameModeTutorial
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// (Legal values:  Ranked,  Normal,  AI,  Tutorial,  VanillaTrial,  Singleton,  StandardGauntlet).
type LorMatchV1InfoDtoGameType string

const (
	LorMatchV1InfoDtoGameTypeRanked           LorMatchV1InfoDtoGameType = "Ranked"
	LorMatchV1InfoDtoGameTypeNormal           LorMatchV1InfoDtoGameType = "Normal"
	LorMatchV1InfoDtoGameTypeAI               LorMatchV1InfoDtoGameType = "AI"
	LorMatchV1InfoDtoGameTypeTutorial         LorMatchV1InfoDtoGameType = "Tutorial"
	LorMatchV1InfoDtoGameTypeVanillaTrial     LorMatchV1InfoDtoGameType = "VanillaTrial"
	LorMatchV1InfoDtoGameTypeSingleton        LorMatchV1InfoDtoGameType = "Singleton"
	LorMatchV1InfoDtoGameTypeStandardGauntlet LorMatchV1InfoDtoGameType = "StandardGauntlet"
)

// AllValues returns all LorMatchV1InfoDtoGameType values.
func (LorMatchV1InfoDtoGameType) AllValues() []LorMatchV1InfoDtoGameType {
	return []LorMatchV1InfoDtoGameType{
		LorMatchV1InfoDtoGameTypeRanked,
		LorMatchV1InfoDtoGameTypeNormal,
		LorMatchV1InfoDtoGameTypeAI,
		LorMatchV1InfoDtoGameTypeTutorial,
		LorMatchV1InfoDtoGameTypeVanillaTrial,
		LorMatchV1InfoDtoGameTypeSingleton,
		LorMatchV1InfoDtoGameTypeStandardGauntlet,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LorMatchV1InfoDtoGameType) MarshalText() ([]byte, error) {
	switch s {
	case LorMatchV1InfoDtoGameTypeRanked:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameTypeNormal:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameTypeAI:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameTypeTutorial:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameTypeVanillaTrial:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameTypeSingleton:
		return []byte(s), nil
	case LorMatchV1InfoDtoGameTypeStandardGauntlet:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LorMatchV1InfoDtoGameType) UnmarshalText(data []byte) error {
	switch LorMatchV1InfoDtoGameType(data) {
	case LorMatchV1InfoDtoGameTypeRanked:
		*s = LorMatchV1InfoDtoGameTypeRanked
		return nil
	case LorMatchV1InfoDtoGameTypeNormal:
		*s = LorMatchV1InfoDtoGameTypeNormal
		return nil
	case LorMatchV1InfoDtoGameTypeAI:
		*s = LorMatchV1InfoDtoGameTypeAI
		return nil
	case LorMatchV1InfoDtoGameTypeTutorial:
		*s = LorMatchV1InfoDtoGameTypeTutorial
		return nil
	case LorMatchV1InfoDtoGameTypeVanillaTrial:
		*s = LorMatchV1InfoDtoGameTypeVanillaTrial
		return nil
	case LorMatchV1InfoDtoGameTypeSingleton:
		*s = LorMatchV1InfoDtoGameTypeSingleton
		return nil
	case LorMatchV1InfoDtoGameTypeStandardGauntlet:
		*s = LorMatchV1InfoDtoGameTypeStandardGauntlet
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/lor-match-v1.MatchDto
type LorMatchV1MatchDto struct {
	// Match metadata.
	Metadata LorMatchV1MetadataDto `json:"metadata"`
	// Match info.
	Info LorMatchV1InfoDto `json:"info"`
}

// GetMetadata returns the value of Metadata.
func (s *LorMatchV1MatchDto) GetMetadata() LorMatchV1MetadataDto {
	return s.Metadata
}

// GetInfo returns the value of Info.
func (s *LorMatchV1MatchDto) GetInfo() LorMatchV1InfoDto {
	return s.Info
}

// SetMetadata sets the value of Metadata.
func (s *LorMatchV1MatchDto) SetMetadata(val LorMatchV1MetadataDto) {
	s.Metadata = val
}

// SetInfo sets the value of Info.
func (s *LorMatchV1MatchDto) SetInfo(val LorMatchV1InfoDto) {
	s.Info = val
}

func (*LorMatchV1MatchDto) lorMatchV1GetMatchRes() {}

// Ref: #/components/schemas/lor-match-v1.MetadataDto
type LorMatchV1MetadataDto struct {
	// Match data version.
	DataVersion string `json:"data_version"`
	// Match id.
	MatchID string `json:"match_id"`
	// A list of participant PUUIDs.
	Participants []string `json:"participants"`
}

// GetDataVersion returns the value of DataVersion.
func (s *LorMatchV1MetadataDto) GetDataVersion() string {
	return s.DataVersion
}

// GetMatchID returns the value of MatchID.
func (s *LorMatchV1MetadataDto) GetMatchID() string {
	return s.MatchID
}

// GetParticipants returns the value of Participants.
func (s *LorMatchV1MetadataDto) GetParticipants() []string {
	return s.Participants
}

// SetDataVersion sets the value of DataVersion.
func (s *LorMatchV1MetadataDto) SetDataVersion(val string) {
	s.DataVersion = val
}

// SetMatchID sets the value of MatchID.
func (s *LorMatchV1MetadataDto) SetMatchID(val string) {
	s.MatchID = val
}

// SetParticipants sets the value of Participants.
func (s *LorMatchV1MetadataDto) SetParticipants(val []string) {
	s.Participants = val
}

// Ref: #/components/schemas/lor-match-v1.PlayerDto
type LorMatchV1PlayerDto struct {
	Puuid  string `json:"puuid"`
	DeckID string `json:"deck_id"`
	// Code for the deck played. Refer to LOR documentation for details on deck codes.
	DeckCode    string   `json:"deck_code"`
	Factions    []string `json:"factions"`
	GameOutcome string   `json:"game_outcome"`
	// The order in which the players took turns.
	OrderOfPlay int32 `json:"order_of_play"`
}

// GetPuuid returns the value of Puuid.
func (s *LorMatchV1PlayerDto) GetPuuid() string {
	return s.Puuid
}

// GetDeckID returns the value of DeckID.
func (s *LorMatchV1PlayerDto) GetDeckID() string {
	return s.DeckID
}

// GetDeckCode returns the value of DeckCode.
func (s *LorMatchV1PlayerDto) GetDeckCode() string {
	return s.DeckCode
}

// GetFactions returns the value of Factions.
func (s *LorMatchV1PlayerDto) GetFactions() []string {
	return s.Factions
}

// GetGameOutcome returns the value of GameOutcome.
func (s *LorMatchV1PlayerDto) GetGameOutcome() string {
	return s.GameOutcome
}

// GetOrderOfPlay returns the value of OrderOfPlay.
func (s *LorMatchV1PlayerDto) GetOrderOfPlay() int32 {
	return s.OrderOfPlay
}

// SetPuuid sets the value of Puuid.
func (s *LorMatchV1PlayerDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetDeckID sets the value of DeckID.
func (s *LorMatchV1PlayerDto) SetDeckID(val string) {
	s.DeckID = val
}

// SetDeckCode sets the value of DeckCode.
func (s *LorMatchV1PlayerDto) SetDeckCode(val string) {
	s.DeckCode = val
}

// SetFactions sets the value of Factions.
func (s *LorMatchV1PlayerDto) SetFactions(val []string) {
	s.Factions = val
}

// SetGameOutcome sets the value of GameOutcome.
func (s *LorMatchV1PlayerDto) SetGameOutcome(val string) {
	s.GameOutcome = val
}

// SetOrderOfPlay sets the value of OrderOfPlay.
func (s *LorMatchV1PlayerDto) SetOrderOfPlay(val int32) {
	s.OrderOfPlay = val
}

// LorRankedV1GetLeaderboardsBadGateway is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsBadGateway struct{}

func (*LorRankedV1GetLeaderboardsBadGateway) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsBadRequest is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsBadRequest struct{}

func (*LorRankedV1GetLeaderboardsBadRequest) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsForbidden is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsForbidden struct{}

func (*LorRankedV1GetLeaderboardsForbidden) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsGatewayTimeout is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsGatewayTimeout struct{}

func (*LorRankedV1GetLeaderboardsGatewayTimeout) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsInternalServerError is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsInternalServerError struct{}

func (*LorRankedV1GetLeaderboardsInternalServerError) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsMethodNotAllowed is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsMethodNotAllowed struct{}

func (*LorRankedV1GetLeaderboardsMethodNotAllowed) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsNotFound is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsNotFound struct{}

func (*LorRankedV1GetLeaderboardsNotFound) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsServiceUnavailable is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsServiceUnavailable struct{}

func (*LorRankedV1GetLeaderboardsServiceUnavailable) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsTooManyRequests is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsTooManyRequests struct{}

func (*LorRankedV1GetLeaderboardsTooManyRequests) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsUnauthorized is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsUnauthorized struct{}

func (*LorRankedV1GetLeaderboardsUnauthorized) lorRankedV1GetLeaderboardsRes() {}

// LorRankedV1GetLeaderboardsUnsupportedMediaType is response for LorRankedV1GetLeaderboards operation.
type LorRankedV1GetLeaderboardsUnsupportedMediaType struct{}

func (*LorRankedV1GetLeaderboardsUnsupportedMediaType) lorRankedV1GetLeaderboardsRes() {}

// Ref: #/components/schemas/lor-ranked-v1.LeaderboardDto
type LorRankedV1LeaderboardDto struct {
	// A list of players in Master tier.
	Players []LorRankedV1PlayerDto `json:"players"`
}

// GetPlayers returns the value of Players.
func (s *LorRankedV1LeaderboardDto) GetPlayers() []LorRankedV1PlayerDto {
	return s.Players
}

// SetPlayers sets the value of Players.
func (s *LorRankedV1LeaderboardDto) SetPlayers(val []LorRankedV1PlayerDto) {
	s.Players = val
}

func (*LorRankedV1LeaderboardDto) lorRankedV1GetLeaderboardsRes() {}

// Ref: #/components/schemas/lor-ranked-v1.PlayerDto
type LorRankedV1PlayerDto struct {
	Name string `json:"name"`
	Rank int32  `json:"rank"`
	// League points.
	Lp int32 `json:"lp"`
}

// GetName returns the value of Name.
func (s *LorRankedV1PlayerDto) GetName() string {
	return s.Name
}

// GetRank returns the value of Rank.
func (s *LorRankedV1PlayerDto) GetRank() int32 {
	return s.Rank
}

// GetLp returns the value of Lp.
func (s *LorRankedV1PlayerDto) GetLp() int32 {
	return s.Lp
}

// SetName sets the value of Name.
func (s *LorRankedV1PlayerDto) SetName(val string) {
	s.Name = val
}

// SetRank sets the value of Rank.
func (s *LorRankedV1PlayerDto) SetRank(val int32) {
	s.Rank = val
}

// SetLp sets the value of Lp.
func (s *LorRankedV1PlayerDto) SetLp(val int32) {
	s.Lp = val
}

// Ref: #/components/schemas/lor-status-v1.ContentDto
type LorStatusV1ContentDto struct {
	Locale  string `json:"locale"`
	Content string `json:"content"`
}

// GetLocale returns the value of Locale.
func (s *LorStatusV1ContentDto) GetLocale() string {
	return s.Locale
}

// GetContent returns the value of Content.
func (s *LorStatusV1ContentDto) GetContent() string {
	return s.Content
}

// SetLocale sets the value of Locale.
func (s *LorStatusV1ContentDto) SetLocale(val string) {
	s.Locale = val
}

// SetContent sets the value of Content.
func (s *LorStatusV1ContentDto) SetContent(val string) {
	s.Content = val
}

// LorStatusV1GetPlatformDataBadGateway is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataBadGateway struct{}

func (*LorStatusV1GetPlatformDataBadGateway) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataBadRequest is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataBadRequest struct{}

func (*LorStatusV1GetPlatformDataBadRequest) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataForbidden is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataForbidden struct{}

func (*LorStatusV1GetPlatformDataForbidden) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataGatewayTimeout is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataGatewayTimeout struct{}

func (*LorStatusV1GetPlatformDataGatewayTimeout) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataInternalServerError is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataInternalServerError struct{}

func (*LorStatusV1GetPlatformDataInternalServerError) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataMethodNotAllowed is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataMethodNotAllowed struct{}

func (*LorStatusV1GetPlatformDataMethodNotAllowed) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataNotFound is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataNotFound struct{}

func (*LorStatusV1GetPlatformDataNotFound) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataServiceUnavailable is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataServiceUnavailable struct{}

func (*LorStatusV1GetPlatformDataServiceUnavailable) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataTooManyRequests is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataTooManyRequests struct{}

func (*LorStatusV1GetPlatformDataTooManyRequests) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataUnauthorized is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataUnauthorized struct{}

func (*LorStatusV1GetPlatformDataUnauthorized) lorStatusV1GetPlatformDataRes() {}

// LorStatusV1GetPlatformDataUnsupportedMediaType is response for LorStatusV1GetPlatformData operation.
type LorStatusV1GetPlatformDataUnsupportedMediaType struct{}

func (*LorStatusV1GetPlatformDataUnsupportedMediaType) lorStatusV1GetPlatformDataRes() {}

// Ref: #/components/schemas/lor-status-v1.PlatformDataDto
type LorStatusV1PlatformDataDto struct {
	ID           string                 `json:"id"`
	Name         string                 `json:"name"`
	Locales      []string               `json:"locales"`
	Maintenances []LorStatusV1StatusDto `json:"maintenances"`
	Incidents    []LorStatusV1StatusDto `json:"incidents"`
}

// GetID returns the value of ID.
func (s *LorStatusV1PlatformDataDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *LorStatusV1PlatformDataDto) GetName() string {
	return s.Name
}

// GetLocales returns the value of Locales.
func (s *LorStatusV1PlatformDataDto) GetLocales() []string {
	return s.Locales
}

// GetMaintenances returns the value of Maintenances.
func (s *LorStatusV1PlatformDataDto) GetMaintenances() []LorStatusV1StatusDto {
	return s.Maintenances
}

// GetIncidents returns the value of Incidents.
func (s *LorStatusV1PlatformDataDto) GetIncidents() []LorStatusV1StatusDto {
	return s.Incidents
}

// SetID sets the value of ID.
func (s *LorStatusV1PlatformDataDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *LorStatusV1PlatformDataDto) SetName(val string) {
	s.Name = val
}

// SetLocales sets the value of Locales.
func (s *LorStatusV1PlatformDataDto) SetLocales(val []string) {
	s.Locales = val
}

// SetMaintenances sets the value of Maintenances.
func (s *LorStatusV1PlatformDataDto) SetMaintenances(val []LorStatusV1StatusDto) {
	s.Maintenances = val
}

// SetIncidents sets the value of Incidents.
func (s *LorStatusV1PlatformDataDto) SetIncidents(val []LorStatusV1StatusDto) {
	s.Incidents = val
}

func (*LorStatusV1PlatformDataDto) lorStatusV1GetPlatformDataRes() {}

// Ref: #/components/schemas/lor-status-v1.StatusDto
type LorStatusV1StatusDto struct {
	ID int32 `json:"id"`
	// (Legal values:  scheduled,  in_progress,  complete).
	MaintenanceStatus LorStatusV1StatusDtoMaintenanceStatus `json:"maintenance_status"`
	// (Legal values:  info,  warning,  critical).
	IncidentSeverity LorStatusV1StatusDtoIncidentSeverity `json:"incident_severity"`
	Titles           []LorStatusV1ContentDto              `json:"titles"`
	Updates          []LorStatusV1UpdateDto               `json:"updates"`
	CreatedAt        string                               `json:"created_at"`
	ArchiveAt        string                               `json:"archive_at"`
	UpdatedAt        string                               `json:"updated_at"`
	// (Legal values: windows, macos, android, ios, ps4, xbone, switch).
	Platforms []LorStatusV1StatusDtoPlatformsItem `json:"platforms"`
}

// GetID returns the value of ID.
func (s *LorStatusV1StatusDto) GetID() int32 {
	return s.ID
}

// GetMaintenanceStatus returns the value of MaintenanceStatus.
func (s *LorStatusV1StatusDto) GetMaintenanceStatus() LorStatusV1StatusDtoMaintenanceStatus {
	return s.MaintenanceStatus
}

// GetIncidentSeverity returns the value of IncidentSeverity.
func (s *LorStatusV1StatusDto) GetIncidentSeverity() LorStatusV1StatusDtoIncidentSeverity {
	return s.IncidentSeverity
}

// GetTitles returns the value of Titles.
func (s *LorStatusV1StatusDto) GetTitles() []LorStatusV1ContentDto {
	return s.Titles
}

// GetUpdates returns the value of Updates.
func (s *LorStatusV1StatusDto) GetUpdates() []LorStatusV1UpdateDto {
	return s.Updates
}

// GetCreatedAt returns the value of CreatedAt.
func (s *LorStatusV1StatusDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetArchiveAt returns the value of ArchiveAt.
func (s *LorStatusV1StatusDto) GetArchiveAt() string {
	return s.ArchiveAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *LorStatusV1StatusDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetPlatforms returns the value of Platforms.
func (s *LorStatusV1StatusDto) GetPlatforms() []LorStatusV1StatusDtoPlatformsItem {
	return s.Platforms
}

// SetID sets the value of ID.
func (s *LorStatusV1StatusDto) SetID(val int32) {
	s.ID = val
}

// SetMaintenanceStatus sets the value of MaintenanceStatus.
func (s *LorStatusV1StatusDto) SetMaintenanceStatus(val LorStatusV1StatusDtoMaintenanceStatus) {
	s.MaintenanceStatus = val
}

// SetIncidentSeverity sets the value of IncidentSeverity.
func (s *LorStatusV1StatusDto) SetIncidentSeverity(val LorStatusV1StatusDtoIncidentSeverity) {
	s.IncidentSeverity = val
}

// SetTitles sets the value of Titles.
func (s *LorStatusV1StatusDto) SetTitles(val []LorStatusV1ContentDto) {
	s.Titles = val
}

// SetUpdates sets the value of Updates.
func (s *LorStatusV1StatusDto) SetUpdates(val []LorStatusV1UpdateDto) {
	s.Updates = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *LorStatusV1StatusDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetArchiveAt sets the value of ArchiveAt.
func (s *LorStatusV1StatusDto) SetArchiveAt(val string) {
	s.ArchiveAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *LorStatusV1StatusDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetPlatforms sets the value of Platforms.
func (s *LorStatusV1StatusDto) SetPlatforms(val []LorStatusV1StatusDtoPlatformsItem) {
	s.Platforms = val
}

// (Legal values:  info,  warning,  critical).
type LorStatusV1StatusDtoIncidentSeverity string

const (
	LorStatusV1StatusDtoIncidentSeverityInfo     LorStatusV1StatusDtoIncidentSeverity = "info"
	LorStatusV1StatusDtoIncidentSeverityWarning  LorStatusV1StatusDtoIncidentSeverity = "warning"
	LorStatusV1StatusDtoIncidentSeverityCritical LorStatusV1StatusDtoIncidentSeverity = "critical"
)

// AllValues returns all LorStatusV1StatusDtoIncidentSeverity values.
func (LorStatusV1StatusDtoIncidentSeverity) AllValues() []LorStatusV1StatusDtoIncidentSeverity {
	return []LorStatusV1StatusDtoIncidentSeverity{
		LorStatusV1StatusDtoIncidentSeverityInfo,
		LorStatusV1StatusDtoIncidentSeverityWarning,
		LorStatusV1StatusDtoIncidentSeverityCritical,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LorStatusV1StatusDtoIncidentSeverity) MarshalText() ([]byte, error) {
	switch s {
	case LorStatusV1StatusDtoIncidentSeverityInfo:
		return []byte(s), nil
	case LorStatusV1StatusDtoIncidentSeverityWarning:
		return []byte(s), nil
	case LorStatusV1StatusDtoIncidentSeverityCritical:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LorStatusV1StatusDtoIncidentSeverity) UnmarshalText(data []byte) error {
	switch LorStatusV1StatusDtoIncidentSeverity(data) {
	case LorStatusV1StatusDtoIncidentSeverityInfo:
		*s = LorStatusV1StatusDtoIncidentSeverityInfo
		return nil
	case LorStatusV1StatusDtoIncidentSeverityWarning:
		*s = LorStatusV1StatusDtoIncidentSeverityWarning
		return nil
	case LorStatusV1StatusDtoIncidentSeverityCritical:
		*s = LorStatusV1StatusDtoIncidentSeverityCritical
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// (Legal values:  scheduled,  in_progress,  complete).
type LorStatusV1StatusDtoMaintenanceStatus string

const (
	LorStatusV1StatusDtoMaintenanceStatusScheduled  LorStatusV1StatusDtoMaintenanceStatus = "scheduled"
	LorStatusV1StatusDtoMaintenanceStatusInProgress LorStatusV1StatusDtoMaintenanceStatus = "in_progress"
	LorStatusV1StatusDtoMaintenanceStatusComplete   LorStatusV1StatusDtoMaintenanceStatus = "complete"
)

// AllValues returns all LorStatusV1StatusDtoMaintenanceStatus values.
func (LorStatusV1StatusDtoMaintenanceStatus) AllValues() []LorStatusV1StatusDtoMaintenanceStatus {
	return []LorStatusV1StatusDtoMaintenanceStatus{
		LorStatusV1StatusDtoMaintenanceStatusScheduled,
		LorStatusV1StatusDtoMaintenanceStatusInProgress,
		LorStatusV1StatusDtoMaintenanceStatusComplete,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LorStatusV1StatusDtoMaintenanceStatus) MarshalText() ([]byte, error) {
	switch s {
	case LorStatusV1StatusDtoMaintenanceStatusScheduled:
		return []byte(s), nil
	case LorStatusV1StatusDtoMaintenanceStatusInProgress:
		return []byte(s), nil
	case LorStatusV1StatusDtoMaintenanceStatusComplete:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LorStatusV1StatusDtoMaintenanceStatus) UnmarshalText(data []byte) error {
	switch LorStatusV1StatusDtoMaintenanceStatus(data) {
	case LorStatusV1StatusDtoMaintenanceStatusScheduled:
		*s = LorStatusV1StatusDtoMaintenanceStatusScheduled
		return nil
	case LorStatusV1StatusDtoMaintenanceStatusInProgress:
		*s = LorStatusV1StatusDtoMaintenanceStatusInProgress
		return nil
	case LorStatusV1StatusDtoMaintenanceStatusComplete:
		*s = LorStatusV1StatusDtoMaintenanceStatusComplete
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type LorStatusV1StatusDtoPlatformsItem string

const (
	LorStatusV1StatusDtoPlatformsItemWindows LorStatusV1StatusDtoPlatformsItem = "windows"
	LorStatusV1StatusDtoPlatformsItemMacos   LorStatusV1StatusDtoPlatformsItem = "macos"
	LorStatusV1StatusDtoPlatformsItemAndroid LorStatusV1StatusDtoPlatformsItem = "android"
	LorStatusV1StatusDtoPlatformsItemIos     LorStatusV1StatusDtoPlatformsItem = "ios"
	LorStatusV1StatusDtoPlatformsItemPs4     LorStatusV1StatusDtoPlatformsItem = "ps4"
	LorStatusV1StatusDtoPlatformsItemXbone   LorStatusV1StatusDtoPlatformsItem = "xbone"
	LorStatusV1StatusDtoPlatformsItemSwitch  LorStatusV1StatusDtoPlatformsItem = "switch"
)

// AllValues returns all LorStatusV1StatusDtoPlatformsItem values.
func (LorStatusV1StatusDtoPlatformsItem) AllValues() []LorStatusV1StatusDtoPlatformsItem {
	return []LorStatusV1StatusDtoPlatformsItem{
		LorStatusV1StatusDtoPlatformsItemWindows,
		LorStatusV1StatusDtoPlatformsItemMacos,
		LorStatusV1StatusDtoPlatformsItemAndroid,
		LorStatusV1StatusDtoPlatformsItemIos,
		LorStatusV1StatusDtoPlatformsItemPs4,
		LorStatusV1StatusDtoPlatformsItemXbone,
		LorStatusV1StatusDtoPlatformsItemSwitch,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LorStatusV1StatusDtoPlatformsItem) MarshalText() ([]byte, error) {
	switch s {
	case LorStatusV1StatusDtoPlatformsItemWindows:
		return []byte(s), nil
	case LorStatusV1StatusDtoPlatformsItemMacos:
		return []byte(s), nil
	case LorStatusV1StatusDtoPlatformsItemAndroid:
		return []byte(s), nil
	case LorStatusV1StatusDtoPlatformsItemIos:
		return []byte(s), nil
	case LorStatusV1StatusDtoPlatformsItemPs4:
		return []byte(s), nil
	case LorStatusV1StatusDtoPlatformsItemXbone:
		return []byte(s), nil
	case LorStatusV1StatusDtoPlatformsItemSwitch:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LorStatusV1StatusDtoPlatformsItem) UnmarshalText(data []byte) error {
	switch LorStatusV1StatusDtoPlatformsItem(data) {
	case LorStatusV1StatusDtoPlatformsItemWindows:
		*s = LorStatusV1StatusDtoPlatformsItemWindows
		return nil
	case LorStatusV1StatusDtoPlatformsItemMacos:
		*s = LorStatusV1StatusDtoPlatformsItemMacos
		return nil
	case LorStatusV1StatusDtoPlatformsItemAndroid:
		*s = LorStatusV1StatusDtoPlatformsItemAndroid
		return nil
	case LorStatusV1StatusDtoPlatformsItemIos:
		*s = LorStatusV1StatusDtoPlatformsItemIos
		return nil
	case LorStatusV1StatusDtoPlatformsItemPs4:
		*s = LorStatusV1StatusDtoPlatformsItemPs4
		return nil
	case LorStatusV1StatusDtoPlatformsItemXbone:
		*s = LorStatusV1StatusDtoPlatformsItemXbone
		return nil
	case LorStatusV1StatusDtoPlatformsItemSwitch:
		*s = LorStatusV1StatusDtoPlatformsItemSwitch
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/lor-status-v1.UpdateDto
type LorStatusV1UpdateDto struct {
	ID      int32  `json:"id"`
	Author  string `json:"author"`
	Publish bool   `json:"publish"`
	// (Legal values: riotclient, riotstatus, game).
	PublishLocations []LorStatusV1UpdateDtoPublishLocationsItem `json:"publish_locations"`
	Translations     []LorStatusV1ContentDto                    `json:"translations"`
	CreatedAt        string                                     `json:"created_at"`
	UpdatedAt        string                                     `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *LorStatusV1UpdateDto) GetID() int32 {
	return s.ID
}

// GetAuthor returns the value of Author.
func (s *LorStatusV1UpdateDto) GetAuthor() string {
	return s.Author
}

// GetPublish returns the value of Publish.
func (s *LorStatusV1UpdateDto) GetPublish() bool {
	return s.Publish
}

// GetPublishLocations returns the value of PublishLocations.
func (s *LorStatusV1UpdateDto) GetPublishLocations() []LorStatusV1UpdateDtoPublishLocationsItem {
	return s.PublishLocations
}

// GetTranslations returns the value of Translations.
func (s *LorStatusV1UpdateDto) GetTranslations() []LorStatusV1ContentDto {
	return s.Translations
}

// GetCreatedAt returns the value of CreatedAt.
func (s *LorStatusV1UpdateDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *LorStatusV1UpdateDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *LorStatusV1UpdateDto) SetID(val int32) {
	s.ID = val
}

// SetAuthor sets the value of Author.
func (s *LorStatusV1UpdateDto) SetAuthor(val string) {
	s.Author = val
}

// SetPublish sets the value of Publish.
func (s *LorStatusV1UpdateDto) SetPublish(val bool) {
	s.Publish = val
}

// SetPublishLocations sets the value of PublishLocations.
func (s *LorStatusV1UpdateDto) SetPublishLocations(val []LorStatusV1UpdateDtoPublishLocationsItem) {
	s.PublishLocations = val
}

// SetTranslations sets the value of Translations.
func (s *LorStatusV1UpdateDto) SetTranslations(val []LorStatusV1ContentDto) {
	s.Translations = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *LorStatusV1UpdateDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *LorStatusV1UpdateDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

type LorStatusV1UpdateDtoPublishLocationsItem string

const (
	LorStatusV1UpdateDtoPublishLocationsItemRiotclient LorStatusV1UpdateDtoPublishLocationsItem = "riotclient"
	LorStatusV1UpdateDtoPublishLocationsItemRiotstatus LorStatusV1UpdateDtoPublishLocationsItem = "riotstatus"
	LorStatusV1UpdateDtoPublishLocationsItemGame       LorStatusV1UpdateDtoPublishLocationsItem = "game"
)

// AllValues returns all LorStatusV1UpdateDtoPublishLocationsItem values.
func (LorStatusV1UpdateDtoPublishLocationsItem) AllValues() []LorStatusV1UpdateDtoPublishLocationsItem {
	return []LorStatusV1UpdateDtoPublishLocationsItem{
		LorStatusV1UpdateDtoPublishLocationsItemRiotclient,
		LorStatusV1UpdateDtoPublishLocationsItemRiotstatus,
		LorStatusV1UpdateDtoPublishLocationsItemGame,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s LorStatusV1UpdateDtoPublishLocationsItem) MarshalText() ([]byte, error) {
	switch s {
	case LorStatusV1UpdateDtoPublishLocationsItemRiotclient:
		return []byte(s), nil
	case LorStatusV1UpdateDtoPublishLocationsItemRiotstatus:
		return []byte(s), nil
	case LorStatusV1UpdateDtoPublishLocationsItemGame:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *LorStatusV1UpdateDtoPublishLocationsItem) UnmarshalText(data []byte) error {
	switch LorStatusV1UpdateDtoPublishLocationsItem(data) {
	case LorStatusV1UpdateDtoPublishLocationsItemRiotclient:
		*s = LorStatusV1UpdateDtoPublishLocationsItemRiotclient
		return nil
	case LorStatusV1UpdateDtoPublishLocationsItemRiotstatus:
		*s = LorStatusV1UpdateDtoPublishLocationsItemRiotstatus
		return nil
	case LorStatusV1UpdateDtoPublishLocationsItemGame:
		*s = LorStatusV1UpdateDtoPublishLocationsItemGame
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/match-v5.BanDto
type MatchV5BanDto struct {
	ChampionId int32 `json:"championId"`
	PickTurn   int32 `json:"pickTurn"`
}

// GetChampionId returns the value of ChampionId.
func (s *MatchV5BanDto) GetChampionId() int32 {
	return s.ChampionId
}

// GetPickTurn returns the value of PickTurn.
func (s *MatchV5BanDto) GetPickTurn() int32 {
	return s.PickTurn
}

// SetChampionId sets the value of ChampionId.
func (s *MatchV5BanDto) SetChampionId(val int32) {
	s.ChampionId = val
}

// SetPickTurn sets the value of PickTurn.
func (s *MatchV5BanDto) SetPickTurn(val int32) {
	s.PickTurn = val
}

// Challenges DTO.
// Ref: #/components/schemas/match-v5.ChallengesDto
type MatchV5ChallengesDto struct {
	R12AssistStreakCount                      OptInt32                                            `json:"12AssistStreakCount"`
	BaronBuffGoldAdvantageOverThreshold       OptInt32                                            `json:"baronBuffGoldAdvantageOverThreshold"`
	ControlWardTimeCoverageInRiverOrEnemyHalf OptFloat32                                          `json:"controlWardTimeCoverageInRiverOrEnemyHalf"`
	EarliestBaron                             OptFloat64                                          `json:"earliestBaron"`
	EarliestDragonTakedown                    OptFloat64                                          `json:"earliestDragonTakedown"`
	EarliestElderDragon                       OptFloat64                                          `json:"earliestElderDragon"`
	EarlyLaningPhaseGoldExpAdvantage          OptFloat64                                          `json:"earlyLaningPhaseGoldExpAdvantage"`
	FasterSupportQuestCompletion              OptMatchV5ChallengesDtoFasterSupportQuestCompletion `json:"fasterSupportQuestCompletion"`
	FastestLegendary                          OptFloat64                                          `json:"fastestLegendary"`
	HadAfkTeammate                            OptMatchV5ChallengesDtoHadAfkTeammate               `json:"hadAfkTeammate"`
	HighestChampionDamage                     OptInt32                                            `json:"highestChampionDamage"`
	HighestCrowdControlScore                  OptMatchV5ChallengesDtoHighestCrowdControlScore     `json:"highestCrowdControlScore"`
	HighestWardKills                          OptMatchV5ChallengesDtoHighestWardKills             `json:"highestWardKills"`
	JunglerKillsEarlyJungle                   OptInt32                                            `json:"junglerKillsEarlyJungle"`
	KillsOnLanersEarlyJungleAsJungler         OptInt32                                            `json:"killsOnLanersEarlyJungleAsJungler"`
	LaningPhaseGoldExpAdvantage               OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage  `json:"laningPhaseGoldExpAdvantage"`
	LegendaryCount                            OptInt32                                            `json:"legendaryCount"`
	MaxCsAdvantageOnLaneOpponent              OptFloat32                                          `json:"maxCsAdvantageOnLaneOpponent"`
	MaxLevelLeadLaneOpponent                  OptInt32                                            `json:"maxLevelLeadLaneOpponent"`
	MostWardsDestroyedOneSweeper              OptInt32                                            `json:"mostWardsDestroyedOneSweeper"`
	MythicItemUsed                            OptInt32                                            `json:"mythicItemUsed"`
	PlayedChampSelectPosition                 OptMatchV5ChallengesDtoPlayedChampSelectPosition    `json:"playedChampSelectPosition"`
	SoloTurretsLategame                       OptInt32                                            `json:"soloTurretsLategame"`
	TakedownsFirst25Minutes                   OptInt32                                            `json:"takedownsFirst25Minutes"`
	TeleportTakedowns                         OptInt32                                            `json:"teleportTakedowns"`
	ThirdInhibitorDestroyedTime               OptFloat64                                          `json:"thirdInhibitorDestroyedTime"`
	ThreeWardsOneSweeperCount                 OptInt32                                            `json:"threeWardsOneSweeperCount"`
	VisionScoreAdvantageLaneOpponent          OptFloat32                                          `json:"visionScoreAdvantageLaneOpponent"`
	InfernalScalePickup                       OptInt32                                            `json:"InfernalScalePickup"`
	FistBumpParticipation                     OptInt32                                            `json:"fistBumpParticipation"`
	VoidMonsterKill                           OptInt32                                            `json:"voidMonsterKill"`
	AbilityUses                               OptInt32                                            `json:"abilityUses"`
	AcesBefore15Minutes                       OptInt32                                            `json:"acesBefore15Minutes"`
	AlliedJungleMonsterKills                  OptFloat32                                          `json:"alliedJungleMonsterKills"`
	BaronTakedowns                            OptInt32                                            `json:"baronTakedowns"`
	BlastConeOppositeOpponentCount            OptInt32                                            `json:"blastConeOppositeOpponentCount"`
	BountyGold                                OptFloat64                                          `json:"bountyGold"`
	BuffsStolen                               OptInt32                                            `json:"buffsStolen"`
	CompleteSupportQuestInTime                OptInt32                                            `json:"completeSupportQuestInTime"`
	ControlWardsPlaced                        OptInt32                                            `json:"controlWardsPlaced"`
	DamagePerMinute                           OptFloat32                                          `json:"damagePerMinute"`
	DamageTakenOnTeamPercentage               OptFloat32                                          `json:"damageTakenOnTeamPercentage"`
	DancedWithRiftHerald                      OptInt32                                            `json:"dancedWithRiftHerald"`
	DeathsByEnemyChamps                       OptInt32                                            `json:"deathsByEnemyChamps"`
	DodgeSkillShotsSmallWindow                OptInt32                                            `json:"dodgeSkillShotsSmallWindow"`
	DoubleAces                                OptInt32                                            `json:"doubleAces"`
	DragonTakedowns                           OptInt32                                            `json:"dragonTakedowns"`
	LegendaryItemUsed                         []int32                                             `json:"legendaryItemUsed"`
	EffectiveHealAndShielding                 OptFloat32                                          `json:"effectiveHealAndShielding"`
	ElderDragonKillsWithOpposingSoul          OptInt32                                            `json:"elderDragonKillsWithOpposingSoul"`
	ElderDragonMultikills                     OptInt32                                            `json:"elderDragonMultikills"`
	EnemyChampionImmobilizations              OptInt32                                            `json:"enemyChampionImmobilizations"`
	EnemyJungleMonsterKills                   OptFloat32                                          `json:"enemyJungleMonsterKills"`
	EpicMonsterKillsNearEnemyJungler          OptInt32                                            `json:"epicMonsterKillsNearEnemyJungler"`
	EpicMonsterKillsWithin30SecondsOfSpawn    OptInt32                                            `json:"epicMonsterKillsWithin30SecondsOfSpawn"`
	EpicMonsterSteals                         OptInt32                                            `json:"epicMonsterSteals"`
	EpicMonsterStolenWithoutSmite             OptInt32                                            `json:"epicMonsterStolenWithoutSmite"`
	FirstTurretKilled                         OptFloat64                                          `json:"firstTurretKilled"`
	FirstTurretKilledTime                     OptFloat32                                          `json:"firstTurretKilledTime"`
	FlawlessAces                              OptInt32                                            `json:"flawlessAces"`
	FullTeamTakedown                          OptInt32                                            `json:"fullTeamTakedown"`
	GameLength                                OptFloat32                                          `json:"gameLength"`
	GetTakedownsInAllLanesEarlyJungleAsLaner  OptInt32                                            `json:"getTakedownsInAllLanesEarlyJungleAsLaner"`
	GoldPerMinute                             OptFloat32                                          `json:"goldPerMinute"`
	HadOpenNexus                              OptInt32                                            `json:"hadOpenNexus"`
	ImmobilizeAndKillWithAlly                 OptInt32                                            `json:"immobilizeAndKillWithAlly"`
	InitialBuffCount                          OptInt32                                            `json:"initialBuffCount"`
	InitialCrabCount                          OptInt32                                            `json:"initialCrabCount"`
	JungleCsBefore10Minutes                   OptFloat32                                          `json:"jungleCsBefore10Minutes"`
	JunglerTakedownsNearDamagedEpicMonster    OptInt32                                            `json:"junglerTakedownsNearDamagedEpicMonster"`
	Kda                                       OptFloat32                                          `json:"kda"`
	KillAfterHiddenWithAlly                   OptInt32                                            `json:"killAfterHiddenWithAlly"`
	KilledChampTookFullTeamDamageSurvived     OptInt32                                            `json:"killedChampTookFullTeamDamageSurvived"`
	KillingSprees                             OptInt32                                            `json:"killingSprees"`
	KillParticipation                         OptFloat32                                          `json:"killParticipation"`
	KillsNearEnemyTurret                      OptInt32                                            `json:"killsNearEnemyTurret"`
	KillsOnOtherLanesEarlyJungleAsLaner       OptInt32                                            `json:"killsOnOtherLanesEarlyJungleAsLaner"`
	KillsOnRecentlyHealedByAramPack           OptInt32                                            `json:"killsOnRecentlyHealedByAramPack"`
	KillsUnderOwnTurret                       OptInt32                                            `json:"killsUnderOwnTurret"`
	KillsWithHelpFromEpicMonster              OptInt32                                            `json:"killsWithHelpFromEpicMonster"`
	KnockEnemyIntoTeamAndKill                 OptInt32                                            `json:"knockEnemyIntoTeamAndKill"`
	KTurretsDestroyedBeforePlatesFall         OptInt32                                            `json:"kTurretsDestroyedBeforePlatesFall"`
	LandSkillShotsEarlyGame                   OptInt32                                            `json:"landSkillShotsEarlyGame"`
	LaneMinionsFirst10Minutes                 OptInt32                                            `json:"laneMinionsFirst10Minutes"`
	LostAnInhibitor                           OptInt32                                            `json:"lostAnInhibitor"`
	MaxKillDeficit                            OptInt32                                            `json:"maxKillDeficit"`
	MejaisFullStackInTime                     OptInt32                                            `json:"mejaisFullStackInTime"`
	MoreEnemyJungleThanOpponent               OptFloat32                                          `json:"moreEnemyJungleThanOpponent"`
	// This is an offshoot of the OneStone challenge. The code checks if a spell with the same instance
	// ID does the final point of damage to at least 2 Champions. It doesn't matter if they're enemies,
	// but you cannot hurt your friends.
	MultiKillOneSpell                   OptInt32   `json:"multiKillOneSpell"`
	Multikills                          OptInt32   `json:"multikills"`
	MultikillsAfterAggressiveFlash      OptInt32   `json:"multikillsAfterAggressiveFlash"`
	MultiTurretRiftHeraldCount          OptInt32   `json:"multiTurretRiftHeraldCount"`
	OuterTurretExecutesBefore10Minutes  OptInt32   `json:"outerTurretExecutesBefore10Minutes"`
	OutnumberedKills                    OptInt32   `json:"outnumberedKills"`
	OutnumberedNexusKill                OptInt32   `json:"outnumberedNexusKill"`
	PerfectDragonSoulsTaken             OptInt32   `json:"perfectDragonSoulsTaken"`
	PerfectGame                         OptInt32   `json:"perfectGame"`
	PickKillWithAlly                    OptInt32   `json:"pickKillWithAlly"`
	PoroExplosions                      OptInt32   `json:"poroExplosions"`
	QuickCleanse                        OptInt32   `json:"quickCleanse"`
	QuickFirstTurret                    OptInt32   `json:"quickFirstTurret"`
	QuickSoloKills                      OptInt32   `json:"quickSoloKills"`
	RiftHeraldTakedowns                 OptInt32   `json:"riftHeraldTakedowns"`
	SaveAllyFromDeath                   OptInt32   `json:"saveAllyFromDeath"`
	ScuttleCrabKills                    OptInt32   `json:"scuttleCrabKills"`
	ShortestTimeToAceFromFirstTakedown  OptFloat32 `json:"shortestTimeToAceFromFirstTakedown"`
	SkillshotsDodged                    OptInt32   `json:"skillshotsDodged"`
	SkillshotsHit                       OptInt32   `json:"skillshotsHit"`
	SnowballsHit                        OptInt32   `json:"snowballsHit"`
	SoloBaronKills                      OptInt32   `json:"soloBaronKills"`
	SWARMDefeatAatrox                   OptInt32   `json:"SWARM_DefeatAatrox"`
	SWARMDefeatBriar                    OptInt32   `json:"SWARM_DefeatBriar"`
	SWARMDefeatMiniBosses               OptInt32   `json:"SWARM_DefeatMiniBosses"`
	SWARMEvolveWeapon                   OptInt32   `json:"SWARM_EvolveWeapon"`
	SWARMHave3Passives                  OptInt32   `json:"SWARM_Have3Passives"`
	SWARMKillEnemy                      OptInt32   `json:"SWARM_KillEnemy"`
	SWARMPickupGold                     OptFloat32 `json:"SWARM_PickupGold"`
	SWARMReachLevel50                   OptInt32   `json:"SWARM_ReachLevel50"`
	SWARMSurvive15Min                   OptInt32   `json:"SWARM_Survive15Min"`
	SWARMWinWith5EvolvedWeapons         OptInt32   `json:"SWARM_WinWith5EvolvedWeapons"`
	SoloKills                           OptInt32   `json:"soloKills"`
	StealthWardsPlaced                  OptInt32   `json:"stealthWardsPlaced"`
	SurvivedSingleDigitHpCount          OptInt32   `json:"survivedSingleDigitHpCount"`
	SurvivedThreeImmobilizesInFight     OptInt32   `json:"survivedThreeImmobilizesInFight"`
	TakedownOnFirstTurret               OptInt32   `json:"takedownOnFirstTurret"`
	Takedowns                           OptInt32   `json:"takedowns"`
	TakedownsAfterGainingLevelAdvantage OptInt32   `json:"takedownsAfterGainingLevelAdvantage"`
	TakedownsBeforeJungleMinionSpawn    OptInt32   `json:"takedownsBeforeJungleMinionSpawn"`
	TakedownsFirstXMinutes              OptInt32   `json:"takedownsFirstXMinutes"`
	TakedownsInAlcove                   OptInt32   `json:"takedownsInAlcove"`
	TakedownsInEnemyFountain            OptInt32   `json:"takedownsInEnemyFountain"`
	TeamBaronKills                      OptInt32   `json:"teamBaronKills"`
	TeamDamagePercentage                OptFloat32 `json:"teamDamagePercentage"`
	TeamElderDragonKills                OptInt32   `json:"teamElderDragonKills"`
	TeamRiftHeraldKills                 OptInt32   `json:"teamRiftHeraldKills"`
	TookLargeDamageSurvived             OptInt32   `json:"tookLargeDamageSurvived"`
	TurretPlatesTaken                   OptInt32   `json:"turretPlatesTaken"`
	// Any player who damages a tower that is destroyed within 30 seconds of a Rift Herald charge will
	// receive credit. A player who does not damage the tower will not receive credit.
	TurretsTakenWithRiftHerald   OptInt32   `json:"turretsTakenWithRiftHerald"`
	TurretTakedowns              OptInt32   `json:"turretTakedowns"`
	TwentyMinionsIn3SecondsCount OptInt32   `json:"twentyMinionsIn3SecondsCount"`
	TwoWardsOneSweeperCount      OptInt32   `json:"twoWardsOneSweeperCount"`
	UnseenRecalls                OptInt32   `json:"unseenRecalls"`
	VisionScorePerMinute         OptFloat32 `json:"visionScorePerMinute"`
	WardsGuarded                 OptInt32   `json:"wardsGuarded"`
	WardTakedowns                OptInt32   `json:"wardTakedowns"`
	WardTakedownsBefore20M       OptInt32   `json:"wardTakedownsBefore20M"`
	HealFromMapSources           OptFloat64 `json:"HealFromMapSources"`
}

// GetR12AssistStreakCount returns the value of R12AssistStreakCount.
func (s *MatchV5ChallengesDto) GetR12AssistStreakCount() OptInt32 {
	return s.R12AssistStreakCount
}

// GetBaronBuffGoldAdvantageOverThreshold returns the value of BaronBuffGoldAdvantageOverThreshold.
func (s *MatchV5ChallengesDto) GetBaronBuffGoldAdvantageOverThreshold() OptInt32 {
	return s.BaronBuffGoldAdvantageOverThreshold
}

// GetControlWardTimeCoverageInRiverOrEnemyHalf returns the value of ControlWardTimeCoverageInRiverOrEnemyHalf.
func (s *MatchV5ChallengesDto) GetControlWardTimeCoverageInRiverOrEnemyHalf() OptFloat32 {
	return s.ControlWardTimeCoverageInRiverOrEnemyHalf
}

// GetEarliestBaron returns the value of EarliestBaron.
func (s *MatchV5ChallengesDto) GetEarliestBaron() OptFloat64 {
	return s.EarliestBaron
}

// GetEarliestDragonTakedown returns the value of EarliestDragonTakedown.
func (s *MatchV5ChallengesDto) GetEarliestDragonTakedown() OptFloat64 {
	return s.EarliestDragonTakedown
}

// GetEarliestElderDragon returns the value of EarliestElderDragon.
func (s *MatchV5ChallengesDto) GetEarliestElderDragon() OptFloat64 {
	return s.EarliestElderDragon
}

// GetEarlyLaningPhaseGoldExpAdvantage returns the value of EarlyLaningPhaseGoldExpAdvantage.
func (s *MatchV5ChallengesDto) GetEarlyLaningPhaseGoldExpAdvantage() OptFloat64 {
	return s.EarlyLaningPhaseGoldExpAdvantage
}

// GetFasterSupportQuestCompletion returns the value of FasterSupportQuestCompletion.
func (s *MatchV5ChallengesDto) GetFasterSupportQuestCompletion() OptMatchV5ChallengesDtoFasterSupportQuestCompletion {
	return s.FasterSupportQuestCompletion
}

// GetFastestLegendary returns the value of FastestLegendary.
func (s *MatchV5ChallengesDto) GetFastestLegendary() OptFloat64 {
	return s.FastestLegendary
}

// GetHadAfkTeammate returns the value of HadAfkTeammate.
func (s *MatchV5ChallengesDto) GetHadAfkTeammate() OptMatchV5ChallengesDtoHadAfkTeammate {
	return s.HadAfkTeammate
}

// GetHighestChampionDamage returns the value of HighestChampionDamage.
func (s *MatchV5ChallengesDto) GetHighestChampionDamage() OptInt32 {
	return s.HighestChampionDamage
}

// GetHighestCrowdControlScore returns the value of HighestCrowdControlScore.
func (s *MatchV5ChallengesDto) GetHighestCrowdControlScore() OptMatchV5ChallengesDtoHighestCrowdControlScore {
	return s.HighestCrowdControlScore
}

// GetHighestWardKills returns the value of HighestWardKills.
func (s *MatchV5ChallengesDto) GetHighestWardKills() OptMatchV5ChallengesDtoHighestWardKills {
	return s.HighestWardKills
}

// GetJunglerKillsEarlyJungle returns the value of JunglerKillsEarlyJungle.
func (s *MatchV5ChallengesDto) GetJunglerKillsEarlyJungle() OptInt32 {
	return s.JunglerKillsEarlyJungle
}

// GetKillsOnLanersEarlyJungleAsJungler returns the value of KillsOnLanersEarlyJungleAsJungler.
func (s *MatchV5ChallengesDto) GetKillsOnLanersEarlyJungleAsJungler() OptInt32 {
	return s.KillsOnLanersEarlyJungleAsJungler
}

// GetLaningPhaseGoldExpAdvantage returns the value of LaningPhaseGoldExpAdvantage.
func (s *MatchV5ChallengesDto) GetLaningPhaseGoldExpAdvantage() OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage {
	return s.LaningPhaseGoldExpAdvantage
}

// GetLegendaryCount returns the value of LegendaryCount.
func (s *MatchV5ChallengesDto) GetLegendaryCount() OptInt32 {
	return s.LegendaryCount
}

// GetMaxCsAdvantageOnLaneOpponent returns the value of MaxCsAdvantageOnLaneOpponent.
func (s *MatchV5ChallengesDto) GetMaxCsAdvantageOnLaneOpponent() OptFloat32 {
	return s.MaxCsAdvantageOnLaneOpponent
}

// GetMaxLevelLeadLaneOpponent returns the value of MaxLevelLeadLaneOpponent.
func (s *MatchV5ChallengesDto) GetMaxLevelLeadLaneOpponent() OptInt32 {
	return s.MaxLevelLeadLaneOpponent
}

// GetMostWardsDestroyedOneSweeper returns the value of MostWardsDestroyedOneSweeper.
func (s *MatchV5ChallengesDto) GetMostWardsDestroyedOneSweeper() OptInt32 {
	return s.MostWardsDestroyedOneSweeper
}

// GetMythicItemUsed returns the value of MythicItemUsed.
func (s *MatchV5ChallengesDto) GetMythicItemUsed() OptInt32 {
	return s.MythicItemUsed
}

// GetPlayedChampSelectPosition returns the value of PlayedChampSelectPosition.
func (s *MatchV5ChallengesDto) GetPlayedChampSelectPosition() OptMatchV5ChallengesDtoPlayedChampSelectPosition {
	return s.PlayedChampSelectPosition
}

// GetSoloTurretsLategame returns the value of SoloTurretsLategame.
func (s *MatchV5ChallengesDto) GetSoloTurretsLategame() OptInt32 {
	return s.SoloTurretsLategame
}

// GetTakedownsFirst25Minutes returns the value of TakedownsFirst25Minutes.
func (s *MatchV5ChallengesDto) GetTakedownsFirst25Minutes() OptInt32 {
	return s.TakedownsFirst25Minutes
}

// GetTeleportTakedowns returns the value of TeleportTakedowns.
func (s *MatchV5ChallengesDto) GetTeleportTakedowns() OptInt32 {
	return s.TeleportTakedowns
}

// GetThirdInhibitorDestroyedTime returns the value of ThirdInhibitorDestroyedTime.
func (s *MatchV5ChallengesDto) GetThirdInhibitorDestroyedTime() OptFloat64 {
	return s.ThirdInhibitorDestroyedTime
}

// GetThreeWardsOneSweeperCount returns the value of ThreeWardsOneSweeperCount.
func (s *MatchV5ChallengesDto) GetThreeWardsOneSweeperCount() OptInt32 {
	return s.ThreeWardsOneSweeperCount
}

// GetVisionScoreAdvantageLaneOpponent returns the value of VisionScoreAdvantageLaneOpponent.
func (s *MatchV5ChallengesDto) GetVisionScoreAdvantageLaneOpponent() OptFloat32 {
	return s.VisionScoreAdvantageLaneOpponent
}

// GetInfernalScalePickup returns the value of InfernalScalePickup.
func (s *MatchV5ChallengesDto) GetInfernalScalePickup() OptInt32 {
	return s.InfernalScalePickup
}

// GetFistBumpParticipation returns the value of FistBumpParticipation.
func (s *MatchV5ChallengesDto) GetFistBumpParticipation() OptInt32 {
	return s.FistBumpParticipation
}

// GetVoidMonsterKill returns the value of VoidMonsterKill.
func (s *MatchV5ChallengesDto) GetVoidMonsterKill() OptInt32 {
	return s.VoidMonsterKill
}

// GetAbilityUses returns the value of AbilityUses.
func (s *MatchV5ChallengesDto) GetAbilityUses() OptInt32 {
	return s.AbilityUses
}

// GetAcesBefore15Minutes returns the value of AcesBefore15Minutes.
func (s *MatchV5ChallengesDto) GetAcesBefore15Minutes() OptInt32 {
	return s.AcesBefore15Minutes
}

// GetAlliedJungleMonsterKills returns the value of AlliedJungleMonsterKills.
func (s *MatchV5ChallengesDto) GetAlliedJungleMonsterKills() OptFloat32 {
	return s.AlliedJungleMonsterKills
}

// GetBaronTakedowns returns the value of BaronTakedowns.
func (s *MatchV5ChallengesDto) GetBaronTakedowns() OptInt32 {
	return s.BaronTakedowns
}

// GetBlastConeOppositeOpponentCount returns the value of BlastConeOppositeOpponentCount.
func (s *MatchV5ChallengesDto) GetBlastConeOppositeOpponentCount() OptInt32 {
	return s.BlastConeOppositeOpponentCount
}

// GetBountyGold returns the value of BountyGold.
func (s *MatchV5ChallengesDto) GetBountyGold() OptFloat64 {
	return s.BountyGold
}

// GetBuffsStolen returns the value of BuffsStolen.
func (s *MatchV5ChallengesDto) GetBuffsStolen() OptInt32 {
	return s.BuffsStolen
}

// GetCompleteSupportQuestInTime returns the value of CompleteSupportQuestInTime.
func (s *MatchV5ChallengesDto) GetCompleteSupportQuestInTime() OptInt32 {
	return s.CompleteSupportQuestInTime
}

// GetControlWardsPlaced returns the value of ControlWardsPlaced.
func (s *MatchV5ChallengesDto) GetControlWardsPlaced() OptInt32 {
	return s.ControlWardsPlaced
}

// GetDamagePerMinute returns the value of DamagePerMinute.
func (s *MatchV5ChallengesDto) GetDamagePerMinute() OptFloat32 {
	return s.DamagePerMinute
}

// GetDamageTakenOnTeamPercentage returns the value of DamageTakenOnTeamPercentage.
func (s *MatchV5ChallengesDto) GetDamageTakenOnTeamPercentage() OptFloat32 {
	return s.DamageTakenOnTeamPercentage
}

// GetDancedWithRiftHerald returns the value of DancedWithRiftHerald.
func (s *MatchV5ChallengesDto) GetDancedWithRiftHerald() OptInt32 {
	return s.DancedWithRiftHerald
}

// GetDeathsByEnemyChamps returns the value of DeathsByEnemyChamps.
func (s *MatchV5ChallengesDto) GetDeathsByEnemyChamps() OptInt32 {
	return s.DeathsByEnemyChamps
}

// GetDodgeSkillShotsSmallWindow returns the value of DodgeSkillShotsSmallWindow.
func (s *MatchV5ChallengesDto) GetDodgeSkillShotsSmallWindow() OptInt32 {
	return s.DodgeSkillShotsSmallWindow
}

// GetDoubleAces returns the value of DoubleAces.
func (s *MatchV5ChallengesDto) GetDoubleAces() OptInt32 {
	return s.DoubleAces
}

// GetDragonTakedowns returns the value of DragonTakedowns.
func (s *MatchV5ChallengesDto) GetDragonTakedowns() OptInt32 {
	return s.DragonTakedowns
}

// GetLegendaryItemUsed returns the value of LegendaryItemUsed.
func (s *MatchV5ChallengesDto) GetLegendaryItemUsed() []int32 {
	return s.LegendaryItemUsed
}

// GetEffectiveHealAndShielding returns the value of EffectiveHealAndShielding.
func (s *MatchV5ChallengesDto) GetEffectiveHealAndShielding() OptFloat32 {
	return s.EffectiveHealAndShielding
}

// GetElderDragonKillsWithOpposingSoul returns the value of ElderDragonKillsWithOpposingSoul.
func (s *MatchV5ChallengesDto) GetElderDragonKillsWithOpposingSoul() OptInt32 {
	return s.ElderDragonKillsWithOpposingSoul
}

// GetElderDragonMultikills returns the value of ElderDragonMultikills.
func (s *MatchV5ChallengesDto) GetElderDragonMultikills() OptInt32 {
	return s.ElderDragonMultikills
}

// GetEnemyChampionImmobilizations returns the value of EnemyChampionImmobilizations.
func (s *MatchV5ChallengesDto) GetEnemyChampionImmobilizations() OptInt32 {
	return s.EnemyChampionImmobilizations
}

// GetEnemyJungleMonsterKills returns the value of EnemyJungleMonsterKills.
func (s *MatchV5ChallengesDto) GetEnemyJungleMonsterKills() OptFloat32 {
	return s.EnemyJungleMonsterKills
}

// GetEpicMonsterKillsNearEnemyJungler returns the value of EpicMonsterKillsNearEnemyJungler.
func (s *MatchV5ChallengesDto) GetEpicMonsterKillsNearEnemyJungler() OptInt32 {
	return s.EpicMonsterKillsNearEnemyJungler
}

// GetEpicMonsterKillsWithin30SecondsOfSpawn returns the value of EpicMonsterKillsWithin30SecondsOfSpawn.
func (s *MatchV5ChallengesDto) GetEpicMonsterKillsWithin30SecondsOfSpawn() OptInt32 {
	return s.EpicMonsterKillsWithin30SecondsOfSpawn
}

// GetEpicMonsterSteals returns the value of EpicMonsterSteals.
func (s *MatchV5ChallengesDto) GetEpicMonsterSteals() OptInt32 {
	return s.EpicMonsterSteals
}

// GetEpicMonsterStolenWithoutSmite returns the value of EpicMonsterStolenWithoutSmite.
func (s *MatchV5ChallengesDto) GetEpicMonsterStolenWithoutSmite() OptInt32 {
	return s.EpicMonsterStolenWithoutSmite
}

// GetFirstTurretKilled returns the value of FirstTurretKilled.
func (s *MatchV5ChallengesDto) GetFirstTurretKilled() OptFloat64 {
	return s.FirstTurretKilled
}

// GetFirstTurretKilledTime returns the value of FirstTurretKilledTime.
func (s *MatchV5ChallengesDto) GetFirstTurretKilledTime() OptFloat32 {
	return s.FirstTurretKilledTime
}

// GetFlawlessAces returns the value of FlawlessAces.
func (s *MatchV5ChallengesDto) GetFlawlessAces() OptInt32 {
	return s.FlawlessAces
}

// GetFullTeamTakedown returns the value of FullTeamTakedown.
func (s *MatchV5ChallengesDto) GetFullTeamTakedown() OptInt32 {
	return s.FullTeamTakedown
}

// GetGameLength returns the value of GameLength.
func (s *MatchV5ChallengesDto) GetGameLength() OptFloat32 {
	return s.GameLength
}

// GetGetTakedownsInAllLanesEarlyJungleAsLaner returns the value of GetTakedownsInAllLanesEarlyJungleAsLaner.
func (s *MatchV5ChallengesDto) GetGetTakedownsInAllLanesEarlyJungleAsLaner() OptInt32 {
	return s.GetTakedownsInAllLanesEarlyJungleAsLaner
}

// GetGoldPerMinute returns the value of GoldPerMinute.
func (s *MatchV5ChallengesDto) GetGoldPerMinute() OptFloat32 {
	return s.GoldPerMinute
}

// GetHadOpenNexus returns the value of HadOpenNexus.
func (s *MatchV5ChallengesDto) GetHadOpenNexus() OptInt32 {
	return s.HadOpenNexus
}

// GetImmobilizeAndKillWithAlly returns the value of ImmobilizeAndKillWithAlly.
func (s *MatchV5ChallengesDto) GetImmobilizeAndKillWithAlly() OptInt32 {
	return s.ImmobilizeAndKillWithAlly
}

// GetInitialBuffCount returns the value of InitialBuffCount.
func (s *MatchV5ChallengesDto) GetInitialBuffCount() OptInt32 {
	return s.InitialBuffCount
}

// GetInitialCrabCount returns the value of InitialCrabCount.
func (s *MatchV5ChallengesDto) GetInitialCrabCount() OptInt32 {
	return s.InitialCrabCount
}

// GetJungleCsBefore10Minutes returns the value of JungleCsBefore10Minutes.
func (s *MatchV5ChallengesDto) GetJungleCsBefore10Minutes() OptFloat32 {
	return s.JungleCsBefore10Minutes
}

// GetJunglerTakedownsNearDamagedEpicMonster returns the value of JunglerTakedownsNearDamagedEpicMonster.
func (s *MatchV5ChallengesDto) GetJunglerTakedownsNearDamagedEpicMonster() OptInt32 {
	return s.JunglerTakedownsNearDamagedEpicMonster
}

// GetKda returns the value of Kda.
func (s *MatchV5ChallengesDto) GetKda() OptFloat32 {
	return s.Kda
}

// GetKillAfterHiddenWithAlly returns the value of KillAfterHiddenWithAlly.
func (s *MatchV5ChallengesDto) GetKillAfterHiddenWithAlly() OptInt32 {
	return s.KillAfterHiddenWithAlly
}

// GetKilledChampTookFullTeamDamageSurvived returns the value of KilledChampTookFullTeamDamageSurvived.
func (s *MatchV5ChallengesDto) GetKilledChampTookFullTeamDamageSurvived() OptInt32 {
	return s.KilledChampTookFullTeamDamageSurvived
}

// GetKillingSprees returns the value of KillingSprees.
func (s *MatchV5ChallengesDto) GetKillingSprees() OptInt32 {
	return s.KillingSprees
}

// GetKillParticipation returns the value of KillParticipation.
func (s *MatchV5ChallengesDto) GetKillParticipation() OptFloat32 {
	return s.KillParticipation
}

// GetKillsNearEnemyTurret returns the value of KillsNearEnemyTurret.
func (s *MatchV5ChallengesDto) GetKillsNearEnemyTurret() OptInt32 {
	return s.KillsNearEnemyTurret
}

// GetKillsOnOtherLanesEarlyJungleAsLaner returns the value of KillsOnOtherLanesEarlyJungleAsLaner.
func (s *MatchV5ChallengesDto) GetKillsOnOtherLanesEarlyJungleAsLaner() OptInt32 {
	return s.KillsOnOtherLanesEarlyJungleAsLaner
}

// GetKillsOnRecentlyHealedByAramPack returns the value of KillsOnRecentlyHealedByAramPack.
func (s *MatchV5ChallengesDto) GetKillsOnRecentlyHealedByAramPack() OptInt32 {
	return s.KillsOnRecentlyHealedByAramPack
}

// GetKillsUnderOwnTurret returns the value of KillsUnderOwnTurret.
func (s *MatchV5ChallengesDto) GetKillsUnderOwnTurret() OptInt32 {
	return s.KillsUnderOwnTurret
}

// GetKillsWithHelpFromEpicMonster returns the value of KillsWithHelpFromEpicMonster.
func (s *MatchV5ChallengesDto) GetKillsWithHelpFromEpicMonster() OptInt32 {
	return s.KillsWithHelpFromEpicMonster
}

// GetKnockEnemyIntoTeamAndKill returns the value of KnockEnemyIntoTeamAndKill.
func (s *MatchV5ChallengesDto) GetKnockEnemyIntoTeamAndKill() OptInt32 {
	return s.KnockEnemyIntoTeamAndKill
}

// GetKTurretsDestroyedBeforePlatesFall returns the value of KTurretsDestroyedBeforePlatesFall.
func (s *MatchV5ChallengesDto) GetKTurretsDestroyedBeforePlatesFall() OptInt32 {
	return s.KTurretsDestroyedBeforePlatesFall
}

// GetLandSkillShotsEarlyGame returns the value of LandSkillShotsEarlyGame.
func (s *MatchV5ChallengesDto) GetLandSkillShotsEarlyGame() OptInt32 {
	return s.LandSkillShotsEarlyGame
}

// GetLaneMinionsFirst10Minutes returns the value of LaneMinionsFirst10Minutes.
func (s *MatchV5ChallengesDto) GetLaneMinionsFirst10Minutes() OptInt32 {
	return s.LaneMinionsFirst10Minutes
}

// GetLostAnInhibitor returns the value of LostAnInhibitor.
func (s *MatchV5ChallengesDto) GetLostAnInhibitor() OptInt32 {
	return s.LostAnInhibitor
}

// GetMaxKillDeficit returns the value of MaxKillDeficit.
func (s *MatchV5ChallengesDto) GetMaxKillDeficit() OptInt32 {
	return s.MaxKillDeficit
}

// GetMejaisFullStackInTime returns the value of MejaisFullStackInTime.
func (s *MatchV5ChallengesDto) GetMejaisFullStackInTime() OptInt32 {
	return s.MejaisFullStackInTime
}

// GetMoreEnemyJungleThanOpponent returns the value of MoreEnemyJungleThanOpponent.
func (s *MatchV5ChallengesDto) GetMoreEnemyJungleThanOpponent() OptFloat32 {
	return s.MoreEnemyJungleThanOpponent
}

// GetMultiKillOneSpell returns the value of MultiKillOneSpell.
func (s *MatchV5ChallengesDto) GetMultiKillOneSpell() OptInt32 {
	return s.MultiKillOneSpell
}

// GetMultikills returns the value of Multikills.
func (s *MatchV5ChallengesDto) GetMultikills() OptInt32 {
	return s.Multikills
}

// GetMultikillsAfterAggressiveFlash returns the value of MultikillsAfterAggressiveFlash.
func (s *MatchV5ChallengesDto) GetMultikillsAfterAggressiveFlash() OptInt32 {
	return s.MultikillsAfterAggressiveFlash
}

// GetMultiTurretRiftHeraldCount returns the value of MultiTurretRiftHeraldCount.
func (s *MatchV5ChallengesDto) GetMultiTurretRiftHeraldCount() OptInt32 {
	return s.MultiTurretRiftHeraldCount
}

// GetOuterTurretExecutesBefore10Minutes returns the value of OuterTurretExecutesBefore10Minutes.
func (s *MatchV5ChallengesDto) GetOuterTurretExecutesBefore10Minutes() OptInt32 {
	return s.OuterTurretExecutesBefore10Minutes
}

// GetOutnumberedKills returns the value of OutnumberedKills.
func (s *MatchV5ChallengesDto) GetOutnumberedKills() OptInt32 {
	return s.OutnumberedKills
}

// GetOutnumberedNexusKill returns the value of OutnumberedNexusKill.
func (s *MatchV5ChallengesDto) GetOutnumberedNexusKill() OptInt32 {
	return s.OutnumberedNexusKill
}

// GetPerfectDragonSoulsTaken returns the value of PerfectDragonSoulsTaken.
func (s *MatchV5ChallengesDto) GetPerfectDragonSoulsTaken() OptInt32 {
	return s.PerfectDragonSoulsTaken
}

// GetPerfectGame returns the value of PerfectGame.
func (s *MatchV5ChallengesDto) GetPerfectGame() OptInt32 {
	return s.PerfectGame
}

// GetPickKillWithAlly returns the value of PickKillWithAlly.
func (s *MatchV5ChallengesDto) GetPickKillWithAlly() OptInt32 {
	return s.PickKillWithAlly
}

// GetPoroExplosions returns the value of PoroExplosions.
func (s *MatchV5ChallengesDto) GetPoroExplosions() OptInt32 {
	return s.PoroExplosions
}

// GetQuickCleanse returns the value of QuickCleanse.
func (s *MatchV5ChallengesDto) GetQuickCleanse() OptInt32 {
	return s.QuickCleanse
}

// GetQuickFirstTurret returns the value of QuickFirstTurret.
func (s *MatchV5ChallengesDto) GetQuickFirstTurret() OptInt32 {
	return s.QuickFirstTurret
}

// GetQuickSoloKills returns the value of QuickSoloKills.
func (s *MatchV5ChallengesDto) GetQuickSoloKills() OptInt32 {
	return s.QuickSoloKills
}

// GetRiftHeraldTakedowns returns the value of RiftHeraldTakedowns.
func (s *MatchV5ChallengesDto) GetRiftHeraldTakedowns() OptInt32 {
	return s.RiftHeraldTakedowns
}

// GetSaveAllyFromDeath returns the value of SaveAllyFromDeath.
func (s *MatchV5ChallengesDto) GetSaveAllyFromDeath() OptInt32 {
	return s.SaveAllyFromDeath
}

// GetScuttleCrabKills returns the value of ScuttleCrabKills.
func (s *MatchV5ChallengesDto) GetScuttleCrabKills() OptInt32 {
	return s.ScuttleCrabKills
}

// GetShortestTimeToAceFromFirstTakedown returns the value of ShortestTimeToAceFromFirstTakedown.
func (s *MatchV5ChallengesDto) GetShortestTimeToAceFromFirstTakedown() OptFloat32 {
	return s.ShortestTimeToAceFromFirstTakedown
}

// GetSkillshotsDodged returns the value of SkillshotsDodged.
func (s *MatchV5ChallengesDto) GetSkillshotsDodged() OptInt32 {
	return s.SkillshotsDodged
}

// GetSkillshotsHit returns the value of SkillshotsHit.
func (s *MatchV5ChallengesDto) GetSkillshotsHit() OptInt32 {
	return s.SkillshotsHit
}

// GetSnowballsHit returns the value of SnowballsHit.
func (s *MatchV5ChallengesDto) GetSnowballsHit() OptInt32 {
	return s.SnowballsHit
}

// GetSoloBaronKills returns the value of SoloBaronKills.
func (s *MatchV5ChallengesDto) GetSoloBaronKills() OptInt32 {
	return s.SoloBaronKills
}

// GetSWARMDefeatAatrox returns the value of SWARMDefeatAatrox.
func (s *MatchV5ChallengesDto) GetSWARMDefeatAatrox() OptInt32 {
	return s.SWARMDefeatAatrox
}

// GetSWARMDefeatBriar returns the value of SWARMDefeatBriar.
func (s *MatchV5ChallengesDto) GetSWARMDefeatBriar() OptInt32 {
	return s.SWARMDefeatBriar
}

// GetSWARMDefeatMiniBosses returns the value of SWARMDefeatMiniBosses.
func (s *MatchV5ChallengesDto) GetSWARMDefeatMiniBosses() OptInt32 {
	return s.SWARMDefeatMiniBosses
}

// GetSWARMEvolveWeapon returns the value of SWARMEvolveWeapon.
func (s *MatchV5ChallengesDto) GetSWARMEvolveWeapon() OptInt32 {
	return s.SWARMEvolveWeapon
}

// GetSWARMHave3Passives returns the value of SWARMHave3Passives.
func (s *MatchV5ChallengesDto) GetSWARMHave3Passives() OptInt32 {
	return s.SWARMHave3Passives
}

// GetSWARMKillEnemy returns the value of SWARMKillEnemy.
func (s *MatchV5ChallengesDto) GetSWARMKillEnemy() OptInt32 {
	return s.SWARMKillEnemy
}

// GetSWARMPickupGold returns the value of SWARMPickupGold.
func (s *MatchV5ChallengesDto) GetSWARMPickupGold() OptFloat32 {
	return s.SWARMPickupGold
}

// GetSWARMReachLevel50 returns the value of SWARMReachLevel50.
func (s *MatchV5ChallengesDto) GetSWARMReachLevel50() OptInt32 {
	return s.SWARMReachLevel50
}

// GetSWARMSurvive15Min returns the value of SWARMSurvive15Min.
func (s *MatchV5ChallengesDto) GetSWARMSurvive15Min() OptInt32 {
	return s.SWARMSurvive15Min
}

// GetSWARMWinWith5EvolvedWeapons returns the value of SWARMWinWith5EvolvedWeapons.
func (s *MatchV5ChallengesDto) GetSWARMWinWith5EvolvedWeapons() OptInt32 {
	return s.SWARMWinWith5EvolvedWeapons
}

// GetSoloKills returns the value of SoloKills.
func (s *MatchV5ChallengesDto) GetSoloKills() OptInt32 {
	return s.SoloKills
}

// GetStealthWardsPlaced returns the value of StealthWardsPlaced.
func (s *MatchV5ChallengesDto) GetStealthWardsPlaced() OptInt32 {
	return s.StealthWardsPlaced
}

// GetSurvivedSingleDigitHpCount returns the value of SurvivedSingleDigitHpCount.
func (s *MatchV5ChallengesDto) GetSurvivedSingleDigitHpCount() OptInt32 {
	return s.SurvivedSingleDigitHpCount
}

// GetSurvivedThreeImmobilizesInFight returns the value of SurvivedThreeImmobilizesInFight.
func (s *MatchV5ChallengesDto) GetSurvivedThreeImmobilizesInFight() OptInt32 {
	return s.SurvivedThreeImmobilizesInFight
}

// GetTakedownOnFirstTurret returns the value of TakedownOnFirstTurret.
func (s *MatchV5ChallengesDto) GetTakedownOnFirstTurret() OptInt32 {
	return s.TakedownOnFirstTurret
}

// GetTakedowns returns the value of Takedowns.
func (s *MatchV5ChallengesDto) GetTakedowns() OptInt32 {
	return s.Takedowns
}

// GetTakedownsAfterGainingLevelAdvantage returns the value of TakedownsAfterGainingLevelAdvantage.
func (s *MatchV5ChallengesDto) GetTakedownsAfterGainingLevelAdvantage() OptInt32 {
	return s.TakedownsAfterGainingLevelAdvantage
}

// GetTakedownsBeforeJungleMinionSpawn returns the value of TakedownsBeforeJungleMinionSpawn.
func (s *MatchV5ChallengesDto) GetTakedownsBeforeJungleMinionSpawn() OptInt32 {
	return s.TakedownsBeforeJungleMinionSpawn
}

// GetTakedownsFirstXMinutes returns the value of TakedownsFirstXMinutes.
func (s *MatchV5ChallengesDto) GetTakedownsFirstXMinutes() OptInt32 {
	return s.TakedownsFirstXMinutes
}

// GetTakedownsInAlcove returns the value of TakedownsInAlcove.
func (s *MatchV5ChallengesDto) GetTakedownsInAlcove() OptInt32 {
	return s.TakedownsInAlcove
}

// GetTakedownsInEnemyFountain returns the value of TakedownsInEnemyFountain.
func (s *MatchV5ChallengesDto) GetTakedownsInEnemyFountain() OptInt32 {
	return s.TakedownsInEnemyFountain
}

// GetTeamBaronKills returns the value of TeamBaronKills.
func (s *MatchV5ChallengesDto) GetTeamBaronKills() OptInt32 {
	return s.TeamBaronKills
}

// GetTeamDamagePercentage returns the value of TeamDamagePercentage.
func (s *MatchV5ChallengesDto) GetTeamDamagePercentage() OptFloat32 {
	return s.TeamDamagePercentage
}

// GetTeamElderDragonKills returns the value of TeamElderDragonKills.
func (s *MatchV5ChallengesDto) GetTeamElderDragonKills() OptInt32 {
	return s.TeamElderDragonKills
}

// GetTeamRiftHeraldKills returns the value of TeamRiftHeraldKills.
func (s *MatchV5ChallengesDto) GetTeamRiftHeraldKills() OptInt32 {
	return s.TeamRiftHeraldKills
}

// GetTookLargeDamageSurvived returns the value of TookLargeDamageSurvived.
func (s *MatchV5ChallengesDto) GetTookLargeDamageSurvived() OptInt32 {
	return s.TookLargeDamageSurvived
}

// GetTurretPlatesTaken returns the value of TurretPlatesTaken.
func (s *MatchV5ChallengesDto) GetTurretPlatesTaken() OptInt32 {
	return s.TurretPlatesTaken
}

// GetTurretsTakenWithRiftHerald returns the value of TurretsTakenWithRiftHerald.
func (s *MatchV5ChallengesDto) GetTurretsTakenWithRiftHerald() OptInt32 {
	return s.TurretsTakenWithRiftHerald
}

// GetTurretTakedowns returns the value of TurretTakedowns.
func (s *MatchV5ChallengesDto) GetTurretTakedowns() OptInt32 {
	return s.TurretTakedowns
}

// GetTwentyMinionsIn3SecondsCount returns the value of TwentyMinionsIn3SecondsCount.
func (s *MatchV5ChallengesDto) GetTwentyMinionsIn3SecondsCount() OptInt32 {
	return s.TwentyMinionsIn3SecondsCount
}

// GetTwoWardsOneSweeperCount returns the value of TwoWardsOneSweeperCount.
func (s *MatchV5ChallengesDto) GetTwoWardsOneSweeperCount() OptInt32 {
	return s.TwoWardsOneSweeperCount
}

// GetUnseenRecalls returns the value of UnseenRecalls.
func (s *MatchV5ChallengesDto) GetUnseenRecalls() OptInt32 {
	return s.UnseenRecalls
}

// GetVisionScorePerMinute returns the value of VisionScorePerMinute.
func (s *MatchV5ChallengesDto) GetVisionScorePerMinute() OptFloat32 {
	return s.VisionScorePerMinute
}

// GetWardsGuarded returns the value of WardsGuarded.
func (s *MatchV5ChallengesDto) GetWardsGuarded() OptInt32 {
	return s.WardsGuarded
}

// GetWardTakedowns returns the value of WardTakedowns.
func (s *MatchV5ChallengesDto) GetWardTakedowns() OptInt32 {
	return s.WardTakedowns
}

// GetWardTakedownsBefore20M returns the value of WardTakedownsBefore20M.
func (s *MatchV5ChallengesDto) GetWardTakedownsBefore20M() OptInt32 {
	return s.WardTakedownsBefore20M
}

// GetHealFromMapSources returns the value of HealFromMapSources.
func (s *MatchV5ChallengesDto) GetHealFromMapSources() OptFloat64 {
	return s.HealFromMapSources
}

// SetR12AssistStreakCount sets the value of R12AssistStreakCount.
func (s *MatchV5ChallengesDto) SetR12AssistStreakCount(val OptInt32) {
	s.R12AssistStreakCount = val
}

// SetBaronBuffGoldAdvantageOverThreshold sets the value of BaronBuffGoldAdvantageOverThreshold.
func (s *MatchV5ChallengesDto) SetBaronBuffGoldAdvantageOverThreshold(val OptInt32) {
	s.BaronBuffGoldAdvantageOverThreshold = val
}

// SetControlWardTimeCoverageInRiverOrEnemyHalf sets the value of ControlWardTimeCoverageInRiverOrEnemyHalf.
func (s *MatchV5ChallengesDto) SetControlWardTimeCoverageInRiverOrEnemyHalf(val OptFloat32) {
	s.ControlWardTimeCoverageInRiverOrEnemyHalf = val
}

// SetEarliestBaron sets the value of EarliestBaron.
func (s *MatchV5ChallengesDto) SetEarliestBaron(val OptFloat64) {
	s.EarliestBaron = val
}

// SetEarliestDragonTakedown sets the value of EarliestDragonTakedown.
func (s *MatchV5ChallengesDto) SetEarliestDragonTakedown(val OptFloat64) {
	s.EarliestDragonTakedown = val
}

// SetEarliestElderDragon sets the value of EarliestElderDragon.
func (s *MatchV5ChallengesDto) SetEarliestElderDragon(val OptFloat64) {
	s.EarliestElderDragon = val
}

// SetEarlyLaningPhaseGoldExpAdvantage sets the value of EarlyLaningPhaseGoldExpAdvantage.
func (s *MatchV5ChallengesDto) SetEarlyLaningPhaseGoldExpAdvantage(val OptFloat64) {
	s.EarlyLaningPhaseGoldExpAdvantage = val
}

// SetFasterSupportQuestCompletion sets the value of FasterSupportQuestCompletion.
func (s *MatchV5ChallengesDto) SetFasterSupportQuestCompletion(val OptMatchV5ChallengesDtoFasterSupportQuestCompletion) {
	s.FasterSupportQuestCompletion = val
}

// SetFastestLegendary sets the value of FastestLegendary.
func (s *MatchV5ChallengesDto) SetFastestLegendary(val OptFloat64) {
	s.FastestLegendary = val
}

// SetHadAfkTeammate sets the value of HadAfkTeammate.
func (s *MatchV5ChallengesDto) SetHadAfkTeammate(val OptMatchV5ChallengesDtoHadAfkTeammate) {
	s.HadAfkTeammate = val
}

// SetHighestChampionDamage sets the value of HighestChampionDamage.
func (s *MatchV5ChallengesDto) SetHighestChampionDamage(val OptInt32) {
	s.HighestChampionDamage = val
}

// SetHighestCrowdControlScore sets the value of HighestCrowdControlScore.
func (s *MatchV5ChallengesDto) SetHighestCrowdControlScore(val OptMatchV5ChallengesDtoHighestCrowdControlScore) {
	s.HighestCrowdControlScore = val
}

// SetHighestWardKills sets the value of HighestWardKills.
func (s *MatchV5ChallengesDto) SetHighestWardKills(val OptMatchV5ChallengesDtoHighestWardKills) {
	s.HighestWardKills = val
}

// SetJunglerKillsEarlyJungle sets the value of JunglerKillsEarlyJungle.
func (s *MatchV5ChallengesDto) SetJunglerKillsEarlyJungle(val OptInt32) {
	s.JunglerKillsEarlyJungle = val
}

// SetKillsOnLanersEarlyJungleAsJungler sets the value of KillsOnLanersEarlyJungleAsJungler.
func (s *MatchV5ChallengesDto) SetKillsOnLanersEarlyJungleAsJungler(val OptInt32) {
	s.KillsOnLanersEarlyJungleAsJungler = val
}

// SetLaningPhaseGoldExpAdvantage sets the value of LaningPhaseGoldExpAdvantage.
func (s *MatchV5ChallengesDto) SetLaningPhaseGoldExpAdvantage(val OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) {
	s.LaningPhaseGoldExpAdvantage = val
}

// SetLegendaryCount sets the value of LegendaryCount.
func (s *MatchV5ChallengesDto) SetLegendaryCount(val OptInt32) {
	s.LegendaryCount = val
}

// SetMaxCsAdvantageOnLaneOpponent sets the value of MaxCsAdvantageOnLaneOpponent.
func (s *MatchV5ChallengesDto) SetMaxCsAdvantageOnLaneOpponent(val OptFloat32) {
	s.MaxCsAdvantageOnLaneOpponent = val
}

// SetMaxLevelLeadLaneOpponent sets the value of MaxLevelLeadLaneOpponent.
func (s *MatchV5ChallengesDto) SetMaxLevelLeadLaneOpponent(val OptInt32) {
	s.MaxLevelLeadLaneOpponent = val
}

// SetMostWardsDestroyedOneSweeper sets the value of MostWardsDestroyedOneSweeper.
func (s *MatchV5ChallengesDto) SetMostWardsDestroyedOneSweeper(val OptInt32) {
	s.MostWardsDestroyedOneSweeper = val
}

// SetMythicItemUsed sets the value of MythicItemUsed.
func (s *MatchV5ChallengesDto) SetMythicItemUsed(val OptInt32) {
	s.MythicItemUsed = val
}

// SetPlayedChampSelectPosition sets the value of PlayedChampSelectPosition.
func (s *MatchV5ChallengesDto) SetPlayedChampSelectPosition(val OptMatchV5ChallengesDtoPlayedChampSelectPosition) {
	s.PlayedChampSelectPosition = val
}

// SetSoloTurretsLategame sets the value of SoloTurretsLategame.
func (s *MatchV5ChallengesDto) SetSoloTurretsLategame(val OptInt32) {
	s.SoloTurretsLategame = val
}

// SetTakedownsFirst25Minutes sets the value of TakedownsFirst25Minutes.
func (s *MatchV5ChallengesDto) SetTakedownsFirst25Minutes(val OptInt32) {
	s.TakedownsFirst25Minutes = val
}

// SetTeleportTakedowns sets the value of TeleportTakedowns.
func (s *MatchV5ChallengesDto) SetTeleportTakedowns(val OptInt32) {
	s.TeleportTakedowns = val
}

// SetThirdInhibitorDestroyedTime sets the value of ThirdInhibitorDestroyedTime.
func (s *MatchV5ChallengesDto) SetThirdInhibitorDestroyedTime(val OptFloat64) {
	s.ThirdInhibitorDestroyedTime = val
}

// SetThreeWardsOneSweeperCount sets the value of ThreeWardsOneSweeperCount.
func (s *MatchV5ChallengesDto) SetThreeWardsOneSweeperCount(val OptInt32) {
	s.ThreeWardsOneSweeperCount = val
}

// SetVisionScoreAdvantageLaneOpponent sets the value of VisionScoreAdvantageLaneOpponent.
func (s *MatchV5ChallengesDto) SetVisionScoreAdvantageLaneOpponent(val OptFloat32) {
	s.VisionScoreAdvantageLaneOpponent = val
}

// SetInfernalScalePickup sets the value of InfernalScalePickup.
func (s *MatchV5ChallengesDto) SetInfernalScalePickup(val OptInt32) {
	s.InfernalScalePickup = val
}

// SetFistBumpParticipation sets the value of FistBumpParticipation.
func (s *MatchV5ChallengesDto) SetFistBumpParticipation(val OptInt32) {
	s.FistBumpParticipation = val
}

// SetVoidMonsterKill sets the value of VoidMonsterKill.
func (s *MatchV5ChallengesDto) SetVoidMonsterKill(val OptInt32) {
	s.VoidMonsterKill = val
}

// SetAbilityUses sets the value of AbilityUses.
func (s *MatchV5ChallengesDto) SetAbilityUses(val OptInt32) {
	s.AbilityUses = val
}

// SetAcesBefore15Minutes sets the value of AcesBefore15Minutes.
func (s *MatchV5ChallengesDto) SetAcesBefore15Minutes(val OptInt32) {
	s.AcesBefore15Minutes = val
}

// SetAlliedJungleMonsterKills sets the value of AlliedJungleMonsterKills.
func (s *MatchV5ChallengesDto) SetAlliedJungleMonsterKills(val OptFloat32) {
	s.AlliedJungleMonsterKills = val
}

// SetBaronTakedowns sets the value of BaronTakedowns.
func (s *MatchV5ChallengesDto) SetBaronTakedowns(val OptInt32) {
	s.BaronTakedowns = val
}

// SetBlastConeOppositeOpponentCount sets the value of BlastConeOppositeOpponentCount.
func (s *MatchV5ChallengesDto) SetBlastConeOppositeOpponentCount(val OptInt32) {
	s.BlastConeOppositeOpponentCount = val
}

// SetBountyGold sets the value of BountyGold.
func (s *MatchV5ChallengesDto) SetBountyGold(val OptFloat64) {
	s.BountyGold = val
}

// SetBuffsStolen sets the value of BuffsStolen.
func (s *MatchV5ChallengesDto) SetBuffsStolen(val OptInt32) {
	s.BuffsStolen = val
}

// SetCompleteSupportQuestInTime sets the value of CompleteSupportQuestInTime.
func (s *MatchV5ChallengesDto) SetCompleteSupportQuestInTime(val OptInt32) {
	s.CompleteSupportQuestInTime = val
}

// SetControlWardsPlaced sets the value of ControlWardsPlaced.
func (s *MatchV5ChallengesDto) SetControlWardsPlaced(val OptInt32) {
	s.ControlWardsPlaced = val
}

// SetDamagePerMinute sets the value of DamagePerMinute.
func (s *MatchV5ChallengesDto) SetDamagePerMinute(val OptFloat32) {
	s.DamagePerMinute = val
}

// SetDamageTakenOnTeamPercentage sets the value of DamageTakenOnTeamPercentage.
func (s *MatchV5ChallengesDto) SetDamageTakenOnTeamPercentage(val OptFloat32) {
	s.DamageTakenOnTeamPercentage = val
}

// SetDancedWithRiftHerald sets the value of DancedWithRiftHerald.
func (s *MatchV5ChallengesDto) SetDancedWithRiftHerald(val OptInt32) {
	s.DancedWithRiftHerald = val
}

// SetDeathsByEnemyChamps sets the value of DeathsByEnemyChamps.
func (s *MatchV5ChallengesDto) SetDeathsByEnemyChamps(val OptInt32) {
	s.DeathsByEnemyChamps = val
}

// SetDodgeSkillShotsSmallWindow sets the value of DodgeSkillShotsSmallWindow.
func (s *MatchV5ChallengesDto) SetDodgeSkillShotsSmallWindow(val OptInt32) {
	s.DodgeSkillShotsSmallWindow = val
}

// SetDoubleAces sets the value of DoubleAces.
func (s *MatchV5ChallengesDto) SetDoubleAces(val OptInt32) {
	s.DoubleAces = val
}

// SetDragonTakedowns sets the value of DragonTakedowns.
func (s *MatchV5ChallengesDto) SetDragonTakedowns(val OptInt32) {
	s.DragonTakedowns = val
}

// SetLegendaryItemUsed sets the value of LegendaryItemUsed.
func (s *MatchV5ChallengesDto) SetLegendaryItemUsed(val []int32) {
	s.LegendaryItemUsed = val
}

// SetEffectiveHealAndShielding sets the value of EffectiveHealAndShielding.
func (s *MatchV5ChallengesDto) SetEffectiveHealAndShielding(val OptFloat32) {
	s.EffectiveHealAndShielding = val
}

// SetElderDragonKillsWithOpposingSoul sets the value of ElderDragonKillsWithOpposingSoul.
func (s *MatchV5ChallengesDto) SetElderDragonKillsWithOpposingSoul(val OptInt32) {
	s.ElderDragonKillsWithOpposingSoul = val
}

// SetElderDragonMultikills sets the value of ElderDragonMultikills.
func (s *MatchV5ChallengesDto) SetElderDragonMultikills(val OptInt32) {
	s.ElderDragonMultikills = val
}

// SetEnemyChampionImmobilizations sets the value of EnemyChampionImmobilizations.
func (s *MatchV5ChallengesDto) SetEnemyChampionImmobilizations(val OptInt32) {
	s.EnemyChampionImmobilizations = val
}

// SetEnemyJungleMonsterKills sets the value of EnemyJungleMonsterKills.
func (s *MatchV5ChallengesDto) SetEnemyJungleMonsterKills(val OptFloat32) {
	s.EnemyJungleMonsterKills = val
}

// SetEpicMonsterKillsNearEnemyJungler sets the value of EpicMonsterKillsNearEnemyJungler.
func (s *MatchV5ChallengesDto) SetEpicMonsterKillsNearEnemyJungler(val OptInt32) {
	s.EpicMonsterKillsNearEnemyJungler = val
}

// SetEpicMonsterKillsWithin30SecondsOfSpawn sets the value of EpicMonsterKillsWithin30SecondsOfSpawn.
func (s *MatchV5ChallengesDto) SetEpicMonsterKillsWithin30SecondsOfSpawn(val OptInt32) {
	s.EpicMonsterKillsWithin30SecondsOfSpawn = val
}

// SetEpicMonsterSteals sets the value of EpicMonsterSteals.
func (s *MatchV5ChallengesDto) SetEpicMonsterSteals(val OptInt32) {
	s.EpicMonsterSteals = val
}

// SetEpicMonsterStolenWithoutSmite sets the value of EpicMonsterStolenWithoutSmite.
func (s *MatchV5ChallengesDto) SetEpicMonsterStolenWithoutSmite(val OptInt32) {
	s.EpicMonsterStolenWithoutSmite = val
}

// SetFirstTurretKilled sets the value of FirstTurretKilled.
func (s *MatchV5ChallengesDto) SetFirstTurretKilled(val OptFloat64) {
	s.FirstTurretKilled = val
}

// SetFirstTurretKilledTime sets the value of FirstTurretKilledTime.
func (s *MatchV5ChallengesDto) SetFirstTurretKilledTime(val OptFloat32) {
	s.FirstTurretKilledTime = val
}

// SetFlawlessAces sets the value of FlawlessAces.
func (s *MatchV5ChallengesDto) SetFlawlessAces(val OptInt32) {
	s.FlawlessAces = val
}

// SetFullTeamTakedown sets the value of FullTeamTakedown.
func (s *MatchV5ChallengesDto) SetFullTeamTakedown(val OptInt32) {
	s.FullTeamTakedown = val
}

// SetGameLength sets the value of GameLength.
func (s *MatchV5ChallengesDto) SetGameLength(val OptFloat32) {
	s.GameLength = val
}

// SetGetTakedownsInAllLanesEarlyJungleAsLaner sets the value of GetTakedownsInAllLanesEarlyJungleAsLaner.
func (s *MatchV5ChallengesDto) SetGetTakedownsInAllLanesEarlyJungleAsLaner(val OptInt32) {
	s.GetTakedownsInAllLanesEarlyJungleAsLaner = val
}

// SetGoldPerMinute sets the value of GoldPerMinute.
func (s *MatchV5ChallengesDto) SetGoldPerMinute(val OptFloat32) {
	s.GoldPerMinute = val
}

// SetHadOpenNexus sets the value of HadOpenNexus.
func (s *MatchV5ChallengesDto) SetHadOpenNexus(val OptInt32) {
	s.HadOpenNexus = val
}

// SetImmobilizeAndKillWithAlly sets the value of ImmobilizeAndKillWithAlly.
func (s *MatchV5ChallengesDto) SetImmobilizeAndKillWithAlly(val OptInt32) {
	s.ImmobilizeAndKillWithAlly = val
}

// SetInitialBuffCount sets the value of InitialBuffCount.
func (s *MatchV5ChallengesDto) SetInitialBuffCount(val OptInt32) {
	s.InitialBuffCount = val
}

// SetInitialCrabCount sets the value of InitialCrabCount.
func (s *MatchV5ChallengesDto) SetInitialCrabCount(val OptInt32) {
	s.InitialCrabCount = val
}

// SetJungleCsBefore10Minutes sets the value of JungleCsBefore10Minutes.
func (s *MatchV5ChallengesDto) SetJungleCsBefore10Minutes(val OptFloat32) {
	s.JungleCsBefore10Minutes = val
}

// SetJunglerTakedownsNearDamagedEpicMonster sets the value of JunglerTakedownsNearDamagedEpicMonster.
func (s *MatchV5ChallengesDto) SetJunglerTakedownsNearDamagedEpicMonster(val OptInt32) {
	s.JunglerTakedownsNearDamagedEpicMonster = val
}

// SetKda sets the value of Kda.
func (s *MatchV5ChallengesDto) SetKda(val OptFloat32) {
	s.Kda = val
}

// SetKillAfterHiddenWithAlly sets the value of KillAfterHiddenWithAlly.
func (s *MatchV5ChallengesDto) SetKillAfterHiddenWithAlly(val OptInt32) {
	s.KillAfterHiddenWithAlly = val
}

// SetKilledChampTookFullTeamDamageSurvived sets the value of KilledChampTookFullTeamDamageSurvived.
func (s *MatchV5ChallengesDto) SetKilledChampTookFullTeamDamageSurvived(val OptInt32) {
	s.KilledChampTookFullTeamDamageSurvived = val
}

// SetKillingSprees sets the value of KillingSprees.
func (s *MatchV5ChallengesDto) SetKillingSprees(val OptInt32) {
	s.KillingSprees = val
}

// SetKillParticipation sets the value of KillParticipation.
func (s *MatchV5ChallengesDto) SetKillParticipation(val OptFloat32) {
	s.KillParticipation = val
}

// SetKillsNearEnemyTurret sets the value of KillsNearEnemyTurret.
func (s *MatchV5ChallengesDto) SetKillsNearEnemyTurret(val OptInt32) {
	s.KillsNearEnemyTurret = val
}

// SetKillsOnOtherLanesEarlyJungleAsLaner sets the value of KillsOnOtherLanesEarlyJungleAsLaner.
func (s *MatchV5ChallengesDto) SetKillsOnOtherLanesEarlyJungleAsLaner(val OptInt32) {
	s.KillsOnOtherLanesEarlyJungleAsLaner = val
}

// SetKillsOnRecentlyHealedByAramPack sets the value of KillsOnRecentlyHealedByAramPack.
func (s *MatchV5ChallengesDto) SetKillsOnRecentlyHealedByAramPack(val OptInt32) {
	s.KillsOnRecentlyHealedByAramPack = val
}

// SetKillsUnderOwnTurret sets the value of KillsUnderOwnTurret.
func (s *MatchV5ChallengesDto) SetKillsUnderOwnTurret(val OptInt32) {
	s.KillsUnderOwnTurret = val
}

// SetKillsWithHelpFromEpicMonster sets the value of KillsWithHelpFromEpicMonster.
func (s *MatchV5ChallengesDto) SetKillsWithHelpFromEpicMonster(val OptInt32) {
	s.KillsWithHelpFromEpicMonster = val
}

// SetKnockEnemyIntoTeamAndKill sets the value of KnockEnemyIntoTeamAndKill.
func (s *MatchV5ChallengesDto) SetKnockEnemyIntoTeamAndKill(val OptInt32) {
	s.KnockEnemyIntoTeamAndKill = val
}

// SetKTurretsDestroyedBeforePlatesFall sets the value of KTurretsDestroyedBeforePlatesFall.
func (s *MatchV5ChallengesDto) SetKTurretsDestroyedBeforePlatesFall(val OptInt32) {
	s.KTurretsDestroyedBeforePlatesFall = val
}

// SetLandSkillShotsEarlyGame sets the value of LandSkillShotsEarlyGame.
func (s *MatchV5ChallengesDto) SetLandSkillShotsEarlyGame(val OptInt32) {
	s.LandSkillShotsEarlyGame = val
}

// SetLaneMinionsFirst10Minutes sets the value of LaneMinionsFirst10Minutes.
func (s *MatchV5ChallengesDto) SetLaneMinionsFirst10Minutes(val OptInt32) {
	s.LaneMinionsFirst10Minutes = val
}

// SetLostAnInhibitor sets the value of LostAnInhibitor.
func (s *MatchV5ChallengesDto) SetLostAnInhibitor(val OptInt32) {
	s.LostAnInhibitor = val
}

// SetMaxKillDeficit sets the value of MaxKillDeficit.
func (s *MatchV5ChallengesDto) SetMaxKillDeficit(val OptInt32) {
	s.MaxKillDeficit = val
}

// SetMejaisFullStackInTime sets the value of MejaisFullStackInTime.
func (s *MatchV5ChallengesDto) SetMejaisFullStackInTime(val OptInt32) {
	s.MejaisFullStackInTime = val
}

// SetMoreEnemyJungleThanOpponent sets the value of MoreEnemyJungleThanOpponent.
func (s *MatchV5ChallengesDto) SetMoreEnemyJungleThanOpponent(val OptFloat32) {
	s.MoreEnemyJungleThanOpponent = val
}

// SetMultiKillOneSpell sets the value of MultiKillOneSpell.
func (s *MatchV5ChallengesDto) SetMultiKillOneSpell(val OptInt32) {
	s.MultiKillOneSpell = val
}

// SetMultikills sets the value of Multikills.
func (s *MatchV5ChallengesDto) SetMultikills(val OptInt32) {
	s.Multikills = val
}

// SetMultikillsAfterAggressiveFlash sets the value of MultikillsAfterAggressiveFlash.
func (s *MatchV5ChallengesDto) SetMultikillsAfterAggressiveFlash(val OptInt32) {
	s.MultikillsAfterAggressiveFlash = val
}

// SetMultiTurretRiftHeraldCount sets the value of MultiTurretRiftHeraldCount.
func (s *MatchV5ChallengesDto) SetMultiTurretRiftHeraldCount(val OptInt32) {
	s.MultiTurretRiftHeraldCount = val
}

// SetOuterTurretExecutesBefore10Minutes sets the value of OuterTurretExecutesBefore10Minutes.
func (s *MatchV5ChallengesDto) SetOuterTurretExecutesBefore10Minutes(val OptInt32) {
	s.OuterTurretExecutesBefore10Minutes = val
}

// SetOutnumberedKills sets the value of OutnumberedKills.
func (s *MatchV5ChallengesDto) SetOutnumberedKills(val OptInt32) {
	s.OutnumberedKills = val
}

// SetOutnumberedNexusKill sets the value of OutnumberedNexusKill.
func (s *MatchV5ChallengesDto) SetOutnumberedNexusKill(val OptInt32) {
	s.OutnumberedNexusKill = val
}

// SetPerfectDragonSoulsTaken sets the value of PerfectDragonSoulsTaken.
func (s *MatchV5ChallengesDto) SetPerfectDragonSoulsTaken(val OptInt32) {
	s.PerfectDragonSoulsTaken = val
}

// SetPerfectGame sets the value of PerfectGame.
func (s *MatchV5ChallengesDto) SetPerfectGame(val OptInt32) {
	s.PerfectGame = val
}

// SetPickKillWithAlly sets the value of PickKillWithAlly.
func (s *MatchV5ChallengesDto) SetPickKillWithAlly(val OptInt32) {
	s.PickKillWithAlly = val
}

// SetPoroExplosions sets the value of PoroExplosions.
func (s *MatchV5ChallengesDto) SetPoroExplosions(val OptInt32) {
	s.PoroExplosions = val
}

// SetQuickCleanse sets the value of QuickCleanse.
func (s *MatchV5ChallengesDto) SetQuickCleanse(val OptInt32) {
	s.QuickCleanse = val
}

// SetQuickFirstTurret sets the value of QuickFirstTurret.
func (s *MatchV5ChallengesDto) SetQuickFirstTurret(val OptInt32) {
	s.QuickFirstTurret = val
}

// SetQuickSoloKills sets the value of QuickSoloKills.
func (s *MatchV5ChallengesDto) SetQuickSoloKills(val OptInt32) {
	s.QuickSoloKills = val
}

// SetRiftHeraldTakedowns sets the value of RiftHeraldTakedowns.
func (s *MatchV5ChallengesDto) SetRiftHeraldTakedowns(val OptInt32) {
	s.RiftHeraldTakedowns = val
}

// SetSaveAllyFromDeath sets the value of SaveAllyFromDeath.
func (s *MatchV5ChallengesDto) SetSaveAllyFromDeath(val OptInt32) {
	s.SaveAllyFromDeath = val
}

// SetScuttleCrabKills sets the value of ScuttleCrabKills.
func (s *MatchV5ChallengesDto) SetScuttleCrabKills(val OptInt32) {
	s.ScuttleCrabKills = val
}

// SetShortestTimeToAceFromFirstTakedown sets the value of ShortestTimeToAceFromFirstTakedown.
func (s *MatchV5ChallengesDto) SetShortestTimeToAceFromFirstTakedown(val OptFloat32) {
	s.ShortestTimeToAceFromFirstTakedown = val
}

// SetSkillshotsDodged sets the value of SkillshotsDodged.
func (s *MatchV5ChallengesDto) SetSkillshotsDodged(val OptInt32) {
	s.SkillshotsDodged = val
}

// SetSkillshotsHit sets the value of SkillshotsHit.
func (s *MatchV5ChallengesDto) SetSkillshotsHit(val OptInt32) {
	s.SkillshotsHit = val
}

// SetSnowballsHit sets the value of SnowballsHit.
func (s *MatchV5ChallengesDto) SetSnowballsHit(val OptInt32) {
	s.SnowballsHit = val
}

// SetSoloBaronKills sets the value of SoloBaronKills.
func (s *MatchV5ChallengesDto) SetSoloBaronKills(val OptInt32) {
	s.SoloBaronKills = val
}

// SetSWARMDefeatAatrox sets the value of SWARMDefeatAatrox.
func (s *MatchV5ChallengesDto) SetSWARMDefeatAatrox(val OptInt32) {
	s.SWARMDefeatAatrox = val
}

// SetSWARMDefeatBriar sets the value of SWARMDefeatBriar.
func (s *MatchV5ChallengesDto) SetSWARMDefeatBriar(val OptInt32) {
	s.SWARMDefeatBriar = val
}

// SetSWARMDefeatMiniBosses sets the value of SWARMDefeatMiniBosses.
func (s *MatchV5ChallengesDto) SetSWARMDefeatMiniBosses(val OptInt32) {
	s.SWARMDefeatMiniBosses = val
}

// SetSWARMEvolveWeapon sets the value of SWARMEvolveWeapon.
func (s *MatchV5ChallengesDto) SetSWARMEvolveWeapon(val OptInt32) {
	s.SWARMEvolveWeapon = val
}

// SetSWARMHave3Passives sets the value of SWARMHave3Passives.
func (s *MatchV5ChallengesDto) SetSWARMHave3Passives(val OptInt32) {
	s.SWARMHave3Passives = val
}

// SetSWARMKillEnemy sets the value of SWARMKillEnemy.
func (s *MatchV5ChallengesDto) SetSWARMKillEnemy(val OptInt32) {
	s.SWARMKillEnemy = val
}

// SetSWARMPickupGold sets the value of SWARMPickupGold.
func (s *MatchV5ChallengesDto) SetSWARMPickupGold(val OptFloat32) {
	s.SWARMPickupGold = val
}

// SetSWARMReachLevel50 sets the value of SWARMReachLevel50.
func (s *MatchV5ChallengesDto) SetSWARMReachLevel50(val OptInt32) {
	s.SWARMReachLevel50 = val
}

// SetSWARMSurvive15Min sets the value of SWARMSurvive15Min.
func (s *MatchV5ChallengesDto) SetSWARMSurvive15Min(val OptInt32) {
	s.SWARMSurvive15Min = val
}

// SetSWARMWinWith5EvolvedWeapons sets the value of SWARMWinWith5EvolvedWeapons.
func (s *MatchV5ChallengesDto) SetSWARMWinWith5EvolvedWeapons(val OptInt32) {
	s.SWARMWinWith5EvolvedWeapons = val
}

// SetSoloKills sets the value of SoloKills.
func (s *MatchV5ChallengesDto) SetSoloKills(val OptInt32) {
	s.SoloKills = val
}

// SetStealthWardsPlaced sets the value of StealthWardsPlaced.
func (s *MatchV5ChallengesDto) SetStealthWardsPlaced(val OptInt32) {
	s.StealthWardsPlaced = val
}

// SetSurvivedSingleDigitHpCount sets the value of SurvivedSingleDigitHpCount.
func (s *MatchV5ChallengesDto) SetSurvivedSingleDigitHpCount(val OptInt32) {
	s.SurvivedSingleDigitHpCount = val
}

// SetSurvivedThreeImmobilizesInFight sets the value of SurvivedThreeImmobilizesInFight.
func (s *MatchV5ChallengesDto) SetSurvivedThreeImmobilizesInFight(val OptInt32) {
	s.SurvivedThreeImmobilizesInFight = val
}

// SetTakedownOnFirstTurret sets the value of TakedownOnFirstTurret.
func (s *MatchV5ChallengesDto) SetTakedownOnFirstTurret(val OptInt32) {
	s.TakedownOnFirstTurret = val
}

// SetTakedowns sets the value of Takedowns.
func (s *MatchV5ChallengesDto) SetTakedowns(val OptInt32) {
	s.Takedowns = val
}

// SetTakedownsAfterGainingLevelAdvantage sets the value of TakedownsAfterGainingLevelAdvantage.
func (s *MatchV5ChallengesDto) SetTakedownsAfterGainingLevelAdvantage(val OptInt32) {
	s.TakedownsAfterGainingLevelAdvantage = val
}

// SetTakedownsBeforeJungleMinionSpawn sets the value of TakedownsBeforeJungleMinionSpawn.
func (s *MatchV5ChallengesDto) SetTakedownsBeforeJungleMinionSpawn(val OptInt32) {
	s.TakedownsBeforeJungleMinionSpawn = val
}

// SetTakedownsFirstXMinutes sets the value of TakedownsFirstXMinutes.
func (s *MatchV5ChallengesDto) SetTakedownsFirstXMinutes(val OptInt32) {
	s.TakedownsFirstXMinutes = val
}

// SetTakedownsInAlcove sets the value of TakedownsInAlcove.
func (s *MatchV5ChallengesDto) SetTakedownsInAlcove(val OptInt32) {
	s.TakedownsInAlcove = val
}

// SetTakedownsInEnemyFountain sets the value of TakedownsInEnemyFountain.
func (s *MatchV5ChallengesDto) SetTakedownsInEnemyFountain(val OptInt32) {
	s.TakedownsInEnemyFountain = val
}

// SetTeamBaronKills sets the value of TeamBaronKills.
func (s *MatchV5ChallengesDto) SetTeamBaronKills(val OptInt32) {
	s.TeamBaronKills = val
}

// SetTeamDamagePercentage sets the value of TeamDamagePercentage.
func (s *MatchV5ChallengesDto) SetTeamDamagePercentage(val OptFloat32) {
	s.TeamDamagePercentage = val
}

// SetTeamElderDragonKills sets the value of TeamElderDragonKills.
func (s *MatchV5ChallengesDto) SetTeamElderDragonKills(val OptInt32) {
	s.TeamElderDragonKills = val
}

// SetTeamRiftHeraldKills sets the value of TeamRiftHeraldKills.
func (s *MatchV5ChallengesDto) SetTeamRiftHeraldKills(val OptInt32) {
	s.TeamRiftHeraldKills = val
}

// SetTookLargeDamageSurvived sets the value of TookLargeDamageSurvived.
func (s *MatchV5ChallengesDto) SetTookLargeDamageSurvived(val OptInt32) {
	s.TookLargeDamageSurvived = val
}

// SetTurretPlatesTaken sets the value of TurretPlatesTaken.
func (s *MatchV5ChallengesDto) SetTurretPlatesTaken(val OptInt32) {
	s.TurretPlatesTaken = val
}

// SetTurretsTakenWithRiftHerald sets the value of TurretsTakenWithRiftHerald.
func (s *MatchV5ChallengesDto) SetTurretsTakenWithRiftHerald(val OptInt32) {
	s.TurretsTakenWithRiftHerald = val
}

// SetTurretTakedowns sets the value of TurretTakedowns.
func (s *MatchV5ChallengesDto) SetTurretTakedowns(val OptInt32) {
	s.TurretTakedowns = val
}

// SetTwentyMinionsIn3SecondsCount sets the value of TwentyMinionsIn3SecondsCount.
func (s *MatchV5ChallengesDto) SetTwentyMinionsIn3SecondsCount(val OptInt32) {
	s.TwentyMinionsIn3SecondsCount = val
}

// SetTwoWardsOneSweeperCount sets the value of TwoWardsOneSweeperCount.
func (s *MatchV5ChallengesDto) SetTwoWardsOneSweeperCount(val OptInt32) {
	s.TwoWardsOneSweeperCount = val
}

// SetUnseenRecalls sets the value of UnseenRecalls.
func (s *MatchV5ChallengesDto) SetUnseenRecalls(val OptInt32) {
	s.UnseenRecalls = val
}

// SetVisionScorePerMinute sets the value of VisionScorePerMinute.
func (s *MatchV5ChallengesDto) SetVisionScorePerMinute(val OptFloat32) {
	s.VisionScorePerMinute = val
}

// SetWardsGuarded sets the value of WardsGuarded.
func (s *MatchV5ChallengesDto) SetWardsGuarded(val OptInt32) {
	s.WardsGuarded = val
}

// SetWardTakedowns sets the value of WardTakedowns.
func (s *MatchV5ChallengesDto) SetWardTakedowns(val OptInt32) {
	s.WardTakedowns = val
}

// SetWardTakedownsBefore20M sets the value of WardTakedownsBefore20M.
func (s *MatchV5ChallengesDto) SetWardTakedownsBefore20M(val OptInt32) {
	s.WardTakedownsBefore20M = val
}

// SetHealFromMapSources sets the value of HealFromMapSources.
func (s *MatchV5ChallengesDto) SetHealFromMapSources(val OptFloat64) {
	s.HealFromMapSources = val
}

type MatchV5ChallengesDtoFasterSupportQuestCompletion int32

const (
	MatchV5ChallengesDtoFasterSupportQuestCompletion0 MatchV5ChallengesDtoFasterSupportQuestCompletion = 0
	MatchV5ChallengesDtoFasterSupportQuestCompletion1 MatchV5ChallengesDtoFasterSupportQuestCompletion = 1
)

// AllValues returns all MatchV5ChallengesDtoFasterSupportQuestCompletion values.
func (MatchV5ChallengesDtoFasterSupportQuestCompletion) AllValues() []MatchV5ChallengesDtoFasterSupportQuestCompletion {
	return []MatchV5ChallengesDtoFasterSupportQuestCompletion{
		MatchV5ChallengesDtoFasterSupportQuestCompletion0,
		MatchV5ChallengesDtoFasterSupportQuestCompletion1,
	}
}

type MatchV5ChallengesDtoHadAfkTeammate int32

const (
	MatchV5ChallengesDtoHadAfkTeammate0 MatchV5ChallengesDtoHadAfkTeammate = 0
	MatchV5ChallengesDtoHadAfkTeammate1 MatchV5ChallengesDtoHadAfkTeammate = 1
)

// AllValues returns all MatchV5ChallengesDtoHadAfkTeammate values.
func (MatchV5ChallengesDtoHadAfkTeammate) AllValues() []MatchV5ChallengesDtoHadAfkTeammate {
	return []MatchV5ChallengesDtoHadAfkTeammate{
		MatchV5ChallengesDtoHadAfkTeammate0,
		MatchV5ChallengesDtoHadAfkTeammate1,
	}
}

type MatchV5ChallengesDtoHighestCrowdControlScore int32

const (
	MatchV5ChallengesDtoHighestCrowdControlScore0 MatchV5ChallengesDtoHighestCrowdControlScore = 0
	MatchV5ChallengesDtoHighestCrowdControlScore1 MatchV5ChallengesDtoHighestCrowdControlScore = 1
)

// AllValues returns all MatchV5ChallengesDtoHighestCrowdControlScore values.
func (MatchV5ChallengesDtoHighestCrowdControlScore) AllValues() []MatchV5ChallengesDtoHighestCrowdControlScore {
	return []MatchV5ChallengesDtoHighestCrowdControlScore{
		MatchV5ChallengesDtoHighestCrowdControlScore0,
		MatchV5ChallengesDtoHighestCrowdControlScore1,
	}
}

type MatchV5ChallengesDtoHighestWardKills int32

const (
	MatchV5ChallengesDtoHighestWardKills0 MatchV5ChallengesDtoHighestWardKills = 0
	MatchV5ChallengesDtoHighestWardKills1 MatchV5ChallengesDtoHighestWardKills = 1
)

// AllValues returns all MatchV5ChallengesDtoHighestWardKills values.
func (MatchV5ChallengesDtoHighestWardKills) AllValues() []MatchV5ChallengesDtoHighestWardKills {
	return []MatchV5ChallengesDtoHighestWardKills{
		MatchV5ChallengesDtoHighestWardKills0,
		MatchV5ChallengesDtoHighestWardKills1,
	}
}

type MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage int32

const (
	MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage0 MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage = 0
	MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage1 MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage = 1
)

// AllValues returns all MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage values.
func (MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) AllValues() []MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage {
	return []MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage{
		MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage0,
		MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage1,
	}
}

type MatchV5ChallengesDtoPlayedChampSelectPosition int32

const (
	MatchV5ChallengesDtoPlayedChampSelectPosition0 MatchV5ChallengesDtoPlayedChampSelectPosition = 0
	MatchV5ChallengesDtoPlayedChampSelectPosition1 MatchV5ChallengesDtoPlayedChampSelectPosition = 1
)

// AllValues returns all MatchV5ChallengesDtoPlayedChampSelectPosition values.
func (MatchV5ChallengesDtoPlayedChampSelectPosition) AllValues() []MatchV5ChallengesDtoPlayedChampSelectPosition {
	return []MatchV5ChallengesDtoPlayedChampSelectPosition{
		MatchV5ChallengesDtoPlayedChampSelectPosition0,
		MatchV5ChallengesDtoPlayedChampSelectPosition1,
	}
}

// Ref: #/components/schemas/match-v5.ChampionStatsDto
type MatchV5ChampionStatsDto struct {
	AbilityHaste         OptInt32 `json:"abilityHaste"`
	AbilityPower         int32    `json:"abilityPower"`
	Armor                int32    `json:"armor"`
	ArmorPen             int32    `json:"armorPen"`
	ArmorPenPercent      int32    `json:"armorPenPercent"`
	AttackDamage         int32    `json:"attackDamage"`
	AttackSpeed          int32    `json:"attackSpeed"`
	BonusArmorPenPercent int32    `json:"bonusArmorPenPercent"`
	BonusMagicPenPercent int32    `json:"bonusMagicPenPercent"`
	CcReduction          int32    `json:"ccReduction"`
	CooldownReduction    int32    `json:"cooldownReduction"`
	Health               int32    `json:"health"`
	HealthMax            int32    `json:"healthMax"`
	HealthRegen          int32    `json:"healthRegen"`
	Lifesteal            int32    `json:"lifesteal"`
	MagicPen             int32    `json:"magicPen"`
	MagicPenPercent      int32    `json:"magicPenPercent"`
	MagicResist          int32    `json:"magicResist"`
	MovementSpeed        int32    `json:"movementSpeed"`
	Omnivamp             OptInt32 `json:"omnivamp"`
	PhysicalVamp         OptInt32 `json:"physicalVamp"`
	Power                int32    `json:"power"`
	PowerMax             int32    `json:"powerMax"`
	PowerRegen           int32    `json:"powerRegen"`
	SpellVamp            int32    `json:"spellVamp"`
}

// GetAbilityHaste returns the value of AbilityHaste.
func (s *MatchV5ChampionStatsDto) GetAbilityHaste() OptInt32 {
	return s.AbilityHaste
}

// GetAbilityPower returns the value of AbilityPower.
func (s *MatchV5ChampionStatsDto) GetAbilityPower() int32 {
	return s.AbilityPower
}

// GetArmor returns the value of Armor.
func (s *MatchV5ChampionStatsDto) GetArmor() int32 {
	return s.Armor
}

// GetArmorPen returns the value of ArmorPen.
func (s *MatchV5ChampionStatsDto) GetArmorPen() int32 {
	return s.ArmorPen
}

// GetArmorPenPercent returns the value of ArmorPenPercent.
func (s *MatchV5ChampionStatsDto) GetArmorPenPercent() int32 {
	return s.ArmorPenPercent
}

// GetAttackDamage returns the value of AttackDamage.
func (s *MatchV5ChampionStatsDto) GetAttackDamage() int32 {
	return s.AttackDamage
}

// GetAttackSpeed returns the value of AttackSpeed.
func (s *MatchV5ChampionStatsDto) GetAttackSpeed() int32 {
	return s.AttackSpeed
}

// GetBonusArmorPenPercent returns the value of BonusArmorPenPercent.
func (s *MatchV5ChampionStatsDto) GetBonusArmorPenPercent() int32 {
	return s.BonusArmorPenPercent
}

// GetBonusMagicPenPercent returns the value of BonusMagicPenPercent.
func (s *MatchV5ChampionStatsDto) GetBonusMagicPenPercent() int32 {
	return s.BonusMagicPenPercent
}

// GetCcReduction returns the value of CcReduction.
func (s *MatchV5ChampionStatsDto) GetCcReduction() int32 {
	return s.CcReduction
}

// GetCooldownReduction returns the value of CooldownReduction.
func (s *MatchV5ChampionStatsDto) GetCooldownReduction() int32 {
	return s.CooldownReduction
}

// GetHealth returns the value of Health.
func (s *MatchV5ChampionStatsDto) GetHealth() int32 {
	return s.Health
}

// GetHealthMax returns the value of HealthMax.
func (s *MatchV5ChampionStatsDto) GetHealthMax() int32 {
	return s.HealthMax
}

// GetHealthRegen returns the value of HealthRegen.
func (s *MatchV5ChampionStatsDto) GetHealthRegen() int32 {
	return s.HealthRegen
}

// GetLifesteal returns the value of Lifesteal.
func (s *MatchV5ChampionStatsDto) GetLifesteal() int32 {
	return s.Lifesteal
}

// GetMagicPen returns the value of MagicPen.
func (s *MatchV5ChampionStatsDto) GetMagicPen() int32 {
	return s.MagicPen
}

// GetMagicPenPercent returns the value of MagicPenPercent.
func (s *MatchV5ChampionStatsDto) GetMagicPenPercent() int32 {
	return s.MagicPenPercent
}

// GetMagicResist returns the value of MagicResist.
func (s *MatchV5ChampionStatsDto) GetMagicResist() int32 {
	return s.MagicResist
}

// GetMovementSpeed returns the value of MovementSpeed.
func (s *MatchV5ChampionStatsDto) GetMovementSpeed() int32 {
	return s.MovementSpeed
}

// GetOmnivamp returns the value of Omnivamp.
func (s *MatchV5ChampionStatsDto) GetOmnivamp() OptInt32 {
	return s.Omnivamp
}

// GetPhysicalVamp returns the value of PhysicalVamp.
func (s *MatchV5ChampionStatsDto) GetPhysicalVamp() OptInt32 {
	return s.PhysicalVamp
}

// GetPower returns the value of Power.
func (s *MatchV5ChampionStatsDto) GetPower() int32 {
	return s.Power
}

// GetPowerMax returns the value of PowerMax.
func (s *MatchV5ChampionStatsDto) GetPowerMax() int32 {
	return s.PowerMax
}

// GetPowerRegen returns the value of PowerRegen.
func (s *MatchV5ChampionStatsDto) GetPowerRegen() int32 {
	return s.PowerRegen
}

// GetSpellVamp returns the value of SpellVamp.
func (s *MatchV5ChampionStatsDto) GetSpellVamp() int32 {
	return s.SpellVamp
}

// SetAbilityHaste sets the value of AbilityHaste.
func (s *MatchV5ChampionStatsDto) SetAbilityHaste(val OptInt32) {
	s.AbilityHaste = val
}

// SetAbilityPower sets the value of AbilityPower.
func (s *MatchV5ChampionStatsDto) SetAbilityPower(val int32) {
	s.AbilityPower = val
}

// SetArmor sets the value of Armor.
func (s *MatchV5ChampionStatsDto) SetArmor(val int32) {
	s.Armor = val
}

// SetArmorPen sets the value of ArmorPen.
func (s *MatchV5ChampionStatsDto) SetArmorPen(val int32) {
	s.ArmorPen = val
}

// SetArmorPenPercent sets the value of ArmorPenPercent.
func (s *MatchV5ChampionStatsDto) SetArmorPenPercent(val int32) {
	s.ArmorPenPercent = val
}

// SetAttackDamage sets the value of AttackDamage.
func (s *MatchV5ChampionStatsDto) SetAttackDamage(val int32) {
	s.AttackDamage = val
}

// SetAttackSpeed sets the value of AttackSpeed.
func (s *MatchV5ChampionStatsDto) SetAttackSpeed(val int32) {
	s.AttackSpeed = val
}

// SetBonusArmorPenPercent sets the value of BonusArmorPenPercent.
func (s *MatchV5ChampionStatsDto) SetBonusArmorPenPercent(val int32) {
	s.BonusArmorPenPercent = val
}

// SetBonusMagicPenPercent sets the value of BonusMagicPenPercent.
func (s *MatchV5ChampionStatsDto) SetBonusMagicPenPercent(val int32) {
	s.BonusMagicPenPercent = val
}

// SetCcReduction sets the value of CcReduction.
func (s *MatchV5ChampionStatsDto) SetCcReduction(val int32) {
	s.CcReduction = val
}

// SetCooldownReduction sets the value of CooldownReduction.
func (s *MatchV5ChampionStatsDto) SetCooldownReduction(val int32) {
	s.CooldownReduction = val
}

// SetHealth sets the value of Health.
func (s *MatchV5ChampionStatsDto) SetHealth(val int32) {
	s.Health = val
}

// SetHealthMax sets the value of HealthMax.
func (s *MatchV5ChampionStatsDto) SetHealthMax(val int32) {
	s.HealthMax = val
}

// SetHealthRegen sets the value of HealthRegen.
func (s *MatchV5ChampionStatsDto) SetHealthRegen(val int32) {
	s.HealthRegen = val
}

// SetLifesteal sets the value of Lifesteal.
func (s *MatchV5ChampionStatsDto) SetLifesteal(val int32) {
	s.Lifesteal = val
}

// SetMagicPen sets the value of MagicPen.
func (s *MatchV5ChampionStatsDto) SetMagicPen(val int32) {
	s.MagicPen = val
}

// SetMagicPenPercent sets the value of MagicPenPercent.
func (s *MatchV5ChampionStatsDto) SetMagicPenPercent(val int32) {
	s.MagicPenPercent = val
}

// SetMagicResist sets the value of MagicResist.
func (s *MatchV5ChampionStatsDto) SetMagicResist(val int32) {
	s.MagicResist = val
}

// SetMovementSpeed sets the value of MovementSpeed.
func (s *MatchV5ChampionStatsDto) SetMovementSpeed(val int32) {
	s.MovementSpeed = val
}

// SetOmnivamp sets the value of Omnivamp.
func (s *MatchV5ChampionStatsDto) SetOmnivamp(val OptInt32) {
	s.Omnivamp = val
}

// SetPhysicalVamp sets the value of PhysicalVamp.
func (s *MatchV5ChampionStatsDto) SetPhysicalVamp(val OptInt32) {
	s.PhysicalVamp = val
}

// SetPower sets the value of Power.
func (s *MatchV5ChampionStatsDto) SetPower(val int32) {
	s.Power = val
}

// SetPowerMax sets the value of PowerMax.
func (s *MatchV5ChampionStatsDto) SetPowerMax(val int32) {
	s.PowerMax = val
}

// SetPowerRegen sets the value of PowerRegen.
func (s *MatchV5ChampionStatsDto) SetPowerRegen(val int32) {
	s.PowerRegen = val
}

// SetSpellVamp sets the value of SpellVamp.
func (s *MatchV5ChampionStatsDto) SetSpellVamp(val int32) {
	s.SpellVamp = val
}

// Ref: #/components/schemas/match-v5.DamageStatsDto
type MatchV5DamageStatsDto struct {
	MagicDamageDone               int32 `json:"magicDamageDone"`
	MagicDamageDoneToChampions    int32 `json:"magicDamageDoneToChampions"`
	MagicDamageTaken              int32 `json:"magicDamageTaken"`
	PhysicalDamageDone            int32 `json:"physicalDamageDone"`
	PhysicalDamageDoneToChampions int32 `json:"physicalDamageDoneToChampions"`
	PhysicalDamageTaken           int32 `json:"physicalDamageTaken"`
	TotalDamageDone               int32 `json:"totalDamageDone"`
	TotalDamageDoneToChampions    int32 `json:"totalDamageDoneToChampions"`
	TotalDamageTaken              int32 `json:"totalDamageTaken"`
	TrueDamageDone                int32 `json:"trueDamageDone"`
	TrueDamageDoneToChampions     int32 `json:"trueDamageDoneToChampions"`
	TrueDamageTaken               int32 `json:"trueDamageTaken"`
}

// GetMagicDamageDone returns the value of MagicDamageDone.
func (s *MatchV5DamageStatsDto) GetMagicDamageDone() int32 {
	return s.MagicDamageDone
}

// GetMagicDamageDoneToChampions returns the value of MagicDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) GetMagicDamageDoneToChampions() int32 {
	return s.MagicDamageDoneToChampions
}

// GetMagicDamageTaken returns the value of MagicDamageTaken.
func (s *MatchV5DamageStatsDto) GetMagicDamageTaken() int32 {
	return s.MagicDamageTaken
}

// GetPhysicalDamageDone returns the value of PhysicalDamageDone.
func (s *MatchV5DamageStatsDto) GetPhysicalDamageDone() int32 {
	return s.PhysicalDamageDone
}

// GetPhysicalDamageDoneToChampions returns the value of PhysicalDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) GetPhysicalDamageDoneToChampions() int32 {
	return s.PhysicalDamageDoneToChampions
}

// GetPhysicalDamageTaken returns the value of PhysicalDamageTaken.
func (s *MatchV5DamageStatsDto) GetPhysicalDamageTaken() int32 {
	return s.PhysicalDamageTaken
}

// GetTotalDamageDone returns the value of TotalDamageDone.
func (s *MatchV5DamageStatsDto) GetTotalDamageDone() int32 {
	return s.TotalDamageDone
}

// GetTotalDamageDoneToChampions returns the value of TotalDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) GetTotalDamageDoneToChampions() int32 {
	return s.TotalDamageDoneToChampions
}

// GetTotalDamageTaken returns the value of TotalDamageTaken.
func (s *MatchV5DamageStatsDto) GetTotalDamageTaken() int32 {
	return s.TotalDamageTaken
}

// GetTrueDamageDone returns the value of TrueDamageDone.
func (s *MatchV5DamageStatsDto) GetTrueDamageDone() int32 {
	return s.TrueDamageDone
}

// GetTrueDamageDoneToChampions returns the value of TrueDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) GetTrueDamageDoneToChampions() int32 {
	return s.TrueDamageDoneToChampions
}

// GetTrueDamageTaken returns the value of TrueDamageTaken.
func (s *MatchV5DamageStatsDto) GetTrueDamageTaken() int32 {
	return s.TrueDamageTaken
}

// SetMagicDamageDone sets the value of MagicDamageDone.
func (s *MatchV5DamageStatsDto) SetMagicDamageDone(val int32) {
	s.MagicDamageDone = val
}

// SetMagicDamageDoneToChampions sets the value of MagicDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) SetMagicDamageDoneToChampions(val int32) {
	s.MagicDamageDoneToChampions = val
}

// SetMagicDamageTaken sets the value of MagicDamageTaken.
func (s *MatchV5DamageStatsDto) SetMagicDamageTaken(val int32) {
	s.MagicDamageTaken = val
}

// SetPhysicalDamageDone sets the value of PhysicalDamageDone.
func (s *MatchV5DamageStatsDto) SetPhysicalDamageDone(val int32) {
	s.PhysicalDamageDone = val
}

// SetPhysicalDamageDoneToChampions sets the value of PhysicalDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) SetPhysicalDamageDoneToChampions(val int32) {
	s.PhysicalDamageDoneToChampions = val
}

// SetPhysicalDamageTaken sets the value of PhysicalDamageTaken.
func (s *MatchV5DamageStatsDto) SetPhysicalDamageTaken(val int32) {
	s.PhysicalDamageTaken = val
}

// SetTotalDamageDone sets the value of TotalDamageDone.
func (s *MatchV5DamageStatsDto) SetTotalDamageDone(val int32) {
	s.TotalDamageDone = val
}

// SetTotalDamageDoneToChampions sets the value of TotalDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) SetTotalDamageDoneToChampions(val int32) {
	s.TotalDamageDoneToChampions = val
}

// SetTotalDamageTaken sets the value of TotalDamageTaken.
func (s *MatchV5DamageStatsDto) SetTotalDamageTaken(val int32) {
	s.TotalDamageTaken = val
}

// SetTrueDamageDone sets the value of TrueDamageDone.
func (s *MatchV5DamageStatsDto) SetTrueDamageDone(val int32) {
	s.TrueDamageDone = val
}

// SetTrueDamageDoneToChampions sets the value of TrueDamageDoneToChampions.
func (s *MatchV5DamageStatsDto) SetTrueDamageDoneToChampions(val int32) {
	s.TrueDamageDoneToChampions = val
}

// SetTrueDamageTaken sets the value of TrueDamageTaken.
func (s *MatchV5DamageStatsDto) SetTrueDamageTaken(val int32) {
	s.TrueDamageTaken = val
}

// Ref: #/components/schemas/match-v5.EventsTimeLineDto
type MatchV5EventsTimeLineDto struct {
	Timestamp               int64                              `json:"timestamp"`
	RealTimestamp           OptInt64                           `json:"realTimestamp"`
	Type                    string                             `json:"type"`
	ItemId                  OptInt32                           `json:"itemId"`
	ParticipantId           OptInt32                           `json:"participantId"`
	LevelUpType             OptString                          `json:"levelUpType"`
	SkillSlot               OptInt32                           `json:"skillSlot"`
	CreatorId               OptInt32                           `json:"creatorId"`
	WardType                OptString                          `json:"wardType"`
	Level                   OptInt32                           `json:"level"`
	AssistingParticipantIds []int32                            `json:"assistingParticipantIds"`
	Bounty                  OptInt32                           `json:"bounty"`
	KillStreakLength        OptInt32                           `json:"killStreakLength"`
	KillerId                OptInt32                           `json:"killerId"`
	Position                OptMatchV5PositionDto              `json:"position"`
	VictimDamageDealt       []MatchV5MatchTimelineVictimDamage `json:"victimDamageDealt"`
	VictimDamageReceived    []MatchV5MatchTimelineVictimDamage `json:"victimDamageReceived"`
	VictimId                OptInt32                           `json:"victimId"`
	KillType                OptString                          `json:"killType"`
	LaneType                OptString                          `json:"laneType"`
	TeamId                  OptInt32                           `json:"teamId"`
	MultiKillLength         OptInt32                           `json:"multiKillLength"`
	KillerTeamId            OptInt32                           `json:"killerTeamId"`
	MonsterType             OptString                          `json:"monsterType"`
	MonsterSubType          OptString                          `json:"monsterSubType"`
	BuildingType            OptString                          `json:"buildingType"`
	TowerType               OptString                          `json:"towerType"`
	AfterId                 OptInt32                           `json:"afterId"`
	BeforeId                OptInt32                           `json:"beforeId"`
	GoldGain                OptInt32                           `json:"goldGain"`
	GameId                  OptInt64                           `json:"gameId"`
	WinningTeam             OptInt32                           `json:"winningTeam"`
	TransformType           OptString                          `json:"transformType"`
	Name                    OptString                          `json:"name"`
	ShutdownBounty          OptInt32                           `json:"shutdownBounty"`
	ActualStartTime         OptInt64                           `json:"actualStartTime"`
	FeatType                OptInt32                           `json:"featType"`
	FeatValue               OptInt32                           `json:"featValue"`
}

// GetTimestamp returns the value of Timestamp.
func (s *MatchV5EventsTimeLineDto) GetTimestamp() int64 {
	return s.Timestamp
}

// GetRealTimestamp returns the value of RealTimestamp.
func (s *MatchV5EventsTimeLineDto) GetRealTimestamp() OptInt64 {
	return s.RealTimestamp
}

// GetType returns the value of Type.
func (s *MatchV5EventsTimeLineDto) GetType() string {
	return s.Type
}

// GetItemId returns the value of ItemId.
func (s *MatchV5EventsTimeLineDto) GetItemId() OptInt32 {
	return s.ItemId
}

// GetParticipantId returns the value of ParticipantId.
func (s *MatchV5EventsTimeLineDto) GetParticipantId() OptInt32 {
	return s.ParticipantId
}

// GetLevelUpType returns the value of LevelUpType.
func (s *MatchV5EventsTimeLineDto) GetLevelUpType() OptString {
	return s.LevelUpType
}

// GetSkillSlot returns the value of SkillSlot.
func (s *MatchV5EventsTimeLineDto) GetSkillSlot() OptInt32 {
	return s.SkillSlot
}

// GetCreatorId returns the value of CreatorId.
func (s *MatchV5EventsTimeLineDto) GetCreatorId() OptInt32 {
	return s.CreatorId
}

// GetWardType returns the value of WardType.
func (s *MatchV5EventsTimeLineDto) GetWardType() OptString {
	return s.WardType
}

// GetLevel returns the value of Level.
func (s *MatchV5EventsTimeLineDto) GetLevel() OptInt32 {
	return s.Level
}

// GetAssistingParticipantIds returns the value of AssistingParticipantIds.
func (s *MatchV5EventsTimeLineDto) GetAssistingParticipantIds() []int32 {
	return s.AssistingParticipantIds
}

// GetBounty returns the value of Bounty.
func (s *MatchV5EventsTimeLineDto) GetBounty() OptInt32 {
	return s.Bounty
}

// GetKillStreakLength returns the value of KillStreakLength.
func (s *MatchV5EventsTimeLineDto) GetKillStreakLength() OptInt32 {
	return s.KillStreakLength
}

// GetKillerId returns the value of KillerId.
func (s *MatchV5EventsTimeLineDto) GetKillerId() OptInt32 {
	return s.KillerId
}

// GetPosition returns the value of Position.
func (s *MatchV5EventsTimeLineDto) GetPosition() OptMatchV5PositionDto {
	return s.Position
}

// GetVictimDamageDealt returns the value of VictimDamageDealt.
func (s *MatchV5EventsTimeLineDto) GetVictimDamageDealt() []MatchV5MatchTimelineVictimDamage {
	return s.VictimDamageDealt
}

// GetVictimDamageReceived returns the value of VictimDamageReceived.
func (s *MatchV5EventsTimeLineDto) GetVictimDamageReceived() []MatchV5MatchTimelineVictimDamage {
	return s.VictimDamageReceived
}

// GetVictimId returns the value of VictimId.
func (s *MatchV5EventsTimeLineDto) GetVictimId() OptInt32 {
	return s.VictimId
}

// GetKillType returns the value of KillType.
func (s *MatchV5EventsTimeLineDto) GetKillType() OptString {
	return s.KillType
}

// GetLaneType returns the value of LaneType.
func (s *MatchV5EventsTimeLineDto) GetLaneType() OptString {
	return s.LaneType
}

// GetTeamId returns the value of TeamId.
func (s *MatchV5EventsTimeLineDto) GetTeamId() OptInt32 {
	return s.TeamId
}

// GetMultiKillLength returns the value of MultiKillLength.
func (s *MatchV5EventsTimeLineDto) GetMultiKillLength() OptInt32 {
	return s.MultiKillLength
}

// GetKillerTeamId returns the value of KillerTeamId.
func (s *MatchV5EventsTimeLineDto) GetKillerTeamId() OptInt32 {
	return s.KillerTeamId
}

// GetMonsterType returns the value of MonsterType.
func (s *MatchV5EventsTimeLineDto) GetMonsterType() OptString {
	return s.MonsterType
}

// GetMonsterSubType returns the value of MonsterSubType.
func (s *MatchV5EventsTimeLineDto) GetMonsterSubType() OptString {
	return s.MonsterSubType
}

// GetBuildingType returns the value of BuildingType.
func (s *MatchV5EventsTimeLineDto) GetBuildingType() OptString {
	return s.BuildingType
}

// GetTowerType returns the value of TowerType.
func (s *MatchV5EventsTimeLineDto) GetTowerType() OptString {
	return s.TowerType
}

// GetAfterId returns the value of AfterId.
func (s *MatchV5EventsTimeLineDto) GetAfterId() OptInt32 {
	return s.AfterId
}

// GetBeforeId returns the value of BeforeId.
func (s *MatchV5EventsTimeLineDto) GetBeforeId() OptInt32 {
	return s.BeforeId
}

// GetGoldGain returns the value of GoldGain.
func (s *MatchV5EventsTimeLineDto) GetGoldGain() OptInt32 {
	return s.GoldGain
}

// GetGameId returns the value of GameId.
func (s *MatchV5EventsTimeLineDto) GetGameId() OptInt64 {
	return s.GameId
}

// GetWinningTeam returns the value of WinningTeam.
func (s *MatchV5EventsTimeLineDto) GetWinningTeam() OptInt32 {
	return s.WinningTeam
}

// GetTransformType returns the value of TransformType.
func (s *MatchV5EventsTimeLineDto) GetTransformType() OptString {
	return s.TransformType
}

// GetName returns the value of Name.
func (s *MatchV5EventsTimeLineDto) GetName() OptString {
	return s.Name
}

// GetShutdownBounty returns the value of ShutdownBounty.
func (s *MatchV5EventsTimeLineDto) GetShutdownBounty() OptInt32 {
	return s.ShutdownBounty
}

// GetActualStartTime returns the value of ActualStartTime.
func (s *MatchV5EventsTimeLineDto) GetActualStartTime() OptInt64 {
	return s.ActualStartTime
}

// GetFeatType returns the value of FeatType.
func (s *MatchV5EventsTimeLineDto) GetFeatType() OptInt32 {
	return s.FeatType
}

// GetFeatValue returns the value of FeatValue.
func (s *MatchV5EventsTimeLineDto) GetFeatValue() OptInt32 {
	return s.FeatValue
}

// SetTimestamp sets the value of Timestamp.
func (s *MatchV5EventsTimeLineDto) SetTimestamp(val int64) {
	s.Timestamp = val
}

// SetRealTimestamp sets the value of RealTimestamp.
func (s *MatchV5EventsTimeLineDto) SetRealTimestamp(val OptInt64) {
	s.RealTimestamp = val
}

// SetType sets the value of Type.
func (s *MatchV5EventsTimeLineDto) SetType(val string) {
	s.Type = val
}

// SetItemId sets the value of ItemId.
func (s *MatchV5EventsTimeLineDto) SetItemId(val OptInt32) {
	s.ItemId = val
}

// SetParticipantId sets the value of ParticipantId.
func (s *MatchV5EventsTimeLineDto) SetParticipantId(val OptInt32) {
	s.ParticipantId = val
}

// SetLevelUpType sets the value of LevelUpType.
func (s *MatchV5EventsTimeLineDto) SetLevelUpType(val OptString) {
	s.LevelUpType = val
}

// SetSkillSlot sets the value of SkillSlot.
func (s *MatchV5EventsTimeLineDto) SetSkillSlot(val OptInt32) {
	s.SkillSlot = val
}

// SetCreatorId sets the value of CreatorId.
func (s *MatchV5EventsTimeLineDto) SetCreatorId(val OptInt32) {
	s.CreatorId = val
}

// SetWardType sets the value of WardType.
func (s *MatchV5EventsTimeLineDto) SetWardType(val OptString) {
	s.WardType = val
}

// SetLevel sets the value of Level.
func (s *MatchV5EventsTimeLineDto) SetLevel(val OptInt32) {
	s.Level = val
}

// SetAssistingParticipantIds sets the value of AssistingParticipantIds.
func (s *MatchV5EventsTimeLineDto) SetAssistingParticipantIds(val []int32) {
	s.AssistingParticipantIds = val
}

// SetBounty sets the value of Bounty.
func (s *MatchV5EventsTimeLineDto) SetBounty(val OptInt32) {
	s.Bounty = val
}

// SetKillStreakLength sets the value of KillStreakLength.
func (s *MatchV5EventsTimeLineDto) SetKillStreakLength(val OptInt32) {
	s.KillStreakLength = val
}

// SetKillerId sets the value of KillerId.
func (s *MatchV5EventsTimeLineDto) SetKillerId(val OptInt32) {
	s.KillerId = val
}

// SetPosition sets the value of Position.
func (s *MatchV5EventsTimeLineDto) SetPosition(val OptMatchV5PositionDto) {
	s.Position = val
}

// SetVictimDamageDealt sets the value of VictimDamageDealt.
func (s *MatchV5EventsTimeLineDto) SetVictimDamageDealt(val []MatchV5MatchTimelineVictimDamage) {
	s.VictimDamageDealt = val
}

// SetVictimDamageReceived sets the value of VictimDamageReceived.
func (s *MatchV5EventsTimeLineDto) SetVictimDamageReceived(val []MatchV5MatchTimelineVictimDamage) {
	s.VictimDamageReceived = val
}

// SetVictimId sets the value of VictimId.
func (s *MatchV5EventsTimeLineDto) SetVictimId(val OptInt32) {
	s.VictimId = val
}

// SetKillType sets the value of KillType.
func (s *MatchV5EventsTimeLineDto) SetKillType(val OptString) {
	s.KillType = val
}

// SetLaneType sets the value of LaneType.
func (s *MatchV5EventsTimeLineDto) SetLaneType(val OptString) {
	s.LaneType = val
}

// SetTeamId sets the value of TeamId.
func (s *MatchV5EventsTimeLineDto) SetTeamId(val OptInt32) {
	s.TeamId = val
}

// SetMultiKillLength sets the value of MultiKillLength.
func (s *MatchV5EventsTimeLineDto) SetMultiKillLength(val OptInt32) {
	s.MultiKillLength = val
}

// SetKillerTeamId sets the value of KillerTeamId.
func (s *MatchV5EventsTimeLineDto) SetKillerTeamId(val OptInt32) {
	s.KillerTeamId = val
}

// SetMonsterType sets the value of MonsterType.
func (s *MatchV5EventsTimeLineDto) SetMonsterType(val OptString) {
	s.MonsterType = val
}

// SetMonsterSubType sets the value of MonsterSubType.
func (s *MatchV5EventsTimeLineDto) SetMonsterSubType(val OptString) {
	s.MonsterSubType = val
}

// SetBuildingType sets the value of BuildingType.
func (s *MatchV5EventsTimeLineDto) SetBuildingType(val OptString) {
	s.BuildingType = val
}

// SetTowerType sets the value of TowerType.
func (s *MatchV5EventsTimeLineDto) SetTowerType(val OptString) {
	s.TowerType = val
}

// SetAfterId sets the value of AfterId.
func (s *MatchV5EventsTimeLineDto) SetAfterId(val OptInt32) {
	s.AfterId = val
}

// SetBeforeId sets the value of BeforeId.
func (s *MatchV5EventsTimeLineDto) SetBeforeId(val OptInt32) {
	s.BeforeId = val
}

// SetGoldGain sets the value of GoldGain.
func (s *MatchV5EventsTimeLineDto) SetGoldGain(val OptInt32) {
	s.GoldGain = val
}

// SetGameId sets the value of GameId.
func (s *MatchV5EventsTimeLineDto) SetGameId(val OptInt64) {
	s.GameId = val
}

// SetWinningTeam sets the value of WinningTeam.
func (s *MatchV5EventsTimeLineDto) SetWinningTeam(val OptInt32) {
	s.WinningTeam = val
}

// SetTransformType sets the value of TransformType.
func (s *MatchV5EventsTimeLineDto) SetTransformType(val OptString) {
	s.TransformType = val
}

// SetName sets the value of Name.
func (s *MatchV5EventsTimeLineDto) SetName(val OptString) {
	s.Name = val
}

// SetShutdownBounty sets the value of ShutdownBounty.
func (s *MatchV5EventsTimeLineDto) SetShutdownBounty(val OptInt32) {
	s.ShutdownBounty = val
}

// SetActualStartTime sets the value of ActualStartTime.
func (s *MatchV5EventsTimeLineDto) SetActualStartTime(val OptInt64) {
	s.ActualStartTime = val
}

// SetFeatType sets the value of FeatType.
func (s *MatchV5EventsTimeLineDto) SetFeatType(val OptInt32) {
	s.FeatType = val
}

// SetFeatValue sets the value of FeatValue.
func (s *MatchV5EventsTimeLineDto) SetFeatValue(val OptInt32) {
	s.FeatValue = val
}

// Ref: #/components/schemas/match-v5.FeatDto
type MatchV5FeatDto struct {
	FeatState OptInt32 `json:"featState"`
}

// GetFeatState returns the value of FeatState.
func (s *MatchV5FeatDto) GetFeatState() OptInt32 {
	return s.FeatState
}

// SetFeatState sets the value of FeatState.
func (s *MatchV5FeatDto) SetFeatState(val OptInt32) {
	s.FeatState = val
}

// Ref: #/components/schemas/match-v5.FeatsDto
type MatchV5FeatsDto struct {
	EPICMONSTERKILL OptMatchV5FeatDto `json:"EPIC_MONSTER_KILL"`
	FIRSTBLOOD      OptMatchV5FeatDto `json:"FIRST_BLOOD"`
	FIRSTTURRET     OptMatchV5FeatDto `json:"FIRST_TURRET"`
}

// GetEPICMONSTERKILL returns the value of EPICMONSTERKILL.
func (s *MatchV5FeatsDto) GetEPICMONSTERKILL() OptMatchV5FeatDto {
	return s.EPICMONSTERKILL
}

// GetFIRSTBLOOD returns the value of FIRSTBLOOD.
func (s *MatchV5FeatsDto) GetFIRSTBLOOD() OptMatchV5FeatDto {
	return s.FIRSTBLOOD
}

// GetFIRSTTURRET returns the value of FIRSTTURRET.
func (s *MatchV5FeatsDto) GetFIRSTTURRET() OptMatchV5FeatDto {
	return s.FIRSTTURRET
}

// SetEPICMONSTERKILL sets the value of EPICMONSTERKILL.
func (s *MatchV5FeatsDto) SetEPICMONSTERKILL(val OptMatchV5FeatDto) {
	s.EPICMONSTERKILL = val
}

// SetFIRSTBLOOD sets the value of FIRSTBLOOD.
func (s *MatchV5FeatsDto) SetFIRSTBLOOD(val OptMatchV5FeatDto) {
	s.FIRSTBLOOD = val
}

// SetFIRSTTURRET sets the value of FIRSTTURRET.
func (s *MatchV5FeatsDto) SetFIRSTTURRET(val OptMatchV5FeatDto) {
	s.FIRSTTURRET = val
}

// Ref: #/components/schemas/match-v5.FramesTimeLineDto
type MatchV5FramesTimeLineDto struct {
	Events            []MatchV5EventsTimeLineDto                   `json:"events"`
	ParticipantFrames OptMatchV5FramesTimeLineDtoParticipantFrames `json:"participantFrames"`
	Timestamp         int32                                        `json:"timestamp"`
}

// GetEvents returns the value of Events.
func (s *MatchV5FramesTimeLineDto) GetEvents() []MatchV5EventsTimeLineDto {
	return s.Events
}

// GetParticipantFrames returns the value of ParticipantFrames.
func (s *MatchV5FramesTimeLineDto) GetParticipantFrames() OptMatchV5FramesTimeLineDtoParticipantFrames {
	return s.ParticipantFrames
}

// GetTimestamp returns the value of Timestamp.
func (s *MatchV5FramesTimeLineDto) GetTimestamp() int32 {
	return s.Timestamp
}

// SetEvents sets the value of Events.
func (s *MatchV5FramesTimeLineDto) SetEvents(val []MatchV5EventsTimeLineDto) {
	s.Events = val
}

// SetParticipantFrames sets the value of ParticipantFrames.
func (s *MatchV5FramesTimeLineDto) SetParticipantFrames(val OptMatchV5FramesTimeLineDtoParticipantFrames) {
	s.ParticipantFrames = val
}

// SetTimestamp sets the value of Timestamp.
func (s *MatchV5FramesTimeLineDto) SetTimestamp(val int32) {
	s.Timestamp = val
}

type MatchV5FramesTimeLineDtoParticipantFrames map[string]MatchV5ParticipantFrameDto

func (s *MatchV5FramesTimeLineDtoParticipantFrames) init() MatchV5FramesTimeLineDtoParticipantFrames {
	m := *s
	if m == nil {
		m = map[string]MatchV5ParticipantFrameDto{}
		*s = m
	}
	return m
}

// MatchV5GetMatchBadGateway is response for MatchV5GetMatch operation.
type MatchV5GetMatchBadGateway struct{}

func (*MatchV5GetMatchBadGateway) matchV5GetMatchRes() {}

// MatchV5GetMatchBadRequest is response for MatchV5GetMatch operation.
type MatchV5GetMatchBadRequest struct{}

func (*MatchV5GetMatchBadRequest) matchV5GetMatchRes() {}

// MatchV5GetMatchForbidden is response for MatchV5GetMatch operation.
type MatchV5GetMatchForbidden struct{}

func (*MatchV5GetMatchForbidden) matchV5GetMatchRes() {}

// MatchV5GetMatchGatewayTimeout is response for MatchV5GetMatch operation.
type MatchV5GetMatchGatewayTimeout struct{}

func (*MatchV5GetMatchGatewayTimeout) matchV5GetMatchRes() {}

// MatchV5GetMatchIdsByPUUIDBadGateway is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDBadGateway struct{}

func (*MatchV5GetMatchIdsByPUUIDBadGateway) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDBadRequest is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDBadRequest struct{}

func (*MatchV5GetMatchIdsByPUUIDBadRequest) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDForbidden is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDForbidden struct{}

func (*MatchV5GetMatchIdsByPUUIDForbidden) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDGatewayTimeout is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDGatewayTimeout struct{}

func (*MatchV5GetMatchIdsByPUUIDGatewayTimeout) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDInternalServerError is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDInternalServerError struct{}

func (*MatchV5GetMatchIdsByPUUIDInternalServerError) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDMethodNotAllowed is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDMethodNotAllowed struct{}

func (*MatchV5GetMatchIdsByPUUIDMethodNotAllowed) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDNotFound is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDNotFound struct{}

func (*MatchV5GetMatchIdsByPUUIDNotFound) matchV5GetMatchIdsByPUUIDRes() {}

type MatchV5GetMatchIdsByPUUIDOKApplicationJSON []string

func (*MatchV5GetMatchIdsByPUUIDOKApplicationJSON) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDServiceUnavailable is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDServiceUnavailable struct{}

func (*MatchV5GetMatchIdsByPUUIDServiceUnavailable) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDTooManyRequests is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDTooManyRequests struct{}

func (*MatchV5GetMatchIdsByPUUIDTooManyRequests) matchV5GetMatchIdsByPUUIDRes() {}

type MatchV5GetMatchIdsByPUUIDType string

const (
	MatchV5GetMatchIdsByPUUIDTypeRanked   MatchV5GetMatchIdsByPUUIDType = "ranked"
	MatchV5GetMatchIdsByPUUIDTypeNormal   MatchV5GetMatchIdsByPUUIDType = "normal"
	MatchV5GetMatchIdsByPUUIDTypeTourney  MatchV5GetMatchIdsByPUUIDType = "tourney"
	MatchV5GetMatchIdsByPUUIDTypeTutorial MatchV5GetMatchIdsByPUUIDType = "tutorial"
)

// AllValues returns all MatchV5GetMatchIdsByPUUIDType values.
func (MatchV5GetMatchIdsByPUUIDType) AllValues() []MatchV5GetMatchIdsByPUUIDType {
	return []MatchV5GetMatchIdsByPUUIDType{
		MatchV5GetMatchIdsByPUUIDTypeRanked,
		MatchV5GetMatchIdsByPUUIDTypeNormal,
		MatchV5GetMatchIdsByPUUIDTypeTourney,
		MatchV5GetMatchIdsByPUUIDTypeTutorial,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s MatchV5GetMatchIdsByPUUIDType) MarshalText() ([]byte, error) {
	switch s {
	case MatchV5GetMatchIdsByPUUIDTypeRanked:
		return []byte(s), nil
	case MatchV5GetMatchIdsByPUUIDTypeNormal:
		return []byte(s), nil
	case MatchV5GetMatchIdsByPUUIDTypeTourney:
		return []byte(s), nil
	case MatchV5GetMatchIdsByPUUIDTypeTutorial:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *MatchV5GetMatchIdsByPUUIDType) UnmarshalText(data []byte) error {
	switch MatchV5GetMatchIdsByPUUIDType(data) {
	case MatchV5GetMatchIdsByPUUIDTypeRanked:
		*s = MatchV5GetMatchIdsByPUUIDTypeRanked
		return nil
	case MatchV5GetMatchIdsByPUUIDTypeNormal:
		*s = MatchV5GetMatchIdsByPUUIDTypeNormal
		return nil
	case MatchV5GetMatchIdsByPUUIDTypeTourney:
		*s = MatchV5GetMatchIdsByPUUIDTypeTourney
		return nil
	case MatchV5GetMatchIdsByPUUIDTypeTutorial:
		*s = MatchV5GetMatchIdsByPUUIDTypeTutorial
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// MatchV5GetMatchIdsByPUUIDUnauthorized is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDUnauthorized struct{}

func (*MatchV5GetMatchIdsByPUUIDUnauthorized) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchIdsByPUUIDUnsupportedMediaType is response for MatchV5GetMatchIdsByPUUID operation.
type MatchV5GetMatchIdsByPUUIDUnsupportedMediaType struct{}

func (*MatchV5GetMatchIdsByPUUIDUnsupportedMediaType) matchV5GetMatchIdsByPUUIDRes() {}

// MatchV5GetMatchInternalServerError is response for MatchV5GetMatch operation.
type MatchV5GetMatchInternalServerError struct{}

func (*MatchV5GetMatchInternalServerError) matchV5GetMatchRes() {}

// MatchV5GetMatchMethodNotAllowed is response for MatchV5GetMatch operation.
type MatchV5GetMatchMethodNotAllowed struct{}

func (*MatchV5GetMatchMethodNotAllowed) matchV5GetMatchRes() {}

// MatchV5GetMatchNotFound is response for MatchV5GetMatch operation.
type MatchV5GetMatchNotFound struct{}

func (*MatchV5GetMatchNotFound) matchV5GetMatchRes() {}

// MatchV5GetMatchServiceUnavailable is response for MatchV5GetMatch operation.
type MatchV5GetMatchServiceUnavailable struct{}

func (*MatchV5GetMatchServiceUnavailable) matchV5GetMatchRes() {}

// MatchV5GetMatchTooManyRequests is response for MatchV5GetMatch operation.
type MatchV5GetMatchTooManyRequests struct{}

func (*MatchV5GetMatchTooManyRequests) matchV5GetMatchRes() {}

// MatchV5GetMatchUnauthorized is response for MatchV5GetMatch operation.
type MatchV5GetMatchUnauthorized struct{}

func (*MatchV5GetMatchUnauthorized) matchV5GetMatchRes() {}

// MatchV5GetMatchUnsupportedMediaType is response for MatchV5GetMatch operation.
type MatchV5GetMatchUnsupportedMediaType struct{}

func (*MatchV5GetMatchUnsupportedMediaType) matchV5GetMatchRes() {}

// MatchV5GetTimelineBadGateway is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineBadGateway struct{}

func (*MatchV5GetTimelineBadGateway) matchV5GetTimelineRes() {}

// MatchV5GetTimelineBadRequest is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineBadRequest struct{}

func (*MatchV5GetTimelineBadRequest) matchV5GetTimelineRes() {}

// MatchV5GetTimelineForbidden is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineForbidden struct{}

func (*MatchV5GetTimelineForbidden) matchV5GetTimelineRes() {}

// MatchV5GetTimelineGatewayTimeout is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineGatewayTimeout struct{}

func (*MatchV5GetTimelineGatewayTimeout) matchV5GetTimelineRes() {}

// MatchV5GetTimelineInternalServerError is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineInternalServerError struct{}

func (*MatchV5GetTimelineInternalServerError) matchV5GetTimelineRes() {}

// MatchV5GetTimelineMethodNotAllowed is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineMethodNotAllowed struct{}

func (*MatchV5GetTimelineMethodNotAllowed) matchV5GetTimelineRes() {}

// MatchV5GetTimelineNotFound is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineNotFound struct{}

func (*MatchV5GetTimelineNotFound) matchV5GetTimelineRes() {}

// MatchV5GetTimelineServiceUnavailable is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineServiceUnavailable struct{}

func (*MatchV5GetTimelineServiceUnavailable) matchV5GetTimelineRes() {}

// MatchV5GetTimelineTooManyRequests is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineTooManyRequests struct{}

func (*MatchV5GetTimelineTooManyRequests) matchV5GetTimelineRes() {}

// MatchV5GetTimelineUnauthorized is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineUnauthorized struct{}

func (*MatchV5GetTimelineUnauthorized) matchV5GetTimelineRes() {}

// MatchV5GetTimelineUnsupportedMediaType is response for MatchV5GetTimeline operation.
type MatchV5GetTimelineUnsupportedMediaType struct{}

func (*MatchV5GetTimelineUnsupportedMediaType) matchV5GetTimelineRes() {}

// Ref: #/components/schemas/match-v5.InfoDto
type MatchV5InfoDto struct {
	// Refer to indicate if the game ended in termination.
	EndOfGameResult OptString `json:"endOfGameResult"`
	// Unix timestamp for when the game is created on the game server (i.e., the loading screen).
	GameCreation int64 `json:"gameCreation"`
	// Prior to patch 11.20, this field returns the game length in milliseconds calculated from
	// gameEndTimestamp - gameStartTimestamp. Post patch 11.20, this field returns the max timePlayed of
	// any participant in the game in seconds, which makes the behavior of this field consistent with
	// that of match-v4. The best way to handling the change in this field is to treat the value as
	// milliseconds if the gameEndTimestamp field isn't in the response and to treat the value as seconds
	// if gameEndTimestamp is in the response.
	GameDuration int64 `json:"gameDuration"`
	// Unix timestamp for when match ends on the game server. This timestamp can occasionally be
	// significantly longer than when the match "ends". The most reliable way of determining the
	// timestamp for the end of the match would be to add the max time played of any participant to the
	// gameStartTimestamp. This field was added to match-v5 in patch 11.20 on Oct 5th, 2021.
	GameEndTimestamp OptInt64 `json:"gameEndTimestamp"`
	GameId           int64    `json:"gameId"`
	// Refer to the Game Constants documentation.
	GameMode string `json:"gameMode"`
	GameName string `json:"gameName"`
	// Unix timestamp for when match starts on the game server.
	GameStartTimestamp int64  `json:"gameStartTimestamp"`
	GameType           string `json:"gameType"`
	// The first two parts can be used to determine the patch a game was played on.
	GameVersion string `json:"gameVersion"`
	// Refer to the Game Constants documentation.
	MapId        int32                   `json:"mapId"`
	Participants []MatchV5ParticipantDto `json:"participants"`
	// Platform where the match was played.
	PlatformId string `json:"platformId"`
	// Refer to the Game Constants documentation.
	QueueId int32            `json:"queueId"`
	Teams   []MatchV5TeamDto `json:"teams"`
	// Tournament code used to generate the match. This field was added to match-v5 in patch 11.13 on
	// June 23rd, 2021.
	TournamentCode   OptString `json:"tournamentCode"`
	GameModeMutators []string  `json:"gameModeMutators"`
}

// GetEndOfGameResult returns the value of EndOfGameResult.
func (s *MatchV5InfoDto) GetEndOfGameResult() OptString {
	return s.EndOfGameResult
}

// GetGameCreation returns the value of GameCreation.
func (s *MatchV5InfoDto) GetGameCreation() int64 {
	return s.GameCreation
}

// GetGameDuration returns the value of GameDuration.
func (s *MatchV5InfoDto) GetGameDuration() int64 {
	return s.GameDuration
}

// GetGameEndTimestamp returns the value of GameEndTimestamp.
func (s *MatchV5InfoDto) GetGameEndTimestamp() OptInt64 {
	return s.GameEndTimestamp
}

// GetGameId returns the value of GameId.
func (s *MatchV5InfoDto) GetGameId() int64 {
	return s.GameId
}

// GetGameMode returns the value of GameMode.
func (s *MatchV5InfoDto) GetGameMode() string {
	return s.GameMode
}

// GetGameName returns the value of GameName.
func (s *MatchV5InfoDto) GetGameName() string {
	return s.GameName
}

// GetGameStartTimestamp returns the value of GameStartTimestamp.
func (s *MatchV5InfoDto) GetGameStartTimestamp() int64 {
	return s.GameStartTimestamp
}

// GetGameType returns the value of GameType.
func (s *MatchV5InfoDto) GetGameType() string {
	return s.GameType
}

// GetGameVersion returns the value of GameVersion.
func (s *MatchV5InfoDto) GetGameVersion() string {
	return s.GameVersion
}

// GetMapId returns the value of MapId.
func (s *MatchV5InfoDto) GetMapId() int32 {
	return s.MapId
}

// GetParticipants returns the value of Participants.
func (s *MatchV5InfoDto) GetParticipants() []MatchV5ParticipantDto {
	return s.Participants
}

// GetPlatformId returns the value of PlatformId.
func (s *MatchV5InfoDto) GetPlatformId() string {
	return s.PlatformId
}

// GetQueueId returns the value of QueueId.
func (s *MatchV5InfoDto) GetQueueId() int32 {
	return s.QueueId
}

// GetTeams returns the value of Teams.
func (s *MatchV5InfoDto) GetTeams() []MatchV5TeamDto {
	return s.Teams
}

// GetTournamentCode returns the value of TournamentCode.
func (s *MatchV5InfoDto) GetTournamentCode() OptString {
	return s.TournamentCode
}

// GetGameModeMutators returns the value of GameModeMutators.
func (s *MatchV5InfoDto) GetGameModeMutators() []string {
	return s.GameModeMutators
}

// SetEndOfGameResult sets the value of EndOfGameResult.
func (s *MatchV5InfoDto) SetEndOfGameResult(val OptString) {
	s.EndOfGameResult = val
}

// SetGameCreation sets the value of GameCreation.
func (s *MatchV5InfoDto) SetGameCreation(val int64) {
	s.GameCreation = val
}

// SetGameDuration sets the value of GameDuration.
func (s *MatchV5InfoDto) SetGameDuration(val int64) {
	s.GameDuration = val
}

// SetGameEndTimestamp sets the value of GameEndTimestamp.
func (s *MatchV5InfoDto) SetGameEndTimestamp(val OptInt64) {
	s.GameEndTimestamp = val
}

// SetGameId sets the value of GameId.
func (s *MatchV5InfoDto) SetGameId(val int64) {
	s.GameId = val
}

// SetGameMode sets the value of GameMode.
func (s *MatchV5InfoDto) SetGameMode(val string) {
	s.GameMode = val
}

// SetGameName sets the value of GameName.
func (s *MatchV5InfoDto) SetGameName(val string) {
	s.GameName = val
}

// SetGameStartTimestamp sets the value of GameStartTimestamp.
func (s *MatchV5InfoDto) SetGameStartTimestamp(val int64) {
	s.GameStartTimestamp = val
}

// SetGameType sets the value of GameType.
func (s *MatchV5InfoDto) SetGameType(val string) {
	s.GameType = val
}

// SetGameVersion sets the value of GameVersion.
func (s *MatchV5InfoDto) SetGameVersion(val string) {
	s.GameVersion = val
}

// SetMapId sets the value of MapId.
func (s *MatchV5InfoDto) SetMapId(val int32) {
	s.MapId = val
}

// SetParticipants sets the value of Participants.
func (s *MatchV5InfoDto) SetParticipants(val []MatchV5ParticipantDto) {
	s.Participants = val
}

// SetPlatformId sets the value of PlatformId.
func (s *MatchV5InfoDto) SetPlatformId(val string) {
	s.PlatformId = val
}

// SetQueueId sets the value of QueueId.
func (s *MatchV5InfoDto) SetQueueId(val int32) {
	s.QueueId = val
}

// SetTeams sets the value of Teams.
func (s *MatchV5InfoDto) SetTeams(val []MatchV5TeamDto) {
	s.Teams = val
}

// SetTournamentCode sets the value of TournamentCode.
func (s *MatchV5InfoDto) SetTournamentCode(val OptString) {
	s.TournamentCode = val
}

// SetGameModeMutators sets the value of GameModeMutators.
func (s *MatchV5InfoDto) SetGameModeMutators(val []string) {
	s.GameModeMutators = val
}

// Ref: #/components/schemas/match-v5.InfoTimeLineDto
type MatchV5InfoTimeLineDto struct {
	// Refer to indicate if the game ended in termination.
	EndOfGameResult OptString                       `json:"endOfGameResult"`
	FrameInterval   int64                           `json:"frameInterval"`
	GameId          OptInt64                        `json:"gameId"`
	Participants    []MatchV5ParticipantTimeLineDto `json:"participants"`
	Frames          []MatchV5FramesTimeLineDto      `json:"frames"`
}

// GetEndOfGameResult returns the value of EndOfGameResult.
func (s *MatchV5InfoTimeLineDto) GetEndOfGameResult() OptString {
	return s.EndOfGameResult
}

// GetFrameInterval returns the value of FrameInterval.
func (s *MatchV5InfoTimeLineDto) GetFrameInterval() int64 {
	return s.FrameInterval
}

// GetGameId returns the value of GameId.
func (s *MatchV5InfoTimeLineDto) GetGameId() OptInt64 {
	return s.GameId
}

// GetParticipants returns the value of Participants.
func (s *MatchV5InfoTimeLineDto) GetParticipants() []MatchV5ParticipantTimeLineDto {
	return s.Participants
}

// GetFrames returns the value of Frames.
func (s *MatchV5InfoTimeLineDto) GetFrames() []MatchV5FramesTimeLineDto {
	return s.Frames
}

// SetEndOfGameResult sets the value of EndOfGameResult.
func (s *MatchV5InfoTimeLineDto) SetEndOfGameResult(val OptString) {
	s.EndOfGameResult = val
}

// SetFrameInterval sets the value of FrameInterval.
func (s *MatchV5InfoTimeLineDto) SetFrameInterval(val int64) {
	s.FrameInterval = val
}

// SetGameId sets the value of GameId.
func (s *MatchV5InfoTimeLineDto) SetGameId(val OptInt64) {
	s.GameId = val
}

// SetParticipants sets the value of Participants.
func (s *MatchV5InfoTimeLineDto) SetParticipants(val []MatchV5ParticipantTimeLineDto) {
	s.Participants = val
}

// SetFrames sets the value of Frames.
func (s *MatchV5InfoTimeLineDto) SetFrames(val []MatchV5FramesTimeLineDto) {
	s.Frames = val
}

// Ref: #/components/schemas/match-v5.MatchDto
type MatchV5MatchDto struct {
	// Match metadata.
	Metadata MatchV5MetadataDto `json:"metadata"`
	// Match info.
	Info MatchV5InfoDto `json:"info"`
}

// GetMetadata returns the value of Metadata.
func (s *MatchV5MatchDto) GetMetadata() MatchV5MetadataDto {
	return s.Metadata
}

// GetInfo returns the value of Info.
func (s *MatchV5MatchDto) GetInfo() MatchV5InfoDto {
	return s.Info
}

// SetMetadata sets the value of Metadata.
func (s *MatchV5MatchDto) SetMetadata(val MatchV5MetadataDto) {
	s.Metadata = val
}

// SetInfo sets the value of Info.
func (s *MatchV5MatchDto) SetInfo(val MatchV5InfoDto) {
	s.Info = val
}

func (*MatchV5MatchDto) lolRsoMatchV1GetMatchRes() {}
func (*MatchV5MatchDto) matchV5GetMatchRes()       {}

// Ref: #/components/schemas/match-v5.MatchTimelineVictimDamage
type MatchV5MatchTimelineVictimDamage struct {
	Basic          bool   `json:"basic"`
	MagicDamage    int32  `json:"magicDamage"`
	Name           string `json:"name"`
	ParticipantId  int32  `json:"participantId"`
	PhysicalDamage int32  `json:"physicalDamage"`
	SpellName      string `json:"spellName"`
	SpellSlot      int32  `json:"spellSlot"`
	TrueDamage     int32  `json:"trueDamage"`
	Type           string `json:"type"`
}

// GetBasic returns the value of Basic.
func (s *MatchV5MatchTimelineVictimDamage) GetBasic() bool {
	return s.Basic
}

// GetMagicDamage returns the value of MagicDamage.
func (s *MatchV5MatchTimelineVictimDamage) GetMagicDamage() int32 {
	return s.MagicDamage
}

// GetName returns the value of Name.
func (s *MatchV5MatchTimelineVictimDamage) GetName() string {
	return s.Name
}

// GetParticipantId returns the value of ParticipantId.
func (s *MatchV5MatchTimelineVictimDamage) GetParticipantId() int32 {
	return s.ParticipantId
}

// GetPhysicalDamage returns the value of PhysicalDamage.
func (s *MatchV5MatchTimelineVictimDamage) GetPhysicalDamage() int32 {
	return s.PhysicalDamage
}

// GetSpellName returns the value of SpellName.
func (s *MatchV5MatchTimelineVictimDamage) GetSpellName() string {
	return s.SpellName
}

// GetSpellSlot returns the value of SpellSlot.
func (s *MatchV5MatchTimelineVictimDamage) GetSpellSlot() int32 {
	return s.SpellSlot
}

// GetTrueDamage returns the value of TrueDamage.
func (s *MatchV5MatchTimelineVictimDamage) GetTrueDamage() int32 {
	return s.TrueDamage
}

// GetType returns the value of Type.
func (s *MatchV5MatchTimelineVictimDamage) GetType() string {
	return s.Type
}

// SetBasic sets the value of Basic.
func (s *MatchV5MatchTimelineVictimDamage) SetBasic(val bool) {
	s.Basic = val
}

// SetMagicDamage sets the value of MagicDamage.
func (s *MatchV5MatchTimelineVictimDamage) SetMagicDamage(val int32) {
	s.MagicDamage = val
}

// SetName sets the value of Name.
func (s *MatchV5MatchTimelineVictimDamage) SetName(val string) {
	s.Name = val
}

// SetParticipantId sets the value of ParticipantId.
func (s *MatchV5MatchTimelineVictimDamage) SetParticipantId(val int32) {
	s.ParticipantId = val
}

// SetPhysicalDamage sets the value of PhysicalDamage.
func (s *MatchV5MatchTimelineVictimDamage) SetPhysicalDamage(val int32) {
	s.PhysicalDamage = val
}

// SetSpellName sets the value of SpellName.
func (s *MatchV5MatchTimelineVictimDamage) SetSpellName(val string) {
	s.SpellName = val
}

// SetSpellSlot sets the value of SpellSlot.
func (s *MatchV5MatchTimelineVictimDamage) SetSpellSlot(val int32) {
	s.SpellSlot = val
}

// SetTrueDamage sets the value of TrueDamage.
func (s *MatchV5MatchTimelineVictimDamage) SetTrueDamage(val int32) {
	s.TrueDamage = val
}

// SetType sets the value of Type.
func (s *MatchV5MatchTimelineVictimDamage) SetType(val string) {
	s.Type = val
}

// Ref: #/components/schemas/match-v5.MetadataDto
type MatchV5MetadataDto struct {
	// Match data version.
	DataVersion string `json:"dataVersion"`
	// Match id.
	MatchId string `json:"matchId"`
	// A list of participant PUUIDs.
	Participants []string `json:"participants"`
}

// GetDataVersion returns the value of DataVersion.
func (s *MatchV5MetadataDto) GetDataVersion() string {
	return s.DataVersion
}

// GetMatchId returns the value of MatchId.
func (s *MatchV5MetadataDto) GetMatchId() string {
	return s.MatchId
}

// GetParticipants returns the value of Participants.
func (s *MatchV5MetadataDto) GetParticipants() []string {
	return s.Participants
}

// SetDataVersion sets the value of DataVersion.
func (s *MatchV5MetadataDto) SetDataVersion(val string) {
	s.DataVersion = val
}

// SetMatchId sets the value of MatchId.
func (s *MatchV5MetadataDto) SetMatchId(val string) {
	s.MatchId = val
}

// SetParticipants sets the value of Participants.
func (s *MatchV5MetadataDto) SetParticipants(val []string) {
	s.Participants = val
}

// Ref: #/components/schemas/match-v5.MetadataTimeLineDto
type MatchV5MetadataTimeLineDto struct {
	// Match data version.
	DataVersion string `json:"dataVersion"`
	// Match id.
	MatchId string `json:"matchId"`
	// A list of participant PUUIDs.
	Participants []string `json:"participants"`
}

// GetDataVersion returns the value of DataVersion.
func (s *MatchV5MetadataTimeLineDto) GetDataVersion() string {
	return s.DataVersion
}

// GetMatchId returns the value of MatchId.
func (s *MatchV5MetadataTimeLineDto) GetMatchId() string {
	return s.MatchId
}

// GetParticipants returns the value of Participants.
func (s *MatchV5MetadataTimeLineDto) GetParticipants() []string {
	return s.Participants
}

// SetDataVersion sets the value of DataVersion.
func (s *MatchV5MetadataTimeLineDto) SetDataVersion(val string) {
	s.DataVersion = val
}

// SetMatchId sets the value of MatchId.
func (s *MatchV5MetadataTimeLineDto) SetMatchId(val string) {
	s.MatchId = val
}

// SetParticipants sets the value of Participants.
func (s *MatchV5MetadataTimeLineDto) SetParticipants(val []string) {
	s.Participants = val
}

// Missions DTO.
// Ref: #/components/schemas/match-v5.MissionsDto
type MatchV5MissionsDto struct {
	PlayerScore0  OptFloat32 `json:"playerScore0"`
	PlayerScore1  OptFloat32 `json:"playerScore1"`
	PlayerScore2  OptFloat32 `json:"playerScore2"`
	PlayerScore3  OptFloat32 `json:"playerScore3"`
	PlayerScore4  OptFloat32 `json:"playerScore4"`
	PlayerScore5  OptFloat32 `json:"playerScore5"`
	PlayerScore6  OptFloat32 `json:"playerScore6"`
	PlayerScore7  OptFloat32 `json:"playerScore7"`
	PlayerScore8  OptFloat32 `json:"playerScore8"`
	PlayerScore9  OptFloat32 `json:"playerScore9"`
	PlayerScore10 OptFloat32 `json:"playerScore10"`
	PlayerScore11 OptFloat32 `json:"playerScore11"`
}

// GetPlayerScore0 returns the value of PlayerScore0.
func (s *MatchV5MissionsDto) GetPlayerScore0() OptFloat32 {
	return s.PlayerScore0
}

// GetPlayerScore1 returns the value of PlayerScore1.
func (s *MatchV5MissionsDto) GetPlayerScore1() OptFloat32 {
	return s.PlayerScore1
}

// GetPlayerScore2 returns the value of PlayerScore2.
func (s *MatchV5MissionsDto) GetPlayerScore2() OptFloat32 {
	return s.PlayerScore2
}

// GetPlayerScore3 returns the value of PlayerScore3.
func (s *MatchV5MissionsDto) GetPlayerScore3() OptFloat32 {
	return s.PlayerScore3
}

// GetPlayerScore4 returns the value of PlayerScore4.
func (s *MatchV5MissionsDto) GetPlayerScore4() OptFloat32 {
	return s.PlayerScore4
}

// GetPlayerScore5 returns the value of PlayerScore5.
func (s *MatchV5MissionsDto) GetPlayerScore5() OptFloat32 {
	return s.PlayerScore5
}

// GetPlayerScore6 returns the value of PlayerScore6.
func (s *MatchV5MissionsDto) GetPlayerScore6() OptFloat32 {
	return s.PlayerScore6
}

// GetPlayerScore7 returns the value of PlayerScore7.
func (s *MatchV5MissionsDto) GetPlayerScore7() OptFloat32 {
	return s.PlayerScore7
}

// GetPlayerScore8 returns the value of PlayerScore8.
func (s *MatchV5MissionsDto) GetPlayerScore8() OptFloat32 {
	return s.PlayerScore8
}

// GetPlayerScore9 returns the value of PlayerScore9.
func (s *MatchV5MissionsDto) GetPlayerScore9() OptFloat32 {
	return s.PlayerScore9
}

// GetPlayerScore10 returns the value of PlayerScore10.
func (s *MatchV5MissionsDto) GetPlayerScore10() OptFloat32 {
	return s.PlayerScore10
}

// GetPlayerScore11 returns the value of PlayerScore11.
func (s *MatchV5MissionsDto) GetPlayerScore11() OptFloat32 {
	return s.PlayerScore11
}

// SetPlayerScore0 sets the value of PlayerScore0.
func (s *MatchV5MissionsDto) SetPlayerScore0(val OptFloat32) {
	s.PlayerScore0 = val
}

// SetPlayerScore1 sets the value of PlayerScore1.
func (s *MatchV5MissionsDto) SetPlayerScore1(val OptFloat32) {
	s.PlayerScore1 = val
}

// SetPlayerScore2 sets the value of PlayerScore2.
func (s *MatchV5MissionsDto) SetPlayerScore2(val OptFloat32) {
	s.PlayerScore2 = val
}

// SetPlayerScore3 sets the value of PlayerScore3.
func (s *MatchV5MissionsDto) SetPlayerScore3(val OptFloat32) {
	s.PlayerScore3 = val
}

// SetPlayerScore4 sets the value of PlayerScore4.
func (s *MatchV5MissionsDto) SetPlayerScore4(val OptFloat32) {
	s.PlayerScore4 = val
}

// SetPlayerScore5 sets the value of PlayerScore5.
func (s *MatchV5MissionsDto) SetPlayerScore5(val OptFloat32) {
	s.PlayerScore5 = val
}

// SetPlayerScore6 sets the value of PlayerScore6.
func (s *MatchV5MissionsDto) SetPlayerScore6(val OptFloat32) {
	s.PlayerScore6 = val
}

// SetPlayerScore7 sets the value of PlayerScore7.
func (s *MatchV5MissionsDto) SetPlayerScore7(val OptFloat32) {
	s.PlayerScore7 = val
}

// SetPlayerScore8 sets the value of PlayerScore8.
func (s *MatchV5MissionsDto) SetPlayerScore8(val OptFloat32) {
	s.PlayerScore8 = val
}

// SetPlayerScore9 sets the value of PlayerScore9.
func (s *MatchV5MissionsDto) SetPlayerScore9(val OptFloat32) {
	s.PlayerScore9 = val
}

// SetPlayerScore10 sets the value of PlayerScore10.
func (s *MatchV5MissionsDto) SetPlayerScore10(val OptFloat32) {
	s.PlayerScore10 = val
}

// SetPlayerScore11 sets the value of PlayerScore11.
func (s *MatchV5MissionsDto) SetPlayerScore11(val OptFloat32) {
	s.PlayerScore11 = val
}

// Ref: #/components/schemas/match-v5.ObjectiveDto
type MatchV5ObjectiveDto struct {
	First bool  `json:"first"`
	Kills int32 `json:"kills"`
}

// GetFirst returns the value of First.
func (s *MatchV5ObjectiveDto) GetFirst() bool {
	return s.First
}

// GetKills returns the value of Kills.
func (s *MatchV5ObjectiveDto) GetKills() int32 {
	return s.Kills
}

// SetFirst sets the value of First.
func (s *MatchV5ObjectiveDto) SetFirst(val bool) {
	s.First = val
}

// SetKills sets the value of Kills.
func (s *MatchV5ObjectiveDto) SetKills(val int32) {
	s.Kills = val
}

// Ref: #/components/schemas/match-v5.ObjectivesDto
type MatchV5ObjectivesDto struct {
	Baron      MatchV5ObjectiveDto    `json:"baron"`
	Champion   MatchV5ObjectiveDto    `json:"champion"`
	Dragon     MatchV5ObjectiveDto    `json:"dragon"`
	Horde      OptMatchV5ObjectiveDto `json:"horde"`
	Inhibitor  MatchV5ObjectiveDto    `json:"inhibitor"`
	RiftHerald MatchV5ObjectiveDto    `json:"riftHerald"`
	Tower      MatchV5ObjectiveDto    `json:"tower"`
	Atakhan    OptMatchV5ObjectiveDto `json:"atakhan"`
}

// GetBaron returns the value of Baron.
func (s *MatchV5ObjectivesDto) GetBaron() MatchV5ObjectiveDto {
	return s.Baron
}

// GetChampion returns the value of Champion.
func (s *MatchV5ObjectivesDto) GetChampion() MatchV5ObjectiveDto {
	return s.Champion
}

// GetDragon returns the value of Dragon.
func (s *MatchV5ObjectivesDto) GetDragon() MatchV5ObjectiveDto {
	return s.Dragon
}

// GetHorde returns the value of Horde.
func (s *MatchV5ObjectivesDto) GetHorde() OptMatchV5ObjectiveDto {
	return s.Horde
}

// GetInhibitor returns the value of Inhibitor.
func (s *MatchV5ObjectivesDto) GetInhibitor() MatchV5ObjectiveDto {
	return s.Inhibitor
}

// GetRiftHerald returns the value of RiftHerald.
func (s *MatchV5ObjectivesDto) GetRiftHerald() MatchV5ObjectiveDto {
	return s.RiftHerald
}

// GetTower returns the value of Tower.
func (s *MatchV5ObjectivesDto) GetTower() MatchV5ObjectiveDto {
	return s.Tower
}

// GetAtakhan returns the value of Atakhan.
func (s *MatchV5ObjectivesDto) GetAtakhan() OptMatchV5ObjectiveDto {
	return s.Atakhan
}

// SetBaron sets the value of Baron.
func (s *MatchV5ObjectivesDto) SetBaron(val MatchV5ObjectiveDto) {
	s.Baron = val
}

// SetChampion sets the value of Champion.
func (s *MatchV5ObjectivesDto) SetChampion(val MatchV5ObjectiveDto) {
	s.Champion = val
}

// SetDragon sets the value of Dragon.
func (s *MatchV5ObjectivesDto) SetDragon(val MatchV5ObjectiveDto) {
	s.Dragon = val
}

// SetHorde sets the value of Horde.
func (s *MatchV5ObjectivesDto) SetHorde(val OptMatchV5ObjectiveDto) {
	s.Horde = val
}

// SetInhibitor sets the value of Inhibitor.
func (s *MatchV5ObjectivesDto) SetInhibitor(val MatchV5ObjectiveDto) {
	s.Inhibitor = val
}

// SetRiftHerald sets the value of RiftHerald.
func (s *MatchV5ObjectivesDto) SetRiftHerald(val MatchV5ObjectiveDto) {
	s.RiftHerald = val
}

// SetTower sets the value of Tower.
func (s *MatchV5ObjectivesDto) SetTower(val MatchV5ObjectiveDto) {
	s.Tower = val
}

// SetAtakhan sets the value of Atakhan.
func (s *MatchV5ObjectivesDto) SetAtakhan(val OptMatchV5ObjectiveDto) {
	s.Atakhan = val
}

// Ref: #/components/schemas/match-v5.ParticipantDto
type MatchV5ParticipantDto struct {
	// Yellow crossed swords.
	AllInPings OptInt32 `json:"allInPings"`
	// Green flag.
	AssistMePings   OptInt32 `json:"assistMePings"`
	Assists         int32    `json:"assists"`
	BaronKills      int32    `json:"baronKills"`
	BountyLevel     OptInt32 `json:"bountyLevel"`
	ChampExperience int32    `json:"champExperience"`
	ChampLevel      int32    `json:"champLevel"`
	// Prior to patch 11.4, on Feb 18th, 2021, this field returned invalid championIds. We recommend
	// determining the champion based on the championName field for matches played prior to patch 11.4.
	ChampionId   int32  `json:"championId"`
	ChampionName string `json:"championName"`
	// Blue generic ping (ALT+click).
	CommandPings OptInt32 `json:"commandPings"`
	// This field is currently only utilized for Kayn's transformations. (Legal values: 0 - None, 1 -
	// Slayer, 2 - Assassin).
	ChampionTransform       int32                   `json:"championTransform"`
	ConsumablesPurchased    int32                   `json:"consumablesPurchased"`
	Challenges              OptMatchV5ChallengesDto `json:"challenges"`
	DamageDealtToBuildings  OptInt32                `json:"damageDealtToBuildings"`
	DamageDealtToObjectives int32                   `json:"damageDealtToObjectives"`
	DamageDealtToTurrets    int32                   `json:"damageDealtToTurrets"`
	DamageSelfMitigated     int32                   `json:"damageSelfMitigated"`
	Deaths                  int32                   `json:"deaths"`
	DetectorWardsPlaced     int32                   `json:"detectorWardsPlaced"`
	DoubleKills             int32                   `json:"doubleKills"`
	DragonKills             int32                   `json:"dragonKills"`
	EligibleForProgression  OptBool                 `json:"eligibleForProgression"`
	// Yellow questionmark.
	EnemyMissingPings OptInt32 `json:"enemyMissingPings"`
	// Red eyeball.
	EnemyVisionPings OptInt32 `json:"enemyVisionPings"`
	FirstBloodAssist bool     `json:"firstBloodAssist"`
	FirstBloodKill   bool     `json:"firstBloodKill"`
	FirstTowerAssist bool     `json:"firstTowerAssist"`
	FirstTowerKill   bool     `json:"firstTowerKill"`
	// This is an offshoot of the OneStone challenge. The code checks if a spell with the same instance
	// ID does the final point of damage to at least 2 Champions. It doesn't matter if they're enemies,
	// but you cannot hurt your friends.
	GameEndedInEarlySurrender bool     `json:"gameEndedInEarlySurrender"`
	GameEndedInSurrender      bool     `json:"gameEndedInSurrender"`
	HoldPings                 OptInt32 `json:"holdPings"`
	// Yellow circle with horizontal line.
	GetBackPings OptInt32 `json:"getBackPings"`
	GoldEarned   int32    `json:"goldEarned"`
	GoldSpent    int32    `json:"goldSpent"`
	// Both individualPosition and teamPosition are computed by the game server and are different
	// versions of the most likely position played by a player. The individualPosition is the best guess
	// for which position the player actually played in isolation of anything else. The teamPosition is
	// the best guess for which position the player actually played if we add the constraint that each
	// team must have one top player, one jungle, one middle, etc. Generally the recommendation is to use
	// the teamPosition field over the individualPosition field.
	IndividualPosition          string                `json:"individualPosition"`
	InhibitorKills              int32                 `json:"inhibitorKills"`
	InhibitorTakedowns          OptInt32              `json:"inhibitorTakedowns"`
	InhibitorsLost              OptInt32              `json:"inhibitorsLost"`
	Item0                       int32                 `json:"item0"`
	Item1                       int32                 `json:"item1"`
	Item2                       int32                 `json:"item2"`
	Item3                       int32                 `json:"item3"`
	Item4                       int32                 `json:"item4"`
	Item5                       int32                 `json:"item5"`
	Item6                       int32                 `json:"item6"`
	ItemsPurchased              int32                 `json:"itemsPurchased"`
	KillingSprees               int32                 `json:"killingSprees"`
	Kills                       int32                 `json:"kills"`
	Lane                        string                `json:"lane"`
	LargestCriticalStrike       int32                 `json:"largestCriticalStrike"`
	LargestKillingSpree         int32                 `json:"largestKillingSpree"`
	LargestMultiKill            int32                 `json:"largestMultiKill"`
	LongestTimeSpentLiving      int32                 `json:"longestTimeSpentLiving"`
	MagicDamageDealt            int32                 `json:"magicDamageDealt"`
	MagicDamageDealtToChampions int32                 `json:"magicDamageDealtToChampions"`
	MagicDamageTaken            int32                 `json:"magicDamageTaken"`
	Missions                    OptMatchV5MissionsDto `json:"missions"`
	// NeutralMinionsKilled = mNeutralMinionsKilled, which is incremented on kills of kPet and
	// kJungleMonster.
	NeutralMinionsKilled int32 `json:"neutralMinionsKilled"`
	// Green ward.
	NeedVisionPings         OptInt32 `json:"needVisionPings"`
	NexusKills              int32    `json:"nexusKills"`
	NexusTakedowns          OptInt32 `json:"nexusTakedowns"`
	NexusLost               OptInt32 `json:"nexusLost"`
	ObjectivesStolen        int32    `json:"objectivesStolen"`
	ObjectivesStolenAssists int32    `json:"objectivesStolenAssists"`
	// Blue arrow pointing at ground.
	OnMyWayPings                   OptInt32        `json:"onMyWayPings"`
	ParticipantId                  int32           `json:"participantId"`
	PlayerScore0                   OptFloat32      `json:"playerScore0"`
	PlayerScore1                   OptFloat32      `json:"playerScore1"`
	PlayerScore2                   OptFloat32      `json:"playerScore2"`
	PlayerScore3                   OptFloat32      `json:"playerScore3"`
	PlayerScore4                   OptFloat32      `json:"playerScore4"`
	PlayerScore5                   OptFloat32      `json:"playerScore5"`
	PlayerScore6                   OptFloat32      `json:"playerScore6"`
	PlayerScore7                   OptFloat32      `json:"playerScore7"`
	PlayerScore8                   OptFloat32      `json:"playerScore8"`
	PlayerScore9                   OptFloat32      `json:"playerScore9"`
	PlayerScore10                  OptFloat32      `json:"playerScore10"`
	PlayerScore11                  OptFloat32      `json:"playerScore11"`
	PentaKills                     int32           `json:"pentaKills"`
	Perks                          MatchV5PerksDto `json:"perks"`
	PhysicalDamageDealt            int32           `json:"physicalDamageDealt"`
	PhysicalDamageDealtToChampions int32           `json:"physicalDamageDealtToChampions"`
	PhysicalDamageTaken            int32           `json:"physicalDamageTaken"`
	Placement                      OptInt32        `json:"placement"`
	PlayerAugment1                 OptInt32        `json:"playerAugment1"`
	PlayerAugment2                 OptInt32        `json:"playerAugment2"`
	PlayerAugment3                 OptInt32        `json:"playerAugment3"`
	PlayerAugment4                 OptInt32        `json:"playerAugment4"`
	PlayerSubteamId                OptInt32        `json:"playerSubteamId"`
	// Green minion.
	PushPings              OptInt32  `json:"pushPings"`
	ProfileIcon            int32     `json:"profileIcon"`
	Puuid                  string    `json:"puuid"`
	QuadraKills            int32     `json:"quadraKills"`
	RiotIdGameName         OptString `json:"riotIdGameName"`
	RiotIdTagline          OptString `json:"riotIdTagline"`
	Role                   string    `json:"role"`
	SightWardsBoughtInGame int32     `json:"sightWardsBoughtInGame"`
	Spell1Casts            int32     `json:"spell1Casts"`
	Spell2Casts            int32     `json:"spell2Casts"`
	Spell3Casts            int32     `json:"spell3Casts"`
	Spell4Casts            int32     `json:"spell4Casts"`
	SubteamPlacement       OptInt32  `json:"subteamPlacement"`
	Summoner1Casts         int32     `json:"summoner1Casts"`
	Summoner1Id            int32     `json:"summoner1Id"`
	Summoner2Casts         int32     `json:"summoner2Casts"`
	Summoner2Id            int32     `json:"summoner2Id"`
	SummonerId             string    `json:"summonerId"`
	SummonerLevel          int32     `json:"summonerLevel"`
	SummonerName           string    `json:"summonerName"`
	TeamEarlySurrendered   bool      `json:"teamEarlySurrendered"`
	TeamId                 int32     `json:"teamId"`
	// Both individualPosition and teamPosition are computed by the game server and are different
	// versions of the most likely position played by a player. The individualPosition is the best guess
	// for which position the player actually played in isolation of anything else. The teamPosition is
	// the best guess for which position the player actually played if we add the constraint that each
	// team must have one top player, one jungle, one middle, etc. Generally the recommendation is to use
	// the teamPosition field over the individualPosition field.
	TeamPosition                   string   `json:"teamPosition"`
	TimeCCingOthers                int32    `json:"timeCCingOthers"`
	TimePlayed                     int32    `json:"timePlayed"`
	TotalAllyJungleMinionsKilled   OptInt32 `json:"totalAllyJungleMinionsKilled"`
	TotalDamageDealt               int32    `json:"totalDamageDealt"`
	TotalDamageDealtToChampions    int32    `json:"totalDamageDealtToChampions"`
	TotalDamageShieldedOnTeammates int32    `json:"totalDamageShieldedOnTeammates"`
	TotalDamageTaken               int32    `json:"totalDamageTaken"`
	TotalEnemyJungleMinionsKilled  OptInt32 `json:"totalEnemyJungleMinionsKilled"`
	// Whenever positive health is applied (which translates to all heals in the game but not things like
	// regeneration), totalHeal is incremented by the amount of health received. This includes healing
	// enemies, jungle monsters, yourself, etc.
	TotalHeal int32 `json:"totalHeal"`
	// Whenever positive health is applied (which translates to all heals in the game but not things like
	// regeneration), totalHealsOnTeammates is incremented by the amount of health received.  This is
	// post modified, so if you heal someone missing 5 health for 100 you will get +5
	// totalHealsOnTeammates.
	TotalHealsOnTeammates int32 `json:"totalHealsOnTeammates"`
	// TotalMillionsKilled = mMinionsKilled, which is only incremented on kills of kTeamMinion,
	// kMeleeLaneMinion, kSuperLaneMinion, kRangedLaneMinion and kSiegeLaneMinion.
	TotalMinionsKilled         int32    `json:"totalMinionsKilled"`
	TotalTimeCCDealt           int32    `json:"totalTimeCCDealt"`
	TotalTimeSpentDead         int32    `json:"totalTimeSpentDead"`
	TotalUnitsHealed           int32    `json:"totalUnitsHealed"`
	TripleKills                int32    `json:"tripleKills"`
	TrueDamageDealt            int32    `json:"trueDamageDealt"`
	TrueDamageDealtToChampions int32    `json:"trueDamageDealtToChampions"`
	TrueDamageTaken            int32    `json:"trueDamageTaken"`
	TurretKills                int32    `json:"turretKills"`
	TurretTakedowns            OptInt32 `json:"turretTakedowns"`
	TurretsLost                OptInt32 `json:"turretsLost"`
	UnrealKills                int32    `json:"unrealKills"`
	VisionScore                int32    `json:"visionScore"`
	VisionClearedPings         OptInt32 `json:"visionClearedPings"`
	VisionWardsBoughtInGame    int32    `json:"visionWardsBoughtInGame"`
	WardsKilled                int32    `json:"wardsKilled"`
	WardsPlaced                int32    `json:"wardsPlaced"`
	Win                        bool     `json:"win"`
	BaitPings                  OptInt32 `json:"baitPings"`
	// Https://github.com/RiotGames/developer-relations/issues/870.
	DangerPings OptInt32 `json:"dangerPings"`
	// Https://github.com/RiotGames/developer-relations/issues/814.
	BasicPings     OptInt32 `json:"basicPings"`
	PlayerAugment5 OptInt32 `json:"playerAugment5"`
	PlayerAugment6 OptInt32 `json:"playerAugment6"`
	// Deprecated, use `riotIdGameName`. This field name was briefly used instead of `riotIdGameName`,
	// prior to patch 14.5.
	RiotIdName OptString `json:"riotIdName"`
	// Https://github.com/RiotGames/developer-relations/issues/814.
	RetreatPings   OptInt32 `json:"retreatPings"`
	ChampionSkinId OptInt32 `json:"championSkinId"`
}

// GetAllInPings returns the value of AllInPings.
func (s *MatchV5ParticipantDto) GetAllInPings() OptInt32 {
	return s.AllInPings
}

// GetAssistMePings returns the value of AssistMePings.
func (s *MatchV5ParticipantDto) GetAssistMePings() OptInt32 {
	return s.AssistMePings
}

// GetAssists returns the value of Assists.
func (s *MatchV5ParticipantDto) GetAssists() int32 {
	return s.Assists
}

// GetBaronKills returns the value of BaronKills.
func (s *MatchV5ParticipantDto) GetBaronKills() int32 {
	return s.BaronKills
}

// GetBountyLevel returns the value of BountyLevel.
func (s *MatchV5ParticipantDto) GetBountyLevel() OptInt32 {
	return s.BountyLevel
}

// GetChampExperience returns the value of ChampExperience.
func (s *MatchV5ParticipantDto) GetChampExperience() int32 {
	return s.ChampExperience
}

// GetChampLevel returns the value of ChampLevel.
func (s *MatchV5ParticipantDto) GetChampLevel() int32 {
	return s.ChampLevel
}

// GetChampionId returns the value of ChampionId.
func (s *MatchV5ParticipantDto) GetChampionId() int32 {
	return s.ChampionId
}

// GetChampionName returns the value of ChampionName.
func (s *MatchV5ParticipantDto) GetChampionName() string {
	return s.ChampionName
}

// GetCommandPings returns the value of CommandPings.
func (s *MatchV5ParticipantDto) GetCommandPings() OptInt32 {
	return s.CommandPings
}

// GetChampionTransform returns the value of ChampionTransform.
func (s *MatchV5ParticipantDto) GetChampionTransform() int32 {
	return s.ChampionTransform
}

// GetConsumablesPurchased returns the value of ConsumablesPurchased.
func (s *MatchV5ParticipantDto) GetConsumablesPurchased() int32 {
	return s.ConsumablesPurchased
}

// GetChallenges returns the value of Challenges.
func (s *MatchV5ParticipantDto) GetChallenges() OptMatchV5ChallengesDto {
	return s.Challenges
}

// GetDamageDealtToBuildings returns the value of DamageDealtToBuildings.
func (s *MatchV5ParticipantDto) GetDamageDealtToBuildings() OptInt32 {
	return s.DamageDealtToBuildings
}

// GetDamageDealtToObjectives returns the value of DamageDealtToObjectives.
func (s *MatchV5ParticipantDto) GetDamageDealtToObjectives() int32 {
	return s.DamageDealtToObjectives
}

// GetDamageDealtToTurrets returns the value of DamageDealtToTurrets.
func (s *MatchV5ParticipantDto) GetDamageDealtToTurrets() int32 {
	return s.DamageDealtToTurrets
}

// GetDamageSelfMitigated returns the value of DamageSelfMitigated.
func (s *MatchV5ParticipantDto) GetDamageSelfMitigated() int32 {
	return s.DamageSelfMitigated
}

// GetDeaths returns the value of Deaths.
func (s *MatchV5ParticipantDto) GetDeaths() int32 {
	return s.Deaths
}

// GetDetectorWardsPlaced returns the value of DetectorWardsPlaced.
func (s *MatchV5ParticipantDto) GetDetectorWardsPlaced() int32 {
	return s.DetectorWardsPlaced
}

// GetDoubleKills returns the value of DoubleKills.
func (s *MatchV5ParticipantDto) GetDoubleKills() int32 {
	return s.DoubleKills
}

// GetDragonKills returns the value of DragonKills.
func (s *MatchV5ParticipantDto) GetDragonKills() int32 {
	return s.DragonKills
}

// GetEligibleForProgression returns the value of EligibleForProgression.
func (s *MatchV5ParticipantDto) GetEligibleForProgression() OptBool {
	return s.EligibleForProgression
}

// GetEnemyMissingPings returns the value of EnemyMissingPings.
func (s *MatchV5ParticipantDto) GetEnemyMissingPings() OptInt32 {
	return s.EnemyMissingPings
}

// GetEnemyVisionPings returns the value of EnemyVisionPings.
func (s *MatchV5ParticipantDto) GetEnemyVisionPings() OptInt32 {
	return s.EnemyVisionPings
}

// GetFirstBloodAssist returns the value of FirstBloodAssist.
func (s *MatchV5ParticipantDto) GetFirstBloodAssist() bool {
	return s.FirstBloodAssist
}

// GetFirstBloodKill returns the value of FirstBloodKill.
func (s *MatchV5ParticipantDto) GetFirstBloodKill() bool {
	return s.FirstBloodKill
}

// GetFirstTowerAssist returns the value of FirstTowerAssist.
func (s *MatchV5ParticipantDto) GetFirstTowerAssist() bool {
	return s.FirstTowerAssist
}

// GetFirstTowerKill returns the value of FirstTowerKill.
func (s *MatchV5ParticipantDto) GetFirstTowerKill() bool {
	return s.FirstTowerKill
}

// GetGameEndedInEarlySurrender returns the value of GameEndedInEarlySurrender.
func (s *MatchV5ParticipantDto) GetGameEndedInEarlySurrender() bool {
	return s.GameEndedInEarlySurrender
}

// GetGameEndedInSurrender returns the value of GameEndedInSurrender.
func (s *MatchV5ParticipantDto) GetGameEndedInSurrender() bool {
	return s.GameEndedInSurrender
}

// GetHoldPings returns the value of HoldPings.
func (s *MatchV5ParticipantDto) GetHoldPings() OptInt32 {
	return s.HoldPings
}

// GetGetBackPings returns the value of GetBackPings.
func (s *MatchV5ParticipantDto) GetGetBackPings() OptInt32 {
	return s.GetBackPings
}

// GetGoldEarned returns the value of GoldEarned.
func (s *MatchV5ParticipantDto) GetGoldEarned() int32 {
	return s.GoldEarned
}

// GetGoldSpent returns the value of GoldSpent.
func (s *MatchV5ParticipantDto) GetGoldSpent() int32 {
	return s.GoldSpent
}

// GetIndividualPosition returns the value of IndividualPosition.
func (s *MatchV5ParticipantDto) GetIndividualPosition() string {
	return s.IndividualPosition
}

// GetInhibitorKills returns the value of InhibitorKills.
func (s *MatchV5ParticipantDto) GetInhibitorKills() int32 {
	return s.InhibitorKills
}

// GetInhibitorTakedowns returns the value of InhibitorTakedowns.
func (s *MatchV5ParticipantDto) GetInhibitorTakedowns() OptInt32 {
	return s.InhibitorTakedowns
}

// GetInhibitorsLost returns the value of InhibitorsLost.
func (s *MatchV5ParticipantDto) GetInhibitorsLost() OptInt32 {
	return s.InhibitorsLost
}

// GetItem0 returns the value of Item0.
func (s *MatchV5ParticipantDto) GetItem0() int32 {
	return s.Item0
}

// GetItem1 returns the value of Item1.
func (s *MatchV5ParticipantDto) GetItem1() int32 {
	return s.Item1
}

// GetItem2 returns the value of Item2.
func (s *MatchV5ParticipantDto) GetItem2() int32 {
	return s.Item2
}

// GetItem3 returns the value of Item3.
func (s *MatchV5ParticipantDto) GetItem3() int32 {
	return s.Item3
}

// GetItem4 returns the value of Item4.
func (s *MatchV5ParticipantDto) GetItem4() int32 {
	return s.Item4
}

// GetItem5 returns the value of Item5.
func (s *MatchV5ParticipantDto) GetItem5() int32 {
	return s.Item5
}

// GetItem6 returns the value of Item6.
func (s *MatchV5ParticipantDto) GetItem6() int32 {
	return s.Item6
}

// GetItemsPurchased returns the value of ItemsPurchased.
func (s *MatchV5ParticipantDto) GetItemsPurchased() int32 {
	return s.ItemsPurchased
}

// GetKillingSprees returns the value of KillingSprees.
func (s *MatchV5ParticipantDto) GetKillingSprees() int32 {
	return s.KillingSprees
}

// GetKills returns the value of Kills.
func (s *MatchV5ParticipantDto) GetKills() int32 {
	return s.Kills
}

// GetLane returns the value of Lane.
func (s *MatchV5ParticipantDto) GetLane() string {
	return s.Lane
}

// GetLargestCriticalStrike returns the value of LargestCriticalStrike.
func (s *MatchV5ParticipantDto) GetLargestCriticalStrike() int32 {
	return s.LargestCriticalStrike
}

// GetLargestKillingSpree returns the value of LargestKillingSpree.
func (s *MatchV5ParticipantDto) GetLargestKillingSpree() int32 {
	return s.LargestKillingSpree
}

// GetLargestMultiKill returns the value of LargestMultiKill.
func (s *MatchV5ParticipantDto) GetLargestMultiKill() int32 {
	return s.LargestMultiKill
}

// GetLongestTimeSpentLiving returns the value of LongestTimeSpentLiving.
func (s *MatchV5ParticipantDto) GetLongestTimeSpentLiving() int32 {
	return s.LongestTimeSpentLiving
}

// GetMagicDamageDealt returns the value of MagicDamageDealt.
func (s *MatchV5ParticipantDto) GetMagicDamageDealt() int32 {
	return s.MagicDamageDealt
}

// GetMagicDamageDealtToChampions returns the value of MagicDamageDealtToChampions.
func (s *MatchV5ParticipantDto) GetMagicDamageDealtToChampions() int32 {
	return s.MagicDamageDealtToChampions
}

// GetMagicDamageTaken returns the value of MagicDamageTaken.
func (s *MatchV5ParticipantDto) GetMagicDamageTaken() int32 {
	return s.MagicDamageTaken
}

// GetMissions returns the value of Missions.
func (s *MatchV5ParticipantDto) GetMissions() OptMatchV5MissionsDto {
	return s.Missions
}

// GetNeutralMinionsKilled returns the value of NeutralMinionsKilled.
func (s *MatchV5ParticipantDto) GetNeutralMinionsKilled() int32 {
	return s.NeutralMinionsKilled
}

// GetNeedVisionPings returns the value of NeedVisionPings.
func (s *MatchV5ParticipantDto) GetNeedVisionPings() OptInt32 {
	return s.NeedVisionPings
}

// GetNexusKills returns the value of NexusKills.
func (s *MatchV5ParticipantDto) GetNexusKills() int32 {
	return s.NexusKills
}

// GetNexusTakedowns returns the value of NexusTakedowns.
func (s *MatchV5ParticipantDto) GetNexusTakedowns() OptInt32 {
	return s.NexusTakedowns
}

// GetNexusLost returns the value of NexusLost.
func (s *MatchV5ParticipantDto) GetNexusLost() OptInt32 {
	return s.NexusLost
}

// GetObjectivesStolen returns the value of ObjectivesStolen.
func (s *MatchV5ParticipantDto) GetObjectivesStolen() int32 {
	return s.ObjectivesStolen
}

// GetObjectivesStolenAssists returns the value of ObjectivesStolenAssists.
func (s *MatchV5ParticipantDto) GetObjectivesStolenAssists() int32 {
	return s.ObjectivesStolenAssists
}

// GetOnMyWayPings returns the value of OnMyWayPings.
func (s *MatchV5ParticipantDto) GetOnMyWayPings() OptInt32 {
	return s.OnMyWayPings
}

// GetParticipantId returns the value of ParticipantId.
func (s *MatchV5ParticipantDto) GetParticipantId() int32 {
	return s.ParticipantId
}

// GetPlayerScore0 returns the value of PlayerScore0.
func (s *MatchV5ParticipantDto) GetPlayerScore0() OptFloat32 {
	return s.PlayerScore0
}

// GetPlayerScore1 returns the value of PlayerScore1.
func (s *MatchV5ParticipantDto) GetPlayerScore1() OptFloat32 {
	return s.PlayerScore1
}

// GetPlayerScore2 returns the value of PlayerScore2.
func (s *MatchV5ParticipantDto) GetPlayerScore2() OptFloat32 {
	return s.PlayerScore2
}

// GetPlayerScore3 returns the value of PlayerScore3.
func (s *MatchV5ParticipantDto) GetPlayerScore3() OptFloat32 {
	return s.PlayerScore3
}

// GetPlayerScore4 returns the value of PlayerScore4.
func (s *MatchV5ParticipantDto) GetPlayerScore4() OptFloat32 {
	return s.PlayerScore4
}

// GetPlayerScore5 returns the value of PlayerScore5.
func (s *MatchV5ParticipantDto) GetPlayerScore5() OptFloat32 {
	return s.PlayerScore5
}

// GetPlayerScore6 returns the value of PlayerScore6.
func (s *MatchV5ParticipantDto) GetPlayerScore6() OptFloat32 {
	return s.PlayerScore6
}

// GetPlayerScore7 returns the value of PlayerScore7.
func (s *MatchV5ParticipantDto) GetPlayerScore7() OptFloat32 {
	return s.PlayerScore7
}

// GetPlayerScore8 returns the value of PlayerScore8.
func (s *MatchV5ParticipantDto) GetPlayerScore8() OptFloat32 {
	return s.PlayerScore8
}

// GetPlayerScore9 returns the value of PlayerScore9.
func (s *MatchV5ParticipantDto) GetPlayerScore9() OptFloat32 {
	return s.PlayerScore9
}

// GetPlayerScore10 returns the value of PlayerScore10.
func (s *MatchV5ParticipantDto) GetPlayerScore10() OptFloat32 {
	return s.PlayerScore10
}

// GetPlayerScore11 returns the value of PlayerScore11.
func (s *MatchV5ParticipantDto) GetPlayerScore11() OptFloat32 {
	return s.PlayerScore11
}

// GetPentaKills returns the value of PentaKills.
func (s *MatchV5ParticipantDto) GetPentaKills() int32 {
	return s.PentaKills
}

// GetPerks returns the value of Perks.
func (s *MatchV5ParticipantDto) GetPerks() MatchV5PerksDto {
	return s.Perks
}

// GetPhysicalDamageDealt returns the value of PhysicalDamageDealt.
func (s *MatchV5ParticipantDto) GetPhysicalDamageDealt() int32 {
	return s.PhysicalDamageDealt
}

// GetPhysicalDamageDealtToChampions returns the value of PhysicalDamageDealtToChampions.
func (s *MatchV5ParticipantDto) GetPhysicalDamageDealtToChampions() int32 {
	return s.PhysicalDamageDealtToChampions
}

// GetPhysicalDamageTaken returns the value of PhysicalDamageTaken.
func (s *MatchV5ParticipantDto) GetPhysicalDamageTaken() int32 {
	return s.PhysicalDamageTaken
}

// GetPlacement returns the value of Placement.
func (s *MatchV5ParticipantDto) GetPlacement() OptInt32 {
	return s.Placement
}

// GetPlayerAugment1 returns the value of PlayerAugment1.
func (s *MatchV5ParticipantDto) GetPlayerAugment1() OptInt32 {
	return s.PlayerAugment1
}

// GetPlayerAugment2 returns the value of PlayerAugment2.
func (s *MatchV5ParticipantDto) GetPlayerAugment2() OptInt32 {
	return s.PlayerAugment2
}

// GetPlayerAugment3 returns the value of PlayerAugment3.
func (s *MatchV5ParticipantDto) GetPlayerAugment3() OptInt32 {
	return s.PlayerAugment3
}

// GetPlayerAugment4 returns the value of PlayerAugment4.
func (s *MatchV5ParticipantDto) GetPlayerAugment4() OptInt32 {
	return s.PlayerAugment4
}

// GetPlayerSubteamId returns the value of PlayerSubteamId.
func (s *MatchV5ParticipantDto) GetPlayerSubteamId() OptInt32 {
	return s.PlayerSubteamId
}

// GetPushPings returns the value of PushPings.
func (s *MatchV5ParticipantDto) GetPushPings() OptInt32 {
	return s.PushPings
}

// GetProfileIcon returns the value of ProfileIcon.
func (s *MatchV5ParticipantDto) GetProfileIcon() int32 {
	return s.ProfileIcon
}

// GetPuuid returns the value of Puuid.
func (s *MatchV5ParticipantDto) GetPuuid() string {
	return s.Puuid
}

// GetQuadraKills returns the value of QuadraKills.
func (s *MatchV5ParticipantDto) GetQuadraKills() int32 {
	return s.QuadraKills
}

// GetRiotIdGameName returns the value of RiotIdGameName.
func (s *MatchV5ParticipantDto) GetRiotIdGameName() OptString {
	return s.RiotIdGameName
}

// GetRiotIdTagline returns the value of RiotIdTagline.
func (s *MatchV5ParticipantDto) GetRiotIdTagline() OptString {
	return s.RiotIdTagline
}

// GetRole returns the value of Role.
func (s *MatchV5ParticipantDto) GetRole() string {
	return s.Role
}

// GetSightWardsBoughtInGame returns the value of SightWardsBoughtInGame.
func (s *MatchV5ParticipantDto) GetSightWardsBoughtInGame() int32 {
	return s.SightWardsBoughtInGame
}

// GetSpell1Casts returns the value of Spell1Casts.
func (s *MatchV5ParticipantDto) GetSpell1Casts() int32 {
	return s.Spell1Casts
}

// GetSpell2Casts returns the value of Spell2Casts.
func (s *MatchV5ParticipantDto) GetSpell2Casts() int32 {
	return s.Spell2Casts
}

// GetSpell3Casts returns the value of Spell3Casts.
func (s *MatchV5ParticipantDto) GetSpell3Casts() int32 {
	return s.Spell3Casts
}

// GetSpell4Casts returns the value of Spell4Casts.
func (s *MatchV5ParticipantDto) GetSpell4Casts() int32 {
	return s.Spell4Casts
}

// GetSubteamPlacement returns the value of SubteamPlacement.
func (s *MatchV5ParticipantDto) GetSubteamPlacement() OptInt32 {
	return s.SubteamPlacement
}

// GetSummoner1Casts returns the value of Summoner1Casts.
func (s *MatchV5ParticipantDto) GetSummoner1Casts() int32 {
	return s.Summoner1Casts
}

// GetSummoner1Id returns the value of Summoner1Id.
func (s *MatchV5ParticipantDto) GetSummoner1Id() int32 {
	return s.Summoner1Id
}

// GetSummoner2Casts returns the value of Summoner2Casts.
func (s *MatchV5ParticipantDto) GetSummoner2Casts() int32 {
	return s.Summoner2Casts
}

// GetSummoner2Id returns the value of Summoner2Id.
func (s *MatchV5ParticipantDto) GetSummoner2Id() int32 {
	return s.Summoner2Id
}

// GetSummonerId returns the value of SummonerId.
func (s *MatchV5ParticipantDto) GetSummonerId() string {
	return s.SummonerId
}

// GetSummonerLevel returns the value of SummonerLevel.
func (s *MatchV5ParticipantDto) GetSummonerLevel() int32 {
	return s.SummonerLevel
}

// GetSummonerName returns the value of SummonerName.
func (s *MatchV5ParticipantDto) GetSummonerName() string {
	return s.SummonerName
}

// GetTeamEarlySurrendered returns the value of TeamEarlySurrendered.
func (s *MatchV5ParticipantDto) GetTeamEarlySurrendered() bool {
	return s.TeamEarlySurrendered
}

// GetTeamId returns the value of TeamId.
func (s *MatchV5ParticipantDto) GetTeamId() int32 {
	return s.TeamId
}

// GetTeamPosition returns the value of TeamPosition.
func (s *MatchV5ParticipantDto) GetTeamPosition() string {
	return s.TeamPosition
}

// GetTimeCCingOthers returns the value of TimeCCingOthers.
func (s *MatchV5ParticipantDto) GetTimeCCingOthers() int32 {
	return s.TimeCCingOthers
}

// GetTimePlayed returns the value of TimePlayed.
func (s *MatchV5ParticipantDto) GetTimePlayed() int32 {
	return s.TimePlayed
}

// GetTotalAllyJungleMinionsKilled returns the value of TotalAllyJungleMinionsKilled.
func (s *MatchV5ParticipantDto) GetTotalAllyJungleMinionsKilled() OptInt32 {
	return s.TotalAllyJungleMinionsKilled
}

// GetTotalDamageDealt returns the value of TotalDamageDealt.
func (s *MatchV5ParticipantDto) GetTotalDamageDealt() int32 {
	return s.TotalDamageDealt
}

// GetTotalDamageDealtToChampions returns the value of TotalDamageDealtToChampions.
func (s *MatchV5ParticipantDto) GetTotalDamageDealtToChampions() int32 {
	return s.TotalDamageDealtToChampions
}

// GetTotalDamageShieldedOnTeammates returns the value of TotalDamageShieldedOnTeammates.
func (s *MatchV5ParticipantDto) GetTotalDamageShieldedOnTeammates() int32 {
	return s.TotalDamageShieldedOnTeammates
}

// GetTotalDamageTaken returns the value of TotalDamageTaken.
func (s *MatchV5ParticipantDto) GetTotalDamageTaken() int32 {
	return s.TotalDamageTaken
}

// GetTotalEnemyJungleMinionsKilled returns the value of TotalEnemyJungleMinionsKilled.
func (s *MatchV5ParticipantDto) GetTotalEnemyJungleMinionsKilled() OptInt32 {
	return s.TotalEnemyJungleMinionsKilled
}

// GetTotalHeal returns the value of TotalHeal.
func (s *MatchV5ParticipantDto) GetTotalHeal() int32 {
	return s.TotalHeal
}

// GetTotalHealsOnTeammates returns the value of TotalHealsOnTeammates.
func (s *MatchV5ParticipantDto) GetTotalHealsOnTeammates() int32 {
	return s.TotalHealsOnTeammates
}

// GetTotalMinionsKilled returns the value of TotalMinionsKilled.
func (s *MatchV5ParticipantDto) GetTotalMinionsKilled() int32 {
	return s.TotalMinionsKilled
}

// GetTotalTimeCCDealt returns the value of TotalTimeCCDealt.
func (s *MatchV5ParticipantDto) GetTotalTimeCCDealt() int32 {
	return s.TotalTimeCCDealt
}

// GetTotalTimeSpentDead returns the value of TotalTimeSpentDead.
func (s *MatchV5ParticipantDto) GetTotalTimeSpentDead() int32 {
	return s.TotalTimeSpentDead
}

// GetTotalUnitsHealed returns the value of TotalUnitsHealed.
func (s *MatchV5ParticipantDto) GetTotalUnitsHealed() int32 {
	return s.TotalUnitsHealed
}

// GetTripleKills returns the value of TripleKills.
func (s *MatchV5ParticipantDto) GetTripleKills() int32 {
	return s.TripleKills
}

// GetTrueDamageDealt returns the value of TrueDamageDealt.
func (s *MatchV5ParticipantDto) GetTrueDamageDealt() int32 {
	return s.TrueDamageDealt
}

// GetTrueDamageDealtToChampions returns the value of TrueDamageDealtToChampions.
func (s *MatchV5ParticipantDto) GetTrueDamageDealtToChampions() int32 {
	return s.TrueDamageDealtToChampions
}

// GetTrueDamageTaken returns the value of TrueDamageTaken.
func (s *MatchV5ParticipantDto) GetTrueDamageTaken() int32 {
	return s.TrueDamageTaken
}

// GetTurretKills returns the value of TurretKills.
func (s *MatchV5ParticipantDto) GetTurretKills() int32 {
	return s.TurretKills
}

// GetTurretTakedowns returns the value of TurretTakedowns.
func (s *MatchV5ParticipantDto) GetTurretTakedowns() OptInt32 {
	return s.TurretTakedowns
}

// GetTurretsLost returns the value of TurretsLost.
func (s *MatchV5ParticipantDto) GetTurretsLost() OptInt32 {
	return s.TurretsLost
}

// GetUnrealKills returns the value of UnrealKills.
func (s *MatchV5ParticipantDto) GetUnrealKills() int32 {
	return s.UnrealKills
}

// GetVisionScore returns the value of VisionScore.
func (s *MatchV5ParticipantDto) GetVisionScore() int32 {
	return s.VisionScore
}

// GetVisionClearedPings returns the value of VisionClearedPings.
func (s *MatchV5ParticipantDto) GetVisionClearedPings() OptInt32 {
	return s.VisionClearedPings
}

// GetVisionWardsBoughtInGame returns the value of VisionWardsBoughtInGame.
func (s *MatchV5ParticipantDto) GetVisionWardsBoughtInGame() int32 {
	return s.VisionWardsBoughtInGame
}

// GetWardsKilled returns the value of WardsKilled.
func (s *MatchV5ParticipantDto) GetWardsKilled() int32 {
	return s.WardsKilled
}

// GetWardsPlaced returns the value of WardsPlaced.
func (s *MatchV5ParticipantDto) GetWardsPlaced() int32 {
	return s.WardsPlaced
}

// GetWin returns the value of Win.
func (s *MatchV5ParticipantDto) GetWin() bool {
	return s.Win
}

// GetBaitPings returns the value of BaitPings.
func (s *MatchV5ParticipantDto) GetBaitPings() OptInt32 {
	return s.BaitPings
}

// GetDangerPings returns the value of DangerPings.
func (s *MatchV5ParticipantDto) GetDangerPings() OptInt32 {
	return s.DangerPings
}

// GetBasicPings returns the value of BasicPings.
func (s *MatchV5ParticipantDto) GetBasicPings() OptInt32 {
	return s.BasicPings
}

// GetPlayerAugment5 returns the value of PlayerAugment5.
func (s *MatchV5ParticipantDto) GetPlayerAugment5() OptInt32 {
	return s.PlayerAugment5
}

// GetPlayerAugment6 returns the value of PlayerAugment6.
func (s *MatchV5ParticipantDto) GetPlayerAugment6() OptInt32 {
	return s.PlayerAugment6
}

// GetRiotIdName returns the value of RiotIdName.
func (s *MatchV5ParticipantDto) GetRiotIdName() OptString {
	return s.RiotIdName
}

// GetRetreatPings returns the value of RetreatPings.
func (s *MatchV5ParticipantDto) GetRetreatPings() OptInt32 {
	return s.RetreatPings
}

// GetChampionSkinId returns the value of ChampionSkinId.
func (s *MatchV5ParticipantDto) GetChampionSkinId() OptInt32 {
	return s.ChampionSkinId
}

// SetAllInPings sets the value of AllInPings.
func (s *MatchV5ParticipantDto) SetAllInPings(val OptInt32) {
	s.AllInPings = val
}

// SetAssistMePings sets the value of AssistMePings.
func (s *MatchV5ParticipantDto) SetAssistMePings(val OptInt32) {
	s.AssistMePings = val
}

// SetAssists sets the value of Assists.
func (s *MatchV5ParticipantDto) SetAssists(val int32) {
	s.Assists = val
}

// SetBaronKills sets the value of BaronKills.
func (s *MatchV5ParticipantDto) SetBaronKills(val int32) {
	s.BaronKills = val
}

// SetBountyLevel sets the value of BountyLevel.
func (s *MatchV5ParticipantDto) SetBountyLevel(val OptInt32) {
	s.BountyLevel = val
}

// SetChampExperience sets the value of ChampExperience.
func (s *MatchV5ParticipantDto) SetChampExperience(val int32) {
	s.ChampExperience = val
}

// SetChampLevel sets the value of ChampLevel.
func (s *MatchV5ParticipantDto) SetChampLevel(val int32) {
	s.ChampLevel = val
}

// SetChampionId sets the value of ChampionId.
func (s *MatchV5ParticipantDto) SetChampionId(val int32) {
	s.ChampionId = val
}

// SetChampionName sets the value of ChampionName.
func (s *MatchV5ParticipantDto) SetChampionName(val string) {
	s.ChampionName = val
}

// SetCommandPings sets the value of CommandPings.
func (s *MatchV5ParticipantDto) SetCommandPings(val OptInt32) {
	s.CommandPings = val
}

// SetChampionTransform sets the value of ChampionTransform.
func (s *MatchV5ParticipantDto) SetChampionTransform(val int32) {
	s.ChampionTransform = val
}

// SetConsumablesPurchased sets the value of ConsumablesPurchased.
func (s *MatchV5ParticipantDto) SetConsumablesPurchased(val int32) {
	s.ConsumablesPurchased = val
}

// SetChallenges sets the value of Challenges.
func (s *MatchV5ParticipantDto) SetChallenges(val OptMatchV5ChallengesDto) {
	s.Challenges = val
}

// SetDamageDealtToBuildings sets the value of DamageDealtToBuildings.
func (s *MatchV5ParticipantDto) SetDamageDealtToBuildings(val OptInt32) {
	s.DamageDealtToBuildings = val
}

// SetDamageDealtToObjectives sets the value of DamageDealtToObjectives.
func (s *MatchV5ParticipantDto) SetDamageDealtToObjectives(val int32) {
	s.DamageDealtToObjectives = val
}

// SetDamageDealtToTurrets sets the value of DamageDealtToTurrets.
func (s *MatchV5ParticipantDto) SetDamageDealtToTurrets(val int32) {
	s.DamageDealtToTurrets = val
}

// SetDamageSelfMitigated sets the value of DamageSelfMitigated.
func (s *MatchV5ParticipantDto) SetDamageSelfMitigated(val int32) {
	s.DamageSelfMitigated = val
}

// SetDeaths sets the value of Deaths.
func (s *MatchV5ParticipantDto) SetDeaths(val int32) {
	s.Deaths = val
}

// SetDetectorWardsPlaced sets the value of DetectorWardsPlaced.
func (s *MatchV5ParticipantDto) SetDetectorWardsPlaced(val int32) {
	s.DetectorWardsPlaced = val
}

// SetDoubleKills sets the value of DoubleKills.
func (s *MatchV5ParticipantDto) SetDoubleKills(val int32) {
	s.DoubleKills = val
}

// SetDragonKills sets the value of DragonKills.
func (s *MatchV5ParticipantDto) SetDragonKills(val int32) {
	s.DragonKills = val
}

// SetEligibleForProgression sets the value of EligibleForProgression.
func (s *MatchV5ParticipantDto) SetEligibleForProgression(val OptBool) {
	s.EligibleForProgression = val
}

// SetEnemyMissingPings sets the value of EnemyMissingPings.
func (s *MatchV5ParticipantDto) SetEnemyMissingPings(val OptInt32) {
	s.EnemyMissingPings = val
}

// SetEnemyVisionPings sets the value of EnemyVisionPings.
func (s *MatchV5ParticipantDto) SetEnemyVisionPings(val OptInt32) {
	s.EnemyVisionPings = val
}

// SetFirstBloodAssist sets the value of FirstBloodAssist.
func (s *MatchV5ParticipantDto) SetFirstBloodAssist(val bool) {
	s.FirstBloodAssist = val
}

// SetFirstBloodKill sets the value of FirstBloodKill.
func (s *MatchV5ParticipantDto) SetFirstBloodKill(val bool) {
	s.FirstBloodKill = val
}

// SetFirstTowerAssist sets the value of FirstTowerAssist.
func (s *MatchV5ParticipantDto) SetFirstTowerAssist(val bool) {
	s.FirstTowerAssist = val
}

// SetFirstTowerKill sets the value of FirstTowerKill.
func (s *MatchV5ParticipantDto) SetFirstTowerKill(val bool) {
	s.FirstTowerKill = val
}

// SetGameEndedInEarlySurrender sets the value of GameEndedInEarlySurrender.
func (s *MatchV5ParticipantDto) SetGameEndedInEarlySurrender(val bool) {
	s.GameEndedInEarlySurrender = val
}

// SetGameEndedInSurrender sets the value of GameEndedInSurrender.
func (s *MatchV5ParticipantDto) SetGameEndedInSurrender(val bool) {
	s.GameEndedInSurrender = val
}

// SetHoldPings sets the value of HoldPings.
func (s *MatchV5ParticipantDto) SetHoldPings(val OptInt32) {
	s.HoldPings = val
}

// SetGetBackPings sets the value of GetBackPings.
func (s *MatchV5ParticipantDto) SetGetBackPings(val OptInt32) {
	s.GetBackPings = val
}

// SetGoldEarned sets the value of GoldEarned.
func (s *MatchV5ParticipantDto) SetGoldEarned(val int32) {
	s.GoldEarned = val
}

// SetGoldSpent sets the value of GoldSpent.
func (s *MatchV5ParticipantDto) SetGoldSpent(val int32) {
	s.GoldSpent = val
}

// SetIndividualPosition sets the value of IndividualPosition.
func (s *MatchV5ParticipantDto) SetIndividualPosition(val string) {
	s.IndividualPosition = val
}

// SetInhibitorKills sets the value of InhibitorKills.
func (s *MatchV5ParticipantDto) SetInhibitorKills(val int32) {
	s.InhibitorKills = val
}

// SetInhibitorTakedowns sets the value of InhibitorTakedowns.
func (s *MatchV5ParticipantDto) SetInhibitorTakedowns(val OptInt32) {
	s.InhibitorTakedowns = val
}

// SetInhibitorsLost sets the value of InhibitorsLost.
func (s *MatchV5ParticipantDto) SetInhibitorsLost(val OptInt32) {
	s.InhibitorsLost = val
}

// SetItem0 sets the value of Item0.
func (s *MatchV5ParticipantDto) SetItem0(val int32) {
	s.Item0 = val
}

// SetItem1 sets the value of Item1.
func (s *MatchV5ParticipantDto) SetItem1(val int32) {
	s.Item1 = val
}

// SetItem2 sets the value of Item2.
func (s *MatchV5ParticipantDto) SetItem2(val int32) {
	s.Item2 = val
}

// SetItem3 sets the value of Item3.
func (s *MatchV5ParticipantDto) SetItem3(val int32) {
	s.Item3 = val
}

// SetItem4 sets the value of Item4.
func (s *MatchV5ParticipantDto) SetItem4(val int32) {
	s.Item4 = val
}

// SetItem5 sets the value of Item5.
func (s *MatchV5ParticipantDto) SetItem5(val int32) {
	s.Item5 = val
}

// SetItem6 sets the value of Item6.
func (s *MatchV5ParticipantDto) SetItem6(val int32) {
	s.Item6 = val
}

// SetItemsPurchased sets the value of ItemsPurchased.
func (s *MatchV5ParticipantDto) SetItemsPurchased(val int32) {
	s.ItemsPurchased = val
}

// SetKillingSprees sets the value of KillingSprees.
func (s *MatchV5ParticipantDto) SetKillingSprees(val int32) {
	s.KillingSprees = val
}

// SetKills sets the value of Kills.
func (s *MatchV5ParticipantDto) SetKills(val int32) {
	s.Kills = val
}

// SetLane sets the value of Lane.
func (s *MatchV5ParticipantDto) SetLane(val string) {
	s.Lane = val
}

// SetLargestCriticalStrike sets the value of LargestCriticalStrike.
func (s *MatchV5ParticipantDto) SetLargestCriticalStrike(val int32) {
	s.LargestCriticalStrike = val
}

// SetLargestKillingSpree sets the value of LargestKillingSpree.
func (s *MatchV5ParticipantDto) SetLargestKillingSpree(val int32) {
	s.LargestKillingSpree = val
}

// SetLargestMultiKill sets the value of LargestMultiKill.
func (s *MatchV5ParticipantDto) SetLargestMultiKill(val int32) {
	s.LargestMultiKill = val
}

// SetLongestTimeSpentLiving sets the value of LongestTimeSpentLiving.
func (s *MatchV5ParticipantDto) SetLongestTimeSpentLiving(val int32) {
	s.LongestTimeSpentLiving = val
}

// SetMagicDamageDealt sets the value of MagicDamageDealt.
func (s *MatchV5ParticipantDto) SetMagicDamageDealt(val int32) {
	s.MagicDamageDealt = val
}

// SetMagicDamageDealtToChampions sets the value of MagicDamageDealtToChampions.
func (s *MatchV5ParticipantDto) SetMagicDamageDealtToChampions(val int32) {
	s.MagicDamageDealtToChampions = val
}

// SetMagicDamageTaken sets the value of MagicDamageTaken.
func (s *MatchV5ParticipantDto) SetMagicDamageTaken(val int32) {
	s.MagicDamageTaken = val
}

// SetMissions sets the value of Missions.
func (s *MatchV5ParticipantDto) SetMissions(val OptMatchV5MissionsDto) {
	s.Missions = val
}

// SetNeutralMinionsKilled sets the value of NeutralMinionsKilled.
func (s *MatchV5ParticipantDto) SetNeutralMinionsKilled(val int32) {
	s.NeutralMinionsKilled = val
}

// SetNeedVisionPings sets the value of NeedVisionPings.
func (s *MatchV5ParticipantDto) SetNeedVisionPings(val OptInt32) {
	s.NeedVisionPings = val
}

// SetNexusKills sets the value of NexusKills.
func (s *MatchV5ParticipantDto) SetNexusKills(val int32) {
	s.NexusKills = val
}

// SetNexusTakedowns sets the value of NexusTakedowns.
func (s *MatchV5ParticipantDto) SetNexusTakedowns(val OptInt32) {
	s.NexusTakedowns = val
}

// SetNexusLost sets the value of NexusLost.
func (s *MatchV5ParticipantDto) SetNexusLost(val OptInt32) {
	s.NexusLost = val
}

// SetObjectivesStolen sets the value of ObjectivesStolen.
func (s *MatchV5ParticipantDto) SetObjectivesStolen(val int32) {
	s.ObjectivesStolen = val
}

// SetObjectivesStolenAssists sets the value of ObjectivesStolenAssists.
func (s *MatchV5ParticipantDto) SetObjectivesStolenAssists(val int32) {
	s.ObjectivesStolenAssists = val
}

// SetOnMyWayPings sets the value of OnMyWayPings.
func (s *MatchV5ParticipantDto) SetOnMyWayPings(val OptInt32) {
	s.OnMyWayPings = val
}

// SetParticipantId sets the value of ParticipantId.
func (s *MatchV5ParticipantDto) SetParticipantId(val int32) {
	s.ParticipantId = val
}

// SetPlayerScore0 sets the value of PlayerScore0.
func (s *MatchV5ParticipantDto) SetPlayerScore0(val OptFloat32) {
	s.PlayerScore0 = val
}

// SetPlayerScore1 sets the value of PlayerScore1.
func (s *MatchV5ParticipantDto) SetPlayerScore1(val OptFloat32) {
	s.PlayerScore1 = val
}

// SetPlayerScore2 sets the value of PlayerScore2.
func (s *MatchV5ParticipantDto) SetPlayerScore2(val OptFloat32) {
	s.PlayerScore2 = val
}

// SetPlayerScore3 sets the value of PlayerScore3.
func (s *MatchV5ParticipantDto) SetPlayerScore3(val OptFloat32) {
	s.PlayerScore3 = val
}

// SetPlayerScore4 sets the value of PlayerScore4.
func (s *MatchV5ParticipantDto) SetPlayerScore4(val OptFloat32) {
	s.PlayerScore4 = val
}

// SetPlayerScore5 sets the value of PlayerScore5.
func (s *MatchV5ParticipantDto) SetPlayerScore5(val OptFloat32) {
	s.PlayerScore5 = val
}

// SetPlayerScore6 sets the value of PlayerScore6.
func (s *MatchV5ParticipantDto) SetPlayerScore6(val OptFloat32) {
	s.PlayerScore6 = val
}

// SetPlayerScore7 sets the value of PlayerScore7.
func (s *MatchV5ParticipantDto) SetPlayerScore7(val OptFloat32) {
	s.PlayerScore7 = val
}

// SetPlayerScore8 sets the value of PlayerScore8.
func (s *MatchV5ParticipantDto) SetPlayerScore8(val OptFloat32) {
	s.PlayerScore8 = val
}

// SetPlayerScore9 sets the value of PlayerScore9.
func (s *MatchV5ParticipantDto) SetPlayerScore9(val OptFloat32) {
	s.PlayerScore9 = val
}

// SetPlayerScore10 sets the value of PlayerScore10.
func (s *MatchV5ParticipantDto) SetPlayerScore10(val OptFloat32) {
	s.PlayerScore10 = val
}

// SetPlayerScore11 sets the value of PlayerScore11.
func (s *MatchV5ParticipantDto) SetPlayerScore11(val OptFloat32) {
	s.PlayerScore11 = val
}

// SetPentaKills sets the value of PentaKills.
func (s *MatchV5ParticipantDto) SetPentaKills(val int32) {
	s.PentaKills = val
}

// SetPerks sets the value of Perks.
func (s *MatchV5ParticipantDto) SetPerks(val MatchV5PerksDto) {
	s.Perks = val
}

// SetPhysicalDamageDealt sets the value of PhysicalDamageDealt.
func (s *MatchV5ParticipantDto) SetPhysicalDamageDealt(val int32) {
	s.PhysicalDamageDealt = val
}

// SetPhysicalDamageDealtToChampions sets the value of PhysicalDamageDealtToChampions.
func (s *MatchV5ParticipantDto) SetPhysicalDamageDealtToChampions(val int32) {
	s.PhysicalDamageDealtToChampions = val
}

// SetPhysicalDamageTaken sets the value of PhysicalDamageTaken.
func (s *MatchV5ParticipantDto) SetPhysicalDamageTaken(val int32) {
	s.PhysicalDamageTaken = val
}

// SetPlacement sets the value of Placement.
func (s *MatchV5ParticipantDto) SetPlacement(val OptInt32) {
	s.Placement = val
}

// SetPlayerAugment1 sets the value of PlayerAugment1.
func (s *MatchV5ParticipantDto) SetPlayerAugment1(val OptInt32) {
	s.PlayerAugment1 = val
}

// SetPlayerAugment2 sets the value of PlayerAugment2.
func (s *MatchV5ParticipantDto) SetPlayerAugment2(val OptInt32) {
	s.PlayerAugment2 = val
}

// SetPlayerAugment3 sets the value of PlayerAugment3.
func (s *MatchV5ParticipantDto) SetPlayerAugment3(val OptInt32) {
	s.PlayerAugment3 = val
}

// SetPlayerAugment4 sets the value of PlayerAugment4.
func (s *MatchV5ParticipantDto) SetPlayerAugment4(val OptInt32) {
	s.PlayerAugment4 = val
}

// SetPlayerSubteamId sets the value of PlayerSubteamId.
func (s *MatchV5ParticipantDto) SetPlayerSubteamId(val OptInt32) {
	s.PlayerSubteamId = val
}

// SetPushPings sets the value of PushPings.
func (s *MatchV5ParticipantDto) SetPushPings(val OptInt32) {
	s.PushPings = val
}

// SetProfileIcon sets the value of ProfileIcon.
func (s *MatchV5ParticipantDto) SetProfileIcon(val int32) {
	s.ProfileIcon = val
}

// SetPuuid sets the value of Puuid.
func (s *MatchV5ParticipantDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetQuadraKills sets the value of QuadraKills.
func (s *MatchV5ParticipantDto) SetQuadraKills(val int32) {
	s.QuadraKills = val
}

// SetRiotIdGameName sets the value of RiotIdGameName.
func (s *MatchV5ParticipantDto) SetRiotIdGameName(val OptString) {
	s.RiotIdGameName = val
}

// SetRiotIdTagline sets the value of RiotIdTagline.
func (s *MatchV5ParticipantDto) SetRiotIdTagline(val OptString) {
	s.RiotIdTagline = val
}

// SetRole sets the value of Role.
func (s *MatchV5ParticipantDto) SetRole(val string) {
	s.Role = val
}

// SetSightWardsBoughtInGame sets the value of SightWardsBoughtInGame.
func (s *MatchV5ParticipantDto) SetSightWardsBoughtInGame(val int32) {
	s.SightWardsBoughtInGame = val
}

// SetSpell1Casts sets the value of Spell1Casts.
func (s *MatchV5ParticipantDto) SetSpell1Casts(val int32) {
	s.Spell1Casts = val
}

// SetSpell2Casts sets the value of Spell2Casts.
func (s *MatchV5ParticipantDto) SetSpell2Casts(val int32) {
	s.Spell2Casts = val
}

// SetSpell3Casts sets the value of Spell3Casts.
func (s *MatchV5ParticipantDto) SetSpell3Casts(val int32) {
	s.Spell3Casts = val
}

// SetSpell4Casts sets the value of Spell4Casts.
func (s *MatchV5ParticipantDto) SetSpell4Casts(val int32) {
	s.Spell4Casts = val
}

// SetSubteamPlacement sets the value of SubteamPlacement.
func (s *MatchV5ParticipantDto) SetSubteamPlacement(val OptInt32) {
	s.SubteamPlacement = val
}

// SetSummoner1Casts sets the value of Summoner1Casts.
func (s *MatchV5ParticipantDto) SetSummoner1Casts(val int32) {
	s.Summoner1Casts = val
}

// SetSummoner1Id sets the value of Summoner1Id.
func (s *MatchV5ParticipantDto) SetSummoner1Id(val int32) {
	s.Summoner1Id = val
}

// SetSummoner2Casts sets the value of Summoner2Casts.
func (s *MatchV5ParticipantDto) SetSummoner2Casts(val int32) {
	s.Summoner2Casts = val
}

// SetSummoner2Id sets the value of Summoner2Id.
func (s *MatchV5ParticipantDto) SetSummoner2Id(val int32) {
	s.Summoner2Id = val
}

// SetSummonerId sets the value of SummonerId.
func (s *MatchV5ParticipantDto) SetSummonerId(val string) {
	s.SummonerId = val
}

// SetSummonerLevel sets the value of SummonerLevel.
func (s *MatchV5ParticipantDto) SetSummonerLevel(val int32) {
	s.SummonerLevel = val
}

// SetSummonerName sets the value of SummonerName.
func (s *MatchV5ParticipantDto) SetSummonerName(val string) {
	s.SummonerName = val
}

// SetTeamEarlySurrendered sets the value of TeamEarlySurrendered.
func (s *MatchV5ParticipantDto) SetTeamEarlySurrendered(val bool) {
	s.TeamEarlySurrendered = val
}

// SetTeamId sets the value of TeamId.
func (s *MatchV5ParticipantDto) SetTeamId(val int32) {
	s.TeamId = val
}

// SetTeamPosition sets the value of TeamPosition.
func (s *MatchV5ParticipantDto) SetTeamPosition(val string) {
	s.TeamPosition = val
}

// SetTimeCCingOthers sets the value of TimeCCingOthers.
func (s *MatchV5ParticipantDto) SetTimeCCingOthers(val int32) {
	s.TimeCCingOthers = val
}

// SetTimePlayed sets the value of TimePlayed.
func (s *MatchV5ParticipantDto) SetTimePlayed(val int32) {
	s.TimePlayed = val
}

// SetTotalAllyJungleMinionsKilled sets the value of TotalAllyJungleMinionsKilled.
func (s *MatchV5ParticipantDto) SetTotalAllyJungleMinionsKilled(val OptInt32) {
	s.TotalAllyJungleMinionsKilled = val
}

// SetTotalDamageDealt sets the value of TotalDamageDealt.
func (s *MatchV5ParticipantDto) SetTotalDamageDealt(val int32) {
	s.TotalDamageDealt = val
}

// SetTotalDamageDealtToChampions sets the value of TotalDamageDealtToChampions.
func (s *MatchV5ParticipantDto) SetTotalDamageDealtToChampions(val int32) {
	s.TotalDamageDealtToChampions = val
}

// SetTotalDamageShieldedOnTeammates sets the value of TotalDamageShieldedOnTeammates.
func (s *MatchV5ParticipantDto) SetTotalDamageShieldedOnTeammates(val int32) {
	s.TotalDamageShieldedOnTeammates = val
}

// SetTotalDamageTaken sets the value of TotalDamageTaken.
func (s *MatchV5ParticipantDto) SetTotalDamageTaken(val int32) {
	s.TotalDamageTaken = val
}

// SetTotalEnemyJungleMinionsKilled sets the value of TotalEnemyJungleMinionsKilled.
func (s *MatchV5ParticipantDto) SetTotalEnemyJungleMinionsKilled(val OptInt32) {
	s.TotalEnemyJungleMinionsKilled = val
}

// SetTotalHeal sets the value of TotalHeal.
func (s *MatchV5ParticipantDto) SetTotalHeal(val int32) {
	s.TotalHeal = val
}

// SetTotalHealsOnTeammates sets the value of TotalHealsOnTeammates.
func (s *MatchV5ParticipantDto) SetTotalHealsOnTeammates(val int32) {
	s.TotalHealsOnTeammates = val
}

// SetTotalMinionsKilled sets the value of TotalMinionsKilled.
func (s *MatchV5ParticipantDto) SetTotalMinionsKilled(val int32) {
	s.TotalMinionsKilled = val
}

// SetTotalTimeCCDealt sets the value of TotalTimeCCDealt.
func (s *MatchV5ParticipantDto) SetTotalTimeCCDealt(val int32) {
	s.TotalTimeCCDealt = val
}

// SetTotalTimeSpentDead sets the value of TotalTimeSpentDead.
func (s *MatchV5ParticipantDto) SetTotalTimeSpentDead(val int32) {
	s.TotalTimeSpentDead = val
}

// SetTotalUnitsHealed sets the value of TotalUnitsHealed.
func (s *MatchV5ParticipantDto) SetTotalUnitsHealed(val int32) {
	s.TotalUnitsHealed = val
}

// SetTripleKills sets the value of TripleKills.
func (s *MatchV5ParticipantDto) SetTripleKills(val int32) {
	s.TripleKills = val
}

// SetTrueDamageDealt sets the value of TrueDamageDealt.
func (s *MatchV5ParticipantDto) SetTrueDamageDealt(val int32) {
	s.TrueDamageDealt = val
}

// SetTrueDamageDealtToChampions sets the value of TrueDamageDealtToChampions.
func (s *MatchV5ParticipantDto) SetTrueDamageDealtToChampions(val int32) {
	s.TrueDamageDealtToChampions = val
}

// SetTrueDamageTaken sets the value of TrueDamageTaken.
func (s *MatchV5ParticipantDto) SetTrueDamageTaken(val int32) {
	s.TrueDamageTaken = val
}

// SetTurretKills sets the value of TurretKills.
func (s *MatchV5ParticipantDto) SetTurretKills(val int32) {
	s.TurretKills = val
}

// SetTurretTakedowns sets the value of TurretTakedowns.
func (s *MatchV5ParticipantDto) SetTurretTakedowns(val OptInt32) {
	s.TurretTakedowns = val
}

// SetTurretsLost sets the value of TurretsLost.
func (s *MatchV5ParticipantDto) SetTurretsLost(val OptInt32) {
	s.TurretsLost = val
}

// SetUnrealKills sets the value of UnrealKills.
func (s *MatchV5ParticipantDto) SetUnrealKills(val int32) {
	s.UnrealKills = val
}

// SetVisionScore sets the value of VisionScore.
func (s *MatchV5ParticipantDto) SetVisionScore(val int32) {
	s.VisionScore = val
}

// SetVisionClearedPings sets the value of VisionClearedPings.
func (s *MatchV5ParticipantDto) SetVisionClearedPings(val OptInt32) {
	s.VisionClearedPings = val
}

// SetVisionWardsBoughtInGame sets the value of VisionWardsBoughtInGame.
func (s *MatchV5ParticipantDto) SetVisionWardsBoughtInGame(val int32) {
	s.VisionWardsBoughtInGame = val
}

// SetWardsKilled sets the value of WardsKilled.
func (s *MatchV5ParticipantDto) SetWardsKilled(val int32) {
	s.WardsKilled = val
}

// SetWardsPlaced sets the value of WardsPlaced.
func (s *MatchV5ParticipantDto) SetWardsPlaced(val int32) {
	s.WardsPlaced = val
}

// SetWin sets the value of Win.
func (s *MatchV5ParticipantDto) SetWin(val bool) {
	s.Win = val
}

// SetBaitPings sets the value of BaitPings.
func (s *MatchV5ParticipantDto) SetBaitPings(val OptInt32) {
	s.BaitPings = val
}

// SetDangerPings sets the value of DangerPings.
func (s *MatchV5ParticipantDto) SetDangerPings(val OptInt32) {
	s.DangerPings = val
}

// SetBasicPings sets the value of BasicPings.
func (s *MatchV5ParticipantDto) SetBasicPings(val OptInt32) {
	s.BasicPings = val
}

// SetPlayerAugment5 sets the value of PlayerAugment5.
func (s *MatchV5ParticipantDto) SetPlayerAugment5(val OptInt32) {
	s.PlayerAugment5 = val
}

// SetPlayerAugment6 sets the value of PlayerAugment6.
func (s *MatchV5ParticipantDto) SetPlayerAugment6(val OptInt32) {
	s.PlayerAugment6 = val
}

// SetRiotIdName sets the value of RiotIdName.
func (s *MatchV5ParticipantDto) SetRiotIdName(val OptString) {
	s.RiotIdName = val
}

// SetRetreatPings sets the value of RetreatPings.
func (s *MatchV5ParticipantDto) SetRetreatPings(val OptInt32) {
	s.RetreatPings = val
}

// SetChampionSkinId sets the value of ChampionSkinId.
func (s *MatchV5ParticipantDto) SetChampionSkinId(val OptInt32) {
	s.ChampionSkinId = val
}

// Ref: #/components/schemas/match-v5.ParticipantFrameDto
type MatchV5ParticipantFrameDto struct {
	ChampionStats            MatchV5ChampionStatsDto `json:"championStats"`
	CurrentGold              int32                   `json:"currentGold"`
	DamageStats              MatchV5DamageStatsDto   `json:"damageStats"`
	GoldPerSecond            int32                   `json:"goldPerSecond"`
	JungleMinionsKilled      int32                   `json:"jungleMinionsKilled"`
	Level                    int32                   `json:"level"`
	MinionsKilled            int32                   `json:"minionsKilled"`
	ParticipantId            int32                   `json:"participantId"`
	Position                 MatchV5PositionDto      `json:"position"`
	TimeEnemySpentControlled int32                   `json:"timeEnemySpentControlled"`
	TotalGold                int32                   `json:"totalGold"`
	Xp                       int32                   `json:"xp"`
}

// GetChampionStats returns the value of ChampionStats.
func (s *MatchV5ParticipantFrameDto) GetChampionStats() MatchV5ChampionStatsDto {
	return s.ChampionStats
}

// GetCurrentGold returns the value of CurrentGold.
func (s *MatchV5ParticipantFrameDto) GetCurrentGold() int32 {
	return s.CurrentGold
}

// GetDamageStats returns the value of DamageStats.
func (s *MatchV5ParticipantFrameDto) GetDamageStats() MatchV5DamageStatsDto {
	return s.DamageStats
}

// GetGoldPerSecond returns the value of GoldPerSecond.
func (s *MatchV5ParticipantFrameDto) GetGoldPerSecond() int32 {
	return s.GoldPerSecond
}

// GetJungleMinionsKilled returns the value of JungleMinionsKilled.
func (s *MatchV5ParticipantFrameDto) GetJungleMinionsKilled() int32 {
	return s.JungleMinionsKilled
}

// GetLevel returns the value of Level.
func (s *MatchV5ParticipantFrameDto) GetLevel() int32 {
	return s.Level
}

// GetMinionsKilled returns the value of MinionsKilled.
func (s *MatchV5ParticipantFrameDto) GetMinionsKilled() int32 {
	return s.MinionsKilled
}

// GetParticipantId returns the value of ParticipantId.
func (s *MatchV5ParticipantFrameDto) GetParticipantId() int32 {
	return s.ParticipantId
}

// GetPosition returns the value of Position.
func (s *MatchV5ParticipantFrameDto) GetPosition() MatchV5PositionDto {
	return s.Position
}

// GetTimeEnemySpentControlled returns the value of TimeEnemySpentControlled.
func (s *MatchV5ParticipantFrameDto) GetTimeEnemySpentControlled() int32 {
	return s.TimeEnemySpentControlled
}

// GetTotalGold returns the value of TotalGold.
func (s *MatchV5ParticipantFrameDto) GetTotalGold() int32 {
	return s.TotalGold
}

// GetXp returns the value of Xp.
func (s *MatchV5ParticipantFrameDto) GetXp() int32 {
	return s.Xp
}

// SetChampionStats sets the value of ChampionStats.
func (s *MatchV5ParticipantFrameDto) SetChampionStats(val MatchV5ChampionStatsDto) {
	s.ChampionStats = val
}

// SetCurrentGold sets the value of CurrentGold.
func (s *MatchV5ParticipantFrameDto) SetCurrentGold(val int32) {
	s.CurrentGold = val
}

// SetDamageStats sets the value of DamageStats.
func (s *MatchV5ParticipantFrameDto) SetDamageStats(val MatchV5DamageStatsDto) {
	s.DamageStats = val
}

// SetGoldPerSecond sets the value of GoldPerSecond.
func (s *MatchV5ParticipantFrameDto) SetGoldPerSecond(val int32) {
	s.GoldPerSecond = val
}

// SetJungleMinionsKilled sets the value of JungleMinionsKilled.
func (s *MatchV5ParticipantFrameDto) SetJungleMinionsKilled(val int32) {
	s.JungleMinionsKilled = val
}

// SetLevel sets the value of Level.
func (s *MatchV5ParticipantFrameDto) SetLevel(val int32) {
	s.Level = val
}

// SetMinionsKilled sets the value of MinionsKilled.
func (s *MatchV5ParticipantFrameDto) SetMinionsKilled(val int32) {
	s.MinionsKilled = val
}

// SetParticipantId sets the value of ParticipantId.
func (s *MatchV5ParticipantFrameDto) SetParticipantId(val int32) {
	s.ParticipantId = val
}

// SetPosition sets the value of Position.
func (s *MatchV5ParticipantFrameDto) SetPosition(val MatchV5PositionDto) {
	s.Position = val
}

// SetTimeEnemySpentControlled sets the value of TimeEnemySpentControlled.
func (s *MatchV5ParticipantFrameDto) SetTimeEnemySpentControlled(val int32) {
	s.TimeEnemySpentControlled = val
}

// SetTotalGold sets the value of TotalGold.
func (s *MatchV5ParticipantFrameDto) SetTotalGold(val int32) {
	s.TotalGold = val
}

// SetXp sets the value of Xp.
func (s *MatchV5ParticipantFrameDto) SetXp(val int32) {
	s.Xp = val
}

// Ref: #/components/schemas/match-v5.ParticipantTimeLineDto
type MatchV5ParticipantTimeLineDto struct {
	ParticipantId int32  `json:"participantId"`
	Puuid         string `json:"puuid"`
}

// GetParticipantId returns the value of ParticipantId.
func (s *MatchV5ParticipantTimeLineDto) GetParticipantId() int32 {
	return s.ParticipantId
}

// GetPuuid returns the value of Puuid.
func (s *MatchV5ParticipantTimeLineDto) GetPuuid() string {
	return s.Puuid
}

// SetParticipantId sets the value of ParticipantId.
func (s *MatchV5ParticipantTimeLineDto) SetParticipantId(val int32) {
	s.ParticipantId = val
}

// SetPuuid sets the value of Puuid.
func (s *MatchV5ParticipantTimeLineDto) SetPuuid(val string) {
	s.Puuid = val
}

// Ref: #/components/schemas/match-v5.PerkStatsDto
type MatchV5PerkStatsDto struct {
	Defense int32 `json:"defense"`
	Flex    int32 `json:"flex"`
	Offense int32 `json:"offense"`
}

// GetDefense returns the value of Defense.
func (s *MatchV5PerkStatsDto) GetDefense() int32 {
	return s.Defense
}

// GetFlex returns the value of Flex.
func (s *MatchV5PerkStatsDto) GetFlex() int32 {
	return s.Flex
}

// GetOffense returns the value of Offense.
func (s *MatchV5PerkStatsDto) GetOffense() int32 {
	return s.Offense
}

// SetDefense sets the value of Defense.
func (s *MatchV5PerkStatsDto) SetDefense(val int32) {
	s.Defense = val
}

// SetFlex sets the value of Flex.
func (s *MatchV5PerkStatsDto) SetFlex(val int32) {
	s.Flex = val
}

// SetOffense sets the value of Offense.
func (s *MatchV5PerkStatsDto) SetOffense(val int32) {
	s.Offense = val
}

// Ref: #/components/schemas/match-v5.PerkStyleDto
type MatchV5PerkStyleDto struct {
	Description string                         `json:"description"`
	Selections  []MatchV5PerkStyleSelectionDto `json:"selections"`
	Style       int32                          `json:"style"`
}

// GetDescription returns the value of Description.
func (s *MatchV5PerkStyleDto) GetDescription() string {
	return s.Description
}

// GetSelections returns the value of Selections.
func (s *MatchV5PerkStyleDto) GetSelections() []MatchV5PerkStyleSelectionDto {
	return s.Selections
}

// GetStyle returns the value of Style.
func (s *MatchV5PerkStyleDto) GetStyle() int32 {
	return s.Style
}

// SetDescription sets the value of Description.
func (s *MatchV5PerkStyleDto) SetDescription(val string) {
	s.Description = val
}

// SetSelections sets the value of Selections.
func (s *MatchV5PerkStyleDto) SetSelections(val []MatchV5PerkStyleSelectionDto) {
	s.Selections = val
}

// SetStyle sets the value of Style.
func (s *MatchV5PerkStyleDto) SetStyle(val int32) {
	s.Style = val
}

// Ref: #/components/schemas/match-v5.PerkStyleSelectionDto
type MatchV5PerkStyleSelectionDto struct {
	Perk int32 `json:"perk"`
	Var1 int32 `json:"var1"`
	Var2 int32 `json:"var2"`
	Var3 int32 `json:"var3"`
}

// GetPerk returns the value of Perk.
func (s *MatchV5PerkStyleSelectionDto) GetPerk() int32 {
	return s.Perk
}

// GetVar1 returns the value of Var1.
func (s *MatchV5PerkStyleSelectionDto) GetVar1() int32 {
	return s.Var1
}

// GetVar2 returns the value of Var2.
func (s *MatchV5PerkStyleSelectionDto) GetVar2() int32 {
	return s.Var2
}

// GetVar3 returns the value of Var3.
func (s *MatchV5PerkStyleSelectionDto) GetVar3() int32 {
	return s.Var3
}

// SetPerk sets the value of Perk.
func (s *MatchV5PerkStyleSelectionDto) SetPerk(val int32) {
	s.Perk = val
}

// SetVar1 sets the value of Var1.
func (s *MatchV5PerkStyleSelectionDto) SetVar1(val int32) {
	s.Var1 = val
}

// SetVar2 sets the value of Var2.
func (s *MatchV5PerkStyleSelectionDto) SetVar2(val int32) {
	s.Var2 = val
}

// SetVar3 sets the value of Var3.
func (s *MatchV5PerkStyleSelectionDto) SetVar3(val int32) {
	s.Var3 = val
}

// Ref: #/components/schemas/match-v5.PerksDto
type MatchV5PerksDto struct {
	StatPerks MatchV5PerkStatsDto   `json:"statPerks"`
	Styles    []MatchV5PerkStyleDto `json:"styles"`
}

// GetStatPerks returns the value of StatPerks.
func (s *MatchV5PerksDto) GetStatPerks() MatchV5PerkStatsDto {
	return s.StatPerks
}

// GetStyles returns the value of Styles.
func (s *MatchV5PerksDto) GetStyles() []MatchV5PerkStyleDto {
	return s.Styles
}

// SetStatPerks sets the value of StatPerks.
func (s *MatchV5PerksDto) SetStatPerks(val MatchV5PerkStatsDto) {
	s.StatPerks = val
}

// SetStyles sets the value of Styles.
func (s *MatchV5PerksDto) SetStyles(val []MatchV5PerkStyleDto) {
	s.Styles = val
}

// Ref: #/components/schemas/match-v5.PositionDto
type MatchV5PositionDto struct {
	X int32 `json:"x"`
	Y int32 `json:"y"`
}

// GetX returns the value of X.
func (s *MatchV5PositionDto) GetX() int32 {
	return s.X
}

// GetY returns the value of Y.
func (s *MatchV5PositionDto) GetY() int32 {
	return s.Y
}

// SetX sets the value of X.
func (s *MatchV5PositionDto) SetX(val int32) {
	s.X = val
}

// SetY sets the value of Y.
func (s *MatchV5PositionDto) SetY(val int32) {
	s.Y = val
}

// Ref: #/components/schemas/match-v5.TeamDto
type MatchV5TeamDto struct {
	Bans       []MatchV5BanDto      `json:"bans"`
	Objectives MatchV5ObjectivesDto `json:"objectives"`
	TeamId     int32                `json:"teamId"`
	Win        bool                 `json:"win"`
	Feats      OptMatchV5FeatsDto   `json:"feats"`
}

// GetBans returns the value of Bans.
func (s *MatchV5TeamDto) GetBans() []MatchV5BanDto {
	return s.Bans
}

// GetObjectives returns the value of Objectives.
func (s *MatchV5TeamDto) GetObjectives() MatchV5ObjectivesDto {
	return s.Objectives
}

// GetTeamId returns the value of TeamId.
func (s *MatchV5TeamDto) GetTeamId() int32 {
	return s.TeamId
}

// GetWin returns the value of Win.
func (s *MatchV5TeamDto) GetWin() bool {
	return s.Win
}

// GetFeats returns the value of Feats.
func (s *MatchV5TeamDto) GetFeats() OptMatchV5FeatsDto {
	return s.Feats
}

// SetBans sets the value of Bans.
func (s *MatchV5TeamDto) SetBans(val []MatchV5BanDto) {
	s.Bans = val
}

// SetObjectives sets the value of Objectives.
func (s *MatchV5TeamDto) SetObjectives(val MatchV5ObjectivesDto) {
	s.Objectives = val
}

// SetTeamId sets the value of TeamId.
func (s *MatchV5TeamDto) SetTeamId(val int32) {
	s.TeamId = val
}

// SetWin sets the value of Win.
func (s *MatchV5TeamDto) SetWin(val bool) {
	s.Win = val
}

// SetFeats sets the value of Feats.
func (s *MatchV5TeamDto) SetFeats(val OptMatchV5FeatsDto) {
	s.Feats = val
}

// Ref: #/components/schemas/match-v5.TimelineDto
type MatchV5TimelineDto struct {
	// Match metadata.
	Metadata MatchV5MetadataTimeLineDto `json:"metadata"`
	// Match info.
	Info MatchV5InfoTimeLineDto `json:"info"`
}

// GetMetadata returns the value of Metadata.
func (s *MatchV5TimelineDto) GetMetadata() MatchV5MetadataTimeLineDto {
	return s.Metadata
}

// GetInfo returns the value of Info.
func (s *MatchV5TimelineDto) GetInfo() MatchV5InfoTimeLineDto {
	return s.Info
}

// SetMetadata sets the value of Metadata.
func (s *MatchV5TimelineDto) SetMetadata(val MatchV5MetadataTimeLineDto) {
	s.Metadata = val
}

// SetInfo sets the value of Info.
func (s *MatchV5TimelineDto) SetInfo(val MatchV5InfoTimeLineDto) {
	s.Info = val
}

func (*MatchV5TimelineDto) lolRsoMatchV1GetTimelineRes() {}
func (*MatchV5TimelineDto) matchV5GetTimelineRes()       {}

// NewOptBool returns new OptBool with value set to v.
func NewOptBool(v bool) OptBool {
	return OptBool{
		Value: v,
		Set:   true,
	}
}

// OptBool is optional bool.
type OptBool struct {
	Value bool
	Set   bool
}

// IsSet returns true if OptBool was set.
func (o OptBool) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptBool) Reset() {
	var v bool
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptBool) SetTo(v bool) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptBool) Get() (v bool, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptBool) Or(d bool) bool {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptChampionMasteryV4RewardConfigDto returns new OptChampionMasteryV4RewardConfigDto with value set to v.
func NewOptChampionMasteryV4RewardConfigDto(v ChampionMasteryV4RewardConfigDto) OptChampionMasteryV4RewardConfigDto {
	return OptChampionMasteryV4RewardConfigDto{
		Value: v,
		Set:   true,
	}
}

// OptChampionMasteryV4RewardConfigDto is optional ChampionMasteryV4RewardConfigDto.
type OptChampionMasteryV4RewardConfigDto struct {
	Value ChampionMasteryV4RewardConfigDto
	Set   bool
}

// IsSet returns true if OptChampionMasteryV4RewardConfigDto was set.
func (o OptChampionMasteryV4RewardConfigDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptChampionMasteryV4RewardConfigDto) Reset() {
	var v ChampionMasteryV4RewardConfigDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptChampionMasteryV4RewardConfigDto) SetTo(v ChampionMasteryV4RewardConfigDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptChampionMasteryV4RewardConfigDto) Get() (v ChampionMasteryV4RewardConfigDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptChampionMasteryV4RewardConfigDto) Or(d ChampionMasteryV4RewardConfigDto) ChampionMasteryV4RewardConfigDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat32 returns new OptFloat32 with value set to v.
func NewOptFloat32(v float32) OptFloat32 {
	return OptFloat32{
		Value: v,
		Set:   true,
	}
}

// OptFloat32 is optional float32.
type OptFloat32 struct {
	Value float32
	Set   bool
}

// IsSet returns true if OptFloat32 was set.
func (o OptFloat32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat32) Reset() {
	var v float32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat32) SetTo(v float32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat32) Get() (v float32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat32) Or(d float32) float32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptFloat64 returns new OptFloat64 with value set to v.
func NewOptFloat64(v float64) OptFloat64 {
	return OptFloat64{
		Value: v,
		Set:   true,
	}
}

// OptFloat64 is optional float64.
type OptFloat64 struct {
	Value float64
	Set   bool
}

// IsSet returns true if OptFloat64 was set.
func (o OptFloat64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptFloat64) Reset() {
	var v float64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptFloat64) SetTo(v float64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptFloat64) Get() (v float64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptFloat64) Or(d float64) float64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt32 returns new OptInt32 with value set to v.
func NewOptInt32(v int32) OptInt32 {
	return OptInt32{
		Value: v,
		Set:   true,
	}
}

// OptInt32 is optional int32.
type OptInt32 struct {
	Value int32
	Set   bool
}

// IsSet returns true if OptInt32 was set.
func (o OptInt32) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt32) Reset() {
	var v int32
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt32) SetTo(v int32) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt32) Get() (v int32, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt32) Or(d int32) int32 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptInt64 returns new OptInt64 with value set to v.
func NewOptInt64(v int64) OptInt64 {
	return OptInt64{
		Value: v,
		Set:   true,
	}
}

// OptInt64 is optional int64.
type OptInt64 struct {
	Value int64
	Set   bool
}

// IsSet returns true if OptInt64 was set.
func (o OptInt64) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptInt64) Reset() {
	var v int64
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptInt64) SetTo(v int64) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptInt64) Get() (v int64, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptInt64) Or(d int64) int64 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLeagueExpV4MiniSeriesDTO returns new OptLeagueExpV4MiniSeriesDTO with value set to v.
func NewOptLeagueExpV4MiniSeriesDTO(v LeagueExpV4MiniSeriesDTO) OptLeagueExpV4MiniSeriesDTO {
	return OptLeagueExpV4MiniSeriesDTO{
		Value: v,
		Set:   true,
	}
}

// OptLeagueExpV4MiniSeriesDTO is optional LeagueExpV4MiniSeriesDTO.
type OptLeagueExpV4MiniSeriesDTO struct {
	Value LeagueExpV4MiniSeriesDTO
	Set   bool
}

// IsSet returns true if OptLeagueExpV4MiniSeriesDTO was set.
func (o OptLeagueExpV4MiniSeriesDTO) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLeagueExpV4MiniSeriesDTO) Reset() {
	var v LeagueExpV4MiniSeriesDTO
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLeagueExpV4MiniSeriesDTO) SetTo(v LeagueExpV4MiniSeriesDTO) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLeagueExpV4MiniSeriesDTO) Get() (v LeagueExpV4MiniSeriesDTO, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLeagueExpV4MiniSeriesDTO) Or(d LeagueExpV4MiniSeriesDTO) LeagueExpV4MiniSeriesDTO {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLeagueV4MiniSeriesDTO returns new OptLeagueV4MiniSeriesDTO with value set to v.
func NewOptLeagueV4MiniSeriesDTO(v LeagueV4MiniSeriesDTO) OptLeagueV4MiniSeriesDTO {
	return OptLeagueV4MiniSeriesDTO{
		Value: v,
		Set:   true,
	}
}

// OptLeagueV4MiniSeriesDTO is optional LeagueV4MiniSeriesDTO.
type OptLeagueV4MiniSeriesDTO struct {
	Value LeagueV4MiniSeriesDTO
	Set   bool
}

// IsSet returns true if OptLeagueV4MiniSeriesDTO was set.
func (o OptLeagueV4MiniSeriesDTO) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLeagueV4MiniSeriesDTO) Reset() {
	var v LeagueV4MiniSeriesDTO
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLeagueV4MiniSeriesDTO) SetTo(v LeagueV4MiniSeriesDTO) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLeagueV4MiniSeriesDTO) Get() (v LeagueV4MiniSeriesDTO, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLeagueV4MiniSeriesDTO) Or(d LeagueV4MiniSeriesDTO) LeagueV4MiniSeriesDTO {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLolChallengesV1ChallengeConfigInfoDtoTracking returns new OptLolChallengesV1ChallengeConfigInfoDtoTracking with value set to v.
func NewOptLolChallengesV1ChallengeConfigInfoDtoTracking(v LolChallengesV1ChallengeConfigInfoDtoTracking) OptLolChallengesV1ChallengeConfigInfoDtoTracking {
	return OptLolChallengesV1ChallengeConfigInfoDtoTracking{
		Value: v,
		Set:   true,
	}
}

// OptLolChallengesV1ChallengeConfigInfoDtoTracking is optional LolChallengesV1ChallengeConfigInfoDtoTracking.
type OptLolChallengesV1ChallengeConfigInfoDtoTracking struct {
	Value LolChallengesV1ChallengeConfigInfoDtoTracking
	Set   bool
}

// IsSet returns true if OptLolChallengesV1ChallengeConfigInfoDtoTracking was set.
func (o OptLolChallengesV1ChallengeConfigInfoDtoTracking) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLolChallengesV1ChallengeConfigInfoDtoTracking) Reset() {
	var v LolChallengesV1ChallengeConfigInfoDtoTracking
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLolChallengesV1ChallengeConfigInfoDtoTracking) SetTo(v LolChallengesV1ChallengeConfigInfoDtoTracking) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLolChallengesV1ChallengeConfigInfoDtoTracking) Get() (v LolChallengesV1ChallengeConfigInfoDtoTracking, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLolChallengesV1ChallengeConfigInfoDtoTracking) Or(d LolChallengesV1ChallengeConfigInfoDtoTracking) LolChallengesV1ChallengeConfigInfoDtoTracking {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLolRsoMatchV1GetMatchIdsType returns new OptLolRsoMatchV1GetMatchIdsType with value set to v.
func NewOptLolRsoMatchV1GetMatchIdsType(v LolRsoMatchV1GetMatchIdsType) OptLolRsoMatchV1GetMatchIdsType {
	return OptLolRsoMatchV1GetMatchIdsType{
		Value: v,
		Set:   true,
	}
}

// OptLolRsoMatchV1GetMatchIdsType is optional LolRsoMatchV1GetMatchIdsType.
type OptLolRsoMatchV1GetMatchIdsType struct {
	Value LolRsoMatchV1GetMatchIdsType
	Set   bool
}

// IsSet returns true if OptLolRsoMatchV1GetMatchIdsType was set.
func (o OptLolRsoMatchV1GetMatchIdsType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLolRsoMatchV1GetMatchIdsType) Reset() {
	var v LolRsoMatchV1GetMatchIdsType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLolRsoMatchV1GetMatchIdsType) SetTo(v LolRsoMatchV1GetMatchIdsType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLolRsoMatchV1GetMatchIdsType) Get() (v LolRsoMatchV1GetMatchIdsType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLolRsoMatchV1GetMatchIdsType) Or(d LolRsoMatchV1GetMatchIdsType) LolRsoMatchV1GetMatchIdsType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLolStatusV4StatusDtoIncidentSeverity returns new OptLolStatusV4StatusDtoIncidentSeverity with value set to v.
func NewOptLolStatusV4StatusDtoIncidentSeverity(v LolStatusV4StatusDtoIncidentSeverity) OptLolStatusV4StatusDtoIncidentSeverity {
	return OptLolStatusV4StatusDtoIncidentSeverity{
		Value: v,
		Set:   true,
	}
}

// OptLolStatusV4StatusDtoIncidentSeverity is optional LolStatusV4StatusDtoIncidentSeverity.
type OptLolStatusV4StatusDtoIncidentSeverity struct {
	Value LolStatusV4StatusDtoIncidentSeverity
	Set   bool
}

// IsSet returns true if OptLolStatusV4StatusDtoIncidentSeverity was set.
func (o OptLolStatusV4StatusDtoIncidentSeverity) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLolStatusV4StatusDtoIncidentSeverity) Reset() {
	var v LolStatusV4StatusDtoIncidentSeverity
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLolStatusV4StatusDtoIncidentSeverity) SetTo(v LolStatusV4StatusDtoIncidentSeverity) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLolStatusV4StatusDtoIncidentSeverity) Get() (v LolStatusV4StatusDtoIncidentSeverity, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLolStatusV4StatusDtoIncidentSeverity) Or(d LolStatusV4StatusDtoIncidentSeverity) LolStatusV4StatusDtoIncidentSeverity {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptLolStatusV4StatusDtoMaintenanceStatus returns new OptLolStatusV4StatusDtoMaintenanceStatus with value set to v.
func NewOptLolStatusV4StatusDtoMaintenanceStatus(v LolStatusV4StatusDtoMaintenanceStatus) OptLolStatusV4StatusDtoMaintenanceStatus {
	return OptLolStatusV4StatusDtoMaintenanceStatus{
		Value: v,
		Set:   true,
	}
}

// OptLolStatusV4StatusDtoMaintenanceStatus is optional LolStatusV4StatusDtoMaintenanceStatus.
type OptLolStatusV4StatusDtoMaintenanceStatus struct {
	Value LolStatusV4StatusDtoMaintenanceStatus
	Set   bool
}

// IsSet returns true if OptLolStatusV4StatusDtoMaintenanceStatus was set.
func (o OptLolStatusV4StatusDtoMaintenanceStatus) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptLolStatusV4StatusDtoMaintenanceStatus) Reset() {
	var v LolStatusV4StatusDtoMaintenanceStatus
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptLolStatusV4StatusDtoMaintenanceStatus) SetTo(v LolStatusV4StatusDtoMaintenanceStatus) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptLolStatusV4StatusDtoMaintenanceStatus) Get() (v LolStatusV4StatusDtoMaintenanceStatus, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptLolStatusV4StatusDtoMaintenanceStatus) Or(d LolStatusV4StatusDtoMaintenanceStatus) LolStatusV4StatusDtoMaintenanceStatus {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ChallengesDto returns new OptMatchV5ChallengesDto with value set to v.
func NewOptMatchV5ChallengesDto(v MatchV5ChallengesDto) OptMatchV5ChallengesDto {
	return OptMatchV5ChallengesDto{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ChallengesDto is optional MatchV5ChallengesDto.
type OptMatchV5ChallengesDto struct {
	Value MatchV5ChallengesDto
	Set   bool
}

// IsSet returns true if OptMatchV5ChallengesDto was set.
func (o OptMatchV5ChallengesDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ChallengesDto) Reset() {
	var v MatchV5ChallengesDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ChallengesDto) SetTo(v MatchV5ChallengesDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ChallengesDto) Get() (v MatchV5ChallengesDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ChallengesDto) Or(d MatchV5ChallengesDto) MatchV5ChallengesDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ChallengesDtoFasterSupportQuestCompletion returns new OptMatchV5ChallengesDtoFasterSupportQuestCompletion with value set to v.
func NewOptMatchV5ChallengesDtoFasterSupportQuestCompletion(v MatchV5ChallengesDtoFasterSupportQuestCompletion) OptMatchV5ChallengesDtoFasterSupportQuestCompletion {
	return OptMatchV5ChallengesDtoFasterSupportQuestCompletion{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ChallengesDtoFasterSupportQuestCompletion is optional MatchV5ChallengesDtoFasterSupportQuestCompletion.
type OptMatchV5ChallengesDtoFasterSupportQuestCompletion struct {
	Value MatchV5ChallengesDtoFasterSupportQuestCompletion
	Set   bool
}

// IsSet returns true if OptMatchV5ChallengesDtoFasterSupportQuestCompletion was set.
func (o OptMatchV5ChallengesDtoFasterSupportQuestCompletion) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ChallengesDtoFasterSupportQuestCompletion) Reset() {
	var v MatchV5ChallengesDtoFasterSupportQuestCompletion
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ChallengesDtoFasterSupportQuestCompletion) SetTo(v MatchV5ChallengesDtoFasterSupportQuestCompletion) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ChallengesDtoFasterSupportQuestCompletion) Get() (v MatchV5ChallengesDtoFasterSupportQuestCompletion, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ChallengesDtoFasterSupportQuestCompletion) Or(d MatchV5ChallengesDtoFasterSupportQuestCompletion) MatchV5ChallengesDtoFasterSupportQuestCompletion {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ChallengesDtoHadAfkTeammate returns new OptMatchV5ChallengesDtoHadAfkTeammate with value set to v.
func NewOptMatchV5ChallengesDtoHadAfkTeammate(v MatchV5ChallengesDtoHadAfkTeammate) OptMatchV5ChallengesDtoHadAfkTeammate {
	return OptMatchV5ChallengesDtoHadAfkTeammate{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ChallengesDtoHadAfkTeammate is optional MatchV5ChallengesDtoHadAfkTeammate.
type OptMatchV5ChallengesDtoHadAfkTeammate struct {
	Value MatchV5ChallengesDtoHadAfkTeammate
	Set   bool
}

// IsSet returns true if OptMatchV5ChallengesDtoHadAfkTeammate was set.
func (o OptMatchV5ChallengesDtoHadAfkTeammate) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ChallengesDtoHadAfkTeammate) Reset() {
	var v MatchV5ChallengesDtoHadAfkTeammate
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ChallengesDtoHadAfkTeammate) SetTo(v MatchV5ChallengesDtoHadAfkTeammate) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ChallengesDtoHadAfkTeammate) Get() (v MatchV5ChallengesDtoHadAfkTeammate, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ChallengesDtoHadAfkTeammate) Or(d MatchV5ChallengesDtoHadAfkTeammate) MatchV5ChallengesDtoHadAfkTeammate {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ChallengesDtoHighestCrowdControlScore returns new OptMatchV5ChallengesDtoHighestCrowdControlScore with value set to v.
func NewOptMatchV5ChallengesDtoHighestCrowdControlScore(v MatchV5ChallengesDtoHighestCrowdControlScore) OptMatchV5ChallengesDtoHighestCrowdControlScore {
	return OptMatchV5ChallengesDtoHighestCrowdControlScore{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ChallengesDtoHighestCrowdControlScore is optional MatchV5ChallengesDtoHighestCrowdControlScore.
type OptMatchV5ChallengesDtoHighestCrowdControlScore struct {
	Value MatchV5ChallengesDtoHighestCrowdControlScore
	Set   bool
}

// IsSet returns true if OptMatchV5ChallengesDtoHighestCrowdControlScore was set.
func (o OptMatchV5ChallengesDtoHighestCrowdControlScore) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ChallengesDtoHighestCrowdControlScore) Reset() {
	var v MatchV5ChallengesDtoHighestCrowdControlScore
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ChallengesDtoHighestCrowdControlScore) SetTo(v MatchV5ChallengesDtoHighestCrowdControlScore) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ChallengesDtoHighestCrowdControlScore) Get() (v MatchV5ChallengesDtoHighestCrowdControlScore, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ChallengesDtoHighestCrowdControlScore) Or(d MatchV5ChallengesDtoHighestCrowdControlScore) MatchV5ChallengesDtoHighestCrowdControlScore {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ChallengesDtoHighestWardKills returns new OptMatchV5ChallengesDtoHighestWardKills with value set to v.
func NewOptMatchV5ChallengesDtoHighestWardKills(v MatchV5ChallengesDtoHighestWardKills) OptMatchV5ChallengesDtoHighestWardKills {
	return OptMatchV5ChallengesDtoHighestWardKills{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ChallengesDtoHighestWardKills is optional MatchV5ChallengesDtoHighestWardKills.
type OptMatchV5ChallengesDtoHighestWardKills struct {
	Value MatchV5ChallengesDtoHighestWardKills
	Set   bool
}

// IsSet returns true if OptMatchV5ChallengesDtoHighestWardKills was set.
func (o OptMatchV5ChallengesDtoHighestWardKills) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ChallengesDtoHighestWardKills) Reset() {
	var v MatchV5ChallengesDtoHighestWardKills
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ChallengesDtoHighestWardKills) SetTo(v MatchV5ChallengesDtoHighestWardKills) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ChallengesDtoHighestWardKills) Get() (v MatchV5ChallengesDtoHighestWardKills, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ChallengesDtoHighestWardKills) Or(d MatchV5ChallengesDtoHighestWardKills) MatchV5ChallengesDtoHighestWardKills {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage returns new OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage with value set to v.
func NewOptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage(v MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage {
	return OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage is optional MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage.
type OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage struct {
	Value MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage
	Set   bool
}

// IsSet returns true if OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage was set.
func (o OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) Reset() {
	var v MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) SetTo(v MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) Get() (v MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) Or(d MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage) MatchV5ChallengesDtoLaningPhaseGoldExpAdvantage {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ChallengesDtoPlayedChampSelectPosition returns new OptMatchV5ChallengesDtoPlayedChampSelectPosition with value set to v.
func NewOptMatchV5ChallengesDtoPlayedChampSelectPosition(v MatchV5ChallengesDtoPlayedChampSelectPosition) OptMatchV5ChallengesDtoPlayedChampSelectPosition {
	return OptMatchV5ChallengesDtoPlayedChampSelectPosition{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ChallengesDtoPlayedChampSelectPosition is optional MatchV5ChallengesDtoPlayedChampSelectPosition.
type OptMatchV5ChallengesDtoPlayedChampSelectPosition struct {
	Value MatchV5ChallengesDtoPlayedChampSelectPosition
	Set   bool
}

// IsSet returns true if OptMatchV5ChallengesDtoPlayedChampSelectPosition was set.
func (o OptMatchV5ChallengesDtoPlayedChampSelectPosition) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ChallengesDtoPlayedChampSelectPosition) Reset() {
	var v MatchV5ChallengesDtoPlayedChampSelectPosition
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ChallengesDtoPlayedChampSelectPosition) SetTo(v MatchV5ChallengesDtoPlayedChampSelectPosition) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ChallengesDtoPlayedChampSelectPosition) Get() (v MatchV5ChallengesDtoPlayedChampSelectPosition, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ChallengesDtoPlayedChampSelectPosition) Or(d MatchV5ChallengesDtoPlayedChampSelectPosition) MatchV5ChallengesDtoPlayedChampSelectPosition {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5FeatDto returns new OptMatchV5FeatDto with value set to v.
func NewOptMatchV5FeatDto(v MatchV5FeatDto) OptMatchV5FeatDto {
	return OptMatchV5FeatDto{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5FeatDto is optional MatchV5FeatDto.
type OptMatchV5FeatDto struct {
	Value MatchV5FeatDto
	Set   bool
}

// IsSet returns true if OptMatchV5FeatDto was set.
func (o OptMatchV5FeatDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5FeatDto) Reset() {
	var v MatchV5FeatDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5FeatDto) SetTo(v MatchV5FeatDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5FeatDto) Get() (v MatchV5FeatDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5FeatDto) Or(d MatchV5FeatDto) MatchV5FeatDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5FeatsDto returns new OptMatchV5FeatsDto with value set to v.
func NewOptMatchV5FeatsDto(v MatchV5FeatsDto) OptMatchV5FeatsDto {
	return OptMatchV5FeatsDto{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5FeatsDto is optional MatchV5FeatsDto.
type OptMatchV5FeatsDto struct {
	Value MatchV5FeatsDto
	Set   bool
}

// IsSet returns true if OptMatchV5FeatsDto was set.
func (o OptMatchV5FeatsDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5FeatsDto) Reset() {
	var v MatchV5FeatsDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5FeatsDto) SetTo(v MatchV5FeatsDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5FeatsDto) Get() (v MatchV5FeatsDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5FeatsDto) Or(d MatchV5FeatsDto) MatchV5FeatsDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5FramesTimeLineDtoParticipantFrames returns new OptMatchV5FramesTimeLineDtoParticipantFrames with value set to v.
func NewOptMatchV5FramesTimeLineDtoParticipantFrames(v MatchV5FramesTimeLineDtoParticipantFrames) OptMatchV5FramesTimeLineDtoParticipantFrames {
	return OptMatchV5FramesTimeLineDtoParticipantFrames{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5FramesTimeLineDtoParticipantFrames is optional MatchV5FramesTimeLineDtoParticipantFrames.
type OptMatchV5FramesTimeLineDtoParticipantFrames struct {
	Value MatchV5FramesTimeLineDtoParticipantFrames
	Set   bool
}

// IsSet returns true if OptMatchV5FramesTimeLineDtoParticipantFrames was set.
func (o OptMatchV5FramesTimeLineDtoParticipantFrames) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5FramesTimeLineDtoParticipantFrames) Reset() {
	var v MatchV5FramesTimeLineDtoParticipantFrames
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5FramesTimeLineDtoParticipantFrames) SetTo(v MatchV5FramesTimeLineDtoParticipantFrames) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5FramesTimeLineDtoParticipantFrames) Get() (v MatchV5FramesTimeLineDtoParticipantFrames, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5FramesTimeLineDtoParticipantFrames) Or(d MatchV5FramesTimeLineDtoParticipantFrames) MatchV5FramesTimeLineDtoParticipantFrames {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5GetMatchIdsByPUUIDType returns new OptMatchV5GetMatchIdsByPUUIDType with value set to v.
func NewOptMatchV5GetMatchIdsByPUUIDType(v MatchV5GetMatchIdsByPUUIDType) OptMatchV5GetMatchIdsByPUUIDType {
	return OptMatchV5GetMatchIdsByPUUIDType{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5GetMatchIdsByPUUIDType is optional MatchV5GetMatchIdsByPUUIDType.
type OptMatchV5GetMatchIdsByPUUIDType struct {
	Value MatchV5GetMatchIdsByPUUIDType
	Set   bool
}

// IsSet returns true if OptMatchV5GetMatchIdsByPUUIDType was set.
func (o OptMatchV5GetMatchIdsByPUUIDType) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5GetMatchIdsByPUUIDType) Reset() {
	var v MatchV5GetMatchIdsByPUUIDType
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5GetMatchIdsByPUUIDType) SetTo(v MatchV5GetMatchIdsByPUUIDType) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5GetMatchIdsByPUUIDType) Get() (v MatchV5GetMatchIdsByPUUIDType, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5GetMatchIdsByPUUIDType) Or(d MatchV5GetMatchIdsByPUUIDType) MatchV5GetMatchIdsByPUUIDType {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5MissionsDto returns new OptMatchV5MissionsDto with value set to v.
func NewOptMatchV5MissionsDto(v MatchV5MissionsDto) OptMatchV5MissionsDto {
	return OptMatchV5MissionsDto{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5MissionsDto is optional MatchV5MissionsDto.
type OptMatchV5MissionsDto struct {
	Value MatchV5MissionsDto
	Set   bool
}

// IsSet returns true if OptMatchV5MissionsDto was set.
func (o OptMatchV5MissionsDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5MissionsDto) Reset() {
	var v MatchV5MissionsDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5MissionsDto) SetTo(v MatchV5MissionsDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5MissionsDto) Get() (v MatchV5MissionsDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5MissionsDto) Or(d MatchV5MissionsDto) MatchV5MissionsDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5ObjectiveDto returns new OptMatchV5ObjectiveDto with value set to v.
func NewOptMatchV5ObjectiveDto(v MatchV5ObjectiveDto) OptMatchV5ObjectiveDto {
	return OptMatchV5ObjectiveDto{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5ObjectiveDto is optional MatchV5ObjectiveDto.
type OptMatchV5ObjectiveDto struct {
	Value MatchV5ObjectiveDto
	Set   bool
}

// IsSet returns true if OptMatchV5ObjectiveDto was set.
func (o OptMatchV5ObjectiveDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5ObjectiveDto) Reset() {
	var v MatchV5ObjectiveDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5ObjectiveDto) SetTo(v MatchV5ObjectiveDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5ObjectiveDto) Get() (v MatchV5ObjectiveDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5ObjectiveDto) Or(d MatchV5ObjectiveDto) MatchV5ObjectiveDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptMatchV5PositionDto returns new OptMatchV5PositionDto with value set to v.
func NewOptMatchV5PositionDto(v MatchV5PositionDto) OptMatchV5PositionDto {
	return OptMatchV5PositionDto{
		Value: v,
		Set:   true,
	}
}

// OptMatchV5PositionDto is optional MatchV5PositionDto.
type OptMatchV5PositionDto struct {
	Value MatchV5PositionDto
	Set   bool
}

// IsSet returns true if OptMatchV5PositionDto was set.
func (o OptMatchV5PositionDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptMatchV5PositionDto) Reset() {
	var v MatchV5PositionDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptMatchV5PositionDto) SetTo(v MatchV5PositionDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptMatchV5PositionDto) Get() (v MatchV5PositionDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptMatchV5PositionDto) Or(d MatchV5PositionDto) MatchV5PositionDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSpectatorTftV5Perks returns new OptSpectatorTftV5Perks with value set to v.
func NewOptSpectatorTftV5Perks(v SpectatorTftV5Perks) OptSpectatorTftV5Perks {
	return OptSpectatorTftV5Perks{
		Value: v,
		Set:   true,
	}
}

// OptSpectatorTftV5Perks is optional SpectatorTftV5Perks.
type OptSpectatorTftV5Perks struct {
	Value SpectatorTftV5Perks
	Set   bool
}

// IsSet returns true if OptSpectatorTftV5Perks was set.
func (o OptSpectatorTftV5Perks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSpectatorTftV5Perks) Reset() {
	var v SpectatorTftV5Perks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSpectatorTftV5Perks) SetTo(v SpectatorTftV5Perks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSpectatorTftV5Perks) Get() (v SpectatorTftV5Perks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSpectatorTftV5Perks) Or(d SpectatorTftV5Perks) SpectatorTftV5Perks {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptSpectatorV5Perks returns new OptSpectatorV5Perks with value set to v.
func NewOptSpectatorV5Perks(v SpectatorV5Perks) OptSpectatorV5Perks {
	return OptSpectatorV5Perks{
		Value: v,
		Set:   true,
	}
}

// OptSpectatorV5Perks is optional SpectatorV5Perks.
type OptSpectatorV5Perks struct {
	Value SpectatorV5Perks
	Set   bool
}

// IsSet returns true if OptSpectatorV5Perks was set.
func (o OptSpectatorV5Perks) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptSpectatorV5Perks) Reset() {
	var v SpectatorV5Perks
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptSpectatorV5Perks) SetTo(v SpectatorV5Perks) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptSpectatorV5Perks) Get() (v SpectatorV5Perks, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptSpectatorV5Perks) Or(d SpectatorV5Perks) SpectatorV5Perks {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptString returns new OptString with value set to v.
func NewOptString(v string) OptString {
	return OptString{
		Value: v,
		Set:   true,
	}
}

// OptString is optional string.
type OptString struct {
	Value string
	Set   bool
}

// IsSet returns true if OptString was set.
func (o OptString) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptString) Reset() {
	var v string
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptString) SetTo(v string) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptString) Get() (v string, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptString) Or(d string) string {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftLeagueV1GetChallengerLeagueQueue returns new OptTftLeagueV1GetChallengerLeagueQueue with value set to v.
func NewOptTftLeagueV1GetChallengerLeagueQueue(v TftLeagueV1GetChallengerLeagueQueue) OptTftLeagueV1GetChallengerLeagueQueue {
	return OptTftLeagueV1GetChallengerLeagueQueue{
		Value: v,
		Set:   true,
	}
}

// OptTftLeagueV1GetChallengerLeagueQueue is optional TftLeagueV1GetChallengerLeagueQueue.
type OptTftLeagueV1GetChallengerLeagueQueue struct {
	Value TftLeagueV1GetChallengerLeagueQueue
	Set   bool
}

// IsSet returns true if OptTftLeagueV1GetChallengerLeagueQueue was set.
func (o OptTftLeagueV1GetChallengerLeagueQueue) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftLeagueV1GetChallengerLeagueQueue) Reset() {
	var v TftLeagueV1GetChallengerLeagueQueue
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftLeagueV1GetChallengerLeagueQueue) SetTo(v TftLeagueV1GetChallengerLeagueQueue) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftLeagueV1GetChallengerLeagueQueue) Get() (v TftLeagueV1GetChallengerLeagueQueue, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftLeagueV1GetChallengerLeagueQueue) Or(d TftLeagueV1GetChallengerLeagueQueue) TftLeagueV1GetChallengerLeagueQueue {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftLeagueV1GetGrandmasterLeagueQueue returns new OptTftLeagueV1GetGrandmasterLeagueQueue with value set to v.
func NewOptTftLeagueV1GetGrandmasterLeagueQueue(v TftLeagueV1GetGrandmasterLeagueQueue) OptTftLeagueV1GetGrandmasterLeagueQueue {
	return OptTftLeagueV1GetGrandmasterLeagueQueue{
		Value: v,
		Set:   true,
	}
}

// OptTftLeagueV1GetGrandmasterLeagueQueue is optional TftLeagueV1GetGrandmasterLeagueQueue.
type OptTftLeagueV1GetGrandmasterLeagueQueue struct {
	Value TftLeagueV1GetGrandmasterLeagueQueue
	Set   bool
}

// IsSet returns true if OptTftLeagueV1GetGrandmasterLeagueQueue was set.
func (o OptTftLeagueV1GetGrandmasterLeagueQueue) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftLeagueV1GetGrandmasterLeagueQueue) Reset() {
	var v TftLeagueV1GetGrandmasterLeagueQueue
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftLeagueV1GetGrandmasterLeagueQueue) SetTo(v TftLeagueV1GetGrandmasterLeagueQueue) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftLeagueV1GetGrandmasterLeagueQueue) Get() (v TftLeagueV1GetGrandmasterLeagueQueue, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftLeagueV1GetGrandmasterLeagueQueue) Or(d TftLeagueV1GetGrandmasterLeagueQueue) TftLeagueV1GetGrandmasterLeagueQueue {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftLeagueV1GetLeagueEntriesQueue returns new OptTftLeagueV1GetLeagueEntriesQueue with value set to v.
func NewOptTftLeagueV1GetLeagueEntriesQueue(v TftLeagueV1GetLeagueEntriesQueue) OptTftLeagueV1GetLeagueEntriesQueue {
	return OptTftLeagueV1GetLeagueEntriesQueue{
		Value: v,
		Set:   true,
	}
}

// OptTftLeagueV1GetLeagueEntriesQueue is optional TftLeagueV1GetLeagueEntriesQueue.
type OptTftLeagueV1GetLeagueEntriesQueue struct {
	Value TftLeagueV1GetLeagueEntriesQueue
	Set   bool
}

// IsSet returns true if OptTftLeagueV1GetLeagueEntriesQueue was set.
func (o OptTftLeagueV1GetLeagueEntriesQueue) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftLeagueV1GetLeagueEntriesQueue) Reset() {
	var v TftLeagueV1GetLeagueEntriesQueue
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftLeagueV1GetLeagueEntriesQueue) SetTo(v TftLeagueV1GetLeagueEntriesQueue) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftLeagueV1GetLeagueEntriesQueue) Get() (v TftLeagueV1GetLeagueEntriesQueue, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftLeagueV1GetLeagueEntriesQueue) Or(d TftLeagueV1GetLeagueEntriesQueue) TftLeagueV1GetLeagueEntriesQueue {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftLeagueV1GetMasterLeagueQueue returns new OptTftLeagueV1GetMasterLeagueQueue with value set to v.
func NewOptTftLeagueV1GetMasterLeagueQueue(v TftLeagueV1GetMasterLeagueQueue) OptTftLeagueV1GetMasterLeagueQueue {
	return OptTftLeagueV1GetMasterLeagueQueue{
		Value: v,
		Set:   true,
	}
}

// OptTftLeagueV1GetMasterLeagueQueue is optional TftLeagueV1GetMasterLeagueQueue.
type OptTftLeagueV1GetMasterLeagueQueue struct {
	Value TftLeagueV1GetMasterLeagueQueue
	Set   bool
}

// IsSet returns true if OptTftLeagueV1GetMasterLeagueQueue was set.
func (o OptTftLeagueV1GetMasterLeagueQueue) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftLeagueV1GetMasterLeagueQueue) Reset() {
	var v TftLeagueV1GetMasterLeagueQueue
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftLeagueV1GetMasterLeagueQueue) SetTo(v TftLeagueV1GetMasterLeagueQueue) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftLeagueV1GetMasterLeagueQueue) Get() (v TftLeagueV1GetMasterLeagueQueue, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftLeagueV1GetMasterLeagueQueue) Or(d TftLeagueV1GetMasterLeagueQueue) TftLeagueV1GetMasterLeagueQueue {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftLeagueV1LeagueEntryDTORatedTier returns new OptTftLeagueV1LeagueEntryDTORatedTier with value set to v.
func NewOptTftLeagueV1LeagueEntryDTORatedTier(v TftLeagueV1LeagueEntryDTORatedTier) OptTftLeagueV1LeagueEntryDTORatedTier {
	return OptTftLeagueV1LeagueEntryDTORatedTier{
		Value: v,
		Set:   true,
	}
}

// OptTftLeagueV1LeagueEntryDTORatedTier is optional TftLeagueV1LeagueEntryDTORatedTier.
type OptTftLeagueV1LeagueEntryDTORatedTier struct {
	Value TftLeagueV1LeagueEntryDTORatedTier
	Set   bool
}

// IsSet returns true if OptTftLeagueV1LeagueEntryDTORatedTier was set.
func (o OptTftLeagueV1LeagueEntryDTORatedTier) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftLeagueV1LeagueEntryDTORatedTier) Reset() {
	var v TftLeagueV1LeagueEntryDTORatedTier
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftLeagueV1LeagueEntryDTORatedTier) SetTo(v TftLeagueV1LeagueEntryDTORatedTier) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftLeagueV1LeagueEntryDTORatedTier) Get() (v TftLeagueV1LeagueEntryDTORatedTier, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftLeagueV1LeagueEntryDTORatedTier) Or(d TftLeagueV1LeagueEntryDTORatedTier) TftLeagueV1LeagueEntryDTORatedTier {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftLeagueV1MiniSeriesDTO returns new OptTftLeagueV1MiniSeriesDTO with value set to v.
func NewOptTftLeagueV1MiniSeriesDTO(v TftLeagueV1MiniSeriesDTO) OptTftLeagueV1MiniSeriesDTO {
	return OptTftLeagueV1MiniSeriesDTO{
		Value: v,
		Set:   true,
	}
}

// OptTftLeagueV1MiniSeriesDTO is optional TftLeagueV1MiniSeriesDTO.
type OptTftLeagueV1MiniSeriesDTO struct {
	Value TftLeagueV1MiniSeriesDTO
	Set   bool
}

// IsSet returns true if OptTftLeagueV1MiniSeriesDTO was set.
func (o OptTftLeagueV1MiniSeriesDTO) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftLeagueV1MiniSeriesDTO) Reset() {
	var v TftLeagueV1MiniSeriesDTO
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftLeagueV1MiniSeriesDTO) SetTo(v TftLeagueV1MiniSeriesDTO) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftLeagueV1MiniSeriesDTO) Get() (v TftLeagueV1MiniSeriesDTO, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftLeagueV1MiniSeriesDTO) Or(d TftLeagueV1MiniSeriesDTO) TftLeagueV1MiniSeriesDTO {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftMatchV1ParticipantDtoSkillTree returns new OptTftMatchV1ParticipantDtoSkillTree with value set to v.
func NewOptTftMatchV1ParticipantDtoSkillTree(v TftMatchV1ParticipantDtoSkillTree) OptTftMatchV1ParticipantDtoSkillTree {
	return OptTftMatchV1ParticipantDtoSkillTree{
		Value: v,
		Set:   true,
	}
}

// OptTftMatchV1ParticipantDtoSkillTree is optional TftMatchV1ParticipantDtoSkillTree.
type OptTftMatchV1ParticipantDtoSkillTree struct {
	Value TftMatchV1ParticipantDtoSkillTree
	Set   bool
}

// IsSet returns true if OptTftMatchV1ParticipantDtoSkillTree was set.
func (o OptTftMatchV1ParticipantDtoSkillTree) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftMatchV1ParticipantDtoSkillTree) Reset() {
	var v TftMatchV1ParticipantDtoSkillTree
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftMatchV1ParticipantDtoSkillTree) SetTo(v TftMatchV1ParticipantDtoSkillTree) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftMatchV1ParticipantDtoSkillTree) Get() (v TftMatchV1ParticipantDtoSkillTree, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftMatchV1ParticipantDtoSkillTree) Or(d TftMatchV1ParticipantDtoSkillTree) TftMatchV1ParticipantDtoSkillTree {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTftMatchV1ParticipantMissionsDto returns new OptTftMatchV1ParticipantMissionsDto with value set to v.
func NewOptTftMatchV1ParticipantMissionsDto(v TftMatchV1ParticipantMissionsDto) OptTftMatchV1ParticipantMissionsDto {
	return OptTftMatchV1ParticipantMissionsDto{
		Value: v,
		Set:   true,
	}
}

// OptTftMatchV1ParticipantMissionsDto is optional TftMatchV1ParticipantMissionsDto.
type OptTftMatchV1ParticipantMissionsDto struct {
	Value TftMatchV1ParticipantMissionsDto
	Set   bool
}

// IsSet returns true if OptTftMatchV1ParticipantMissionsDto was set.
func (o OptTftMatchV1ParticipantMissionsDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTftMatchV1ParticipantMissionsDto) Reset() {
	var v TftMatchV1ParticipantMissionsDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTftMatchV1ParticipantMissionsDto) SetTo(v TftMatchV1ParticipantMissionsDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTftMatchV1ParticipantMissionsDto) Get() (v TftMatchV1ParticipantMissionsDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTftMatchV1ParticipantMissionsDto) Or(d TftMatchV1ParticipantMissionsDto) TftMatchV1ParticipantMissionsDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptTournamentV5TournamentCodeUpdateParametersV5 returns new OptTournamentV5TournamentCodeUpdateParametersV5 with value set to v.
func NewOptTournamentV5TournamentCodeUpdateParametersV5(v TournamentV5TournamentCodeUpdateParametersV5) OptTournamentV5TournamentCodeUpdateParametersV5 {
	return OptTournamentV5TournamentCodeUpdateParametersV5{
		Value: v,
		Set:   true,
	}
}

// OptTournamentV5TournamentCodeUpdateParametersV5 is optional TournamentV5TournamentCodeUpdateParametersV5.
type OptTournamentV5TournamentCodeUpdateParametersV5 struct {
	Value TournamentV5TournamentCodeUpdateParametersV5
	Set   bool
}

// IsSet returns true if OptTournamentV5TournamentCodeUpdateParametersV5 was set.
func (o OptTournamentV5TournamentCodeUpdateParametersV5) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptTournamentV5TournamentCodeUpdateParametersV5) Reset() {
	var v TournamentV5TournamentCodeUpdateParametersV5
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptTournamentV5TournamentCodeUpdateParametersV5) SetTo(v TournamentV5TournamentCodeUpdateParametersV5) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptTournamentV5TournamentCodeUpdateParametersV5) Get() (v TournamentV5TournamentCodeUpdateParametersV5, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptTournamentV5TournamentCodeUpdateParametersV5) Or(d TournamentV5TournamentCodeUpdateParametersV5) TournamentV5TournamentCodeUpdateParametersV5 {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptValConsoleMatchV1AbilityCastsDto returns new OptValConsoleMatchV1AbilityCastsDto with value set to v.
func NewOptValConsoleMatchV1AbilityCastsDto(v ValConsoleMatchV1AbilityCastsDto) OptValConsoleMatchV1AbilityCastsDto {
	return OptValConsoleMatchV1AbilityCastsDto{
		Value: v,
		Set:   true,
	}
}

// OptValConsoleMatchV1AbilityCastsDto is optional ValConsoleMatchV1AbilityCastsDto.
type OptValConsoleMatchV1AbilityCastsDto struct {
	Value ValConsoleMatchV1AbilityCastsDto
	Set   bool
}

// IsSet returns true if OptValConsoleMatchV1AbilityCastsDto was set.
func (o OptValConsoleMatchV1AbilityCastsDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptValConsoleMatchV1AbilityCastsDto) Reset() {
	var v ValConsoleMatchV1AbilityCastsDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptValConsoleMatchV1AbilityCastsDto) SetTo(v ValConsoleMatchV1AbilityCastsDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptValConsoleMatchV1AbilityCastsDto) Get() (v ValConsoleMatchV1AbilityCastsDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptValConsoleMatchV1AbilityCastsDto) Or(d ValConsoleMatchV1AbilityCastsDto) ValConsoleMatchV1AbilityCastsDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptValConsoleMatchV1PlayerStatsDto returns new OptValConsoleMatchV1PlayerStatsDto with value set to v.
func NewOptValConsoleMatchV1PlayerStatsDto(v ValConsoleMatchV1PlayerStatsDto) OptValConsoleMatchV1PlayerStatsDto {
	return OptValConsoleMatchV1PlayerStatsDto{
		Value: v,
		Set:   true,
	}
}

// OptValConsoleMatchV1PlayerStatsDto is optional ValConsoleMatchV1PlayerStatsDto.
type OptValConsoleMatchV1PlayerStatsDto struct {
	Value ValConsoleMatchV1PlayerStatsDto
	Set   bool
}

// IsSet returns true if OptValConsoleMatchV1PlayerStatsDto was set.
func (o OptValConsoleMatchV1PlayerStatsDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptValConsoleMatchV1PlayerStatsDto) Reset() {
	var v ValConsoleMatchV1PlayerStatsDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptValConsoleMatchV1PlayerStatsDto) SetTo(v ValConsoleMatchV1PlayerStatsDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptValConsoleMatchV1PlayerStatsDto) Get() (v ValConsoleMatchV1PlayerStatsDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptValConsoleMatchV1PlayerStatsDto) Or(d ValConsoleMatchV1PlayerStatsDto) ValConsoleMatchV1PlayerStatsDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptValContentV1LocalizedNamesDto returns new OptValContentV1LocalizedNamesDto with value set to v.
func NewOptValContentV1LocalizedNamesDto(v ValContentV1LocalizedNamesDto) OptValContentV1LocalizedNamesDto {
	return OptValContentV1LocalizedNamesDto{
		Value: v,
		Set:   true,
	}
}

// OptValContentV1LocalizedNamesDto is optional ValContentV1LocalizedNamesDto.
type OptValContentV1LocalizedNamesDto struct {
	Value ValContentV1LocalizedNamesDto
	Set   bool
}

// IsSet returns true if OptValContentV1LocalizedNamesDto was set.
func (o OptValContentV1LocalizedNamesDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptValContentV1LocalizedNamesDto) Reset() {
	var v ValContentV1LocalizedNamesDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptValContentV1LocalizedNamesDto) SetTo(v ValContentV1LocalizedNamesDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptValContentV1LocalizedNamesDto) Get() (v ValContentV1LocalizedNamesDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptValContentV1LocalizedNamesDto) Or(d ValContentV1LocalizedNamesDto) ValContentV1LocalizedNamesDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptValMatchV1AbilityCastsDto returns new OptValMatchV1AbilityCastsDto with value set to v.
func NewOptValMatchV1AbilityCastsDto(v ValMatchV1AbilityCastsDto) OptValMatchV1AbilityCastsDto {
	return OptValMatchV1AbilityCastsDto{
		Value: v,
		Set:   true,
	}
}

// OptValMatchV1AbilityCastsDto is optional ValMatchV1AbilityCastsDto.
type OptValMatchV1AbilityCastsDto struct {
	Value ValMatchV1AbilityCastsDto
	Set   bool
}

// IsSet returns true if OptValMatchV1AbilityCastsDto was set.
func (o OptValMatchV1AbilityCastsDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptValMatchV1AbilityCastsDto) Reset() {
	var v ValMatchV1AbilityCastsDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptValMatchV1AbilityCastsDto) SetTo(v ValMatchV1AbilityCastsDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptValMatchV1AbilityCastsDto) Get() (v ValMatchV1AbilityCastsDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptValMatchV1AbilityCastsDto) Or(d ValMatchV1AbilityCastsDto) ValMatchV1AbilityCastsDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptValMatchV1PlayerStatsDto returns new OptValMatchV1PlayerStatsDto with value set to v.
func NewOptValMatchV1PlayerStatsDto(v ValMatchV1PlayerStatsDto) OptValMatchV1PlayerStatsDto {
	return OptValMatchV1PlayerStatsDto{
		Value: v,
		Set:   true,
	}
}

// OptValMatchV1PlayerStatsDto is optional ValMatchV1PlayerStatsDto.
type OptValMatchV1PlayerStatsDto struct {
	Value ValMatchV1PlayerStatsDto
	Set   bool
}

// IsSet returns true if OptValMatchV1PlayerStatsDto was set.
func (o OptValMatchV1PlayerStatsDto) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptValMatchV1PlayerStatsDto) Reset() {
	var v ValMatchV1PlayerStatsDto
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptValMatchV1PlayerStatsDto) SetTo(v ValMatchV1PlayerStatsDto) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptValMatchV1PlayerStatsDto) Get() (v ValMatchV1PlayerStatsDto, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptValMatchV1PlayerStatsDto) Or(d ValMatchV1PlayerStatsDto) ValMatchV1PlayerStatsDto {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

// NewOptValRankedV1LeaderboardDtoTierDetails returns new OptValRankedV1LeaderboardDtoTierDetails with value set to v.
func NewOptValRankedV1LeaderboardDtoTierDetails(v ValRankedV1LeaderboardDtoTierDetails) OptValRankedV1LeaderboardDtoTierDetails {
	return OptValRankedV1LeaderboardDtoTierDetails{
		Value: v,
		Set:   true,
	}
}

// OptValRankedV1LeaderboardDtoTierDetails is optional ValRankedV1LeaderboardDtoTierDetails.
type OptValRankedV1LeaderboardDtoTierDetails struct {
	Value ValRankedV1LeaderboardDtoTierDetails
	Set   bool
}

// IsSet returns true if OptValRankedV1LeaderboardDtoTierDetails was set.
func (o OptValRankedV1LeaderboardDtoTierDetails) IsSet() bool { return o.Set }

// Reset unsets value.
func (o *OptValRankedV1LeaderboardDtoTierDetails) Reset() {
	var v ValRankedV1LeaderboardDtoTierDetails
	o.Value = v
	o.Set = false
}

// SetTo sets value to v.
func (o *OptValRankedV1LeaderboardDtoTierDetails) SetTo(v ValRankedV1LeaderboardDtoTierDetails) {
	o.Set = true
	o.Value = v
}

// Get returns value and boolean that denotes whether value was set.
func (o OptValRankedV1LeaderboardDtoTierDetails) Get() (v ValRankedV1LeaderboardDtoTierDetails, ok bool) {
	if !o.Set {
		return v, false
	}
	return o.Value, true
}

// Or returns value if set, or given parameter if does not.
func (o OptValRankedV1LeaderboardDtoTierDetails) Or(d ValRankedV1LeaderboardDtoTierDetails) ValRankedV1LeaderboardDtoTierDetails {
	if v, ok := o.Get(); ok {
		return v
	}
	return d
}

type Rso struct {
	Token  string
	Scopes []string
}

// GetToken returns the value of Token.
func (s *Rso) GetToken() string {
	return s.Token
}

// GetScopes returns the value of Scopes.
func (s *Rso) GetScopes() []string {
	return s.Scopes
}

// SetToken sets the value of Token.
func (s *Rso) SetToken(val string) {
	s.Token = val
}

// SetScopes sets the value of Scopes.
func (s *Rso) SetScopes(val []string) {
	s.Scopes = val
}

// Ref: #/components/schemas/spectator-tft-v5.BannedChampion
type SpectatorTftV5BannedChampion struct {
	// The turn during which the champion was banned.
	PickTurn int32 `json:"pickTurn"`
	// The ID of the banned champion.
	ChampionId int64 `json:"championId"`
	// The ID of the team that banned the champion.
	TeamId int64 `json:"teamId"`
}

// GetPickTurn returns the value of PickTurn.
func (s *SpectatorTftV5BannedChampion) GetPickTurn() int32 {
	return s.PickTurn
}

// GetChampionId returns the value of ChampionId.
func (s *SpectatorTftV5BannedChampion) GetChampionId() int64 {
	return s.ChampionId
}

// GetTeamId returns the value of TeamId.
func (s *SpectatorTftV5BannedChampion) GetTeamId() int64 {
	return s.TeamId
}

// SetPickTurn sets the value of PickTurn.
func (s *SpectatorTftV5BannedChampion) SetPickTurn(val int32) {
	s.PickTurn = val
}

// SetChampionId sets the value of ChampionId.
func (s *SpectatorTftV5BannedChampion) SetChampionId(val int64) {
	s.ChampionId = val
}

// SetTeamId sets the value of TeamId.
func (s *SpectatorTftV5BannedChampion) SetTeamId(val int64) {
	s.TeamId = val
}

// Ref: #/components/schemas/spectator-tft-v5.CurrentGameInfo
type SpectatorTftV5CurrentGameInfo struct {
	// The ID of the game.
	GameId int64 `json:"gameId"`
	// The game type.
	GameType string `json:"gameType"`
	// The game start time represented in epoch milliseconds.
	GameStartTime int64 `json:"gameStartTime"`
	// The ID of the map.
	MapId int64 `json:"mapId"`
	// The amount of time in seconds that has passed since the game started.
	GameLength int64 `json:"gameLength"`
	// The ID of the platform on which the game is being played.
	PlatformId string `json:"platformId"`
	// The game mode.
	GameMode string `json:"gameMode"`
	// Banned champion information.
	BannedChampions []SpectatorTftV5BannedChampion `json:"bannedChampions"`
	// The queue type (queue types are documented on the Game Constants page).
	GameQueueConfigId OptInt64 `json:"gameQueueConfigId"`
	// The observer information.
	Observers SpectatorTftV5Observer `json:"observers"`
	// The participant information.
	Participants []SpectatorTftV5CurrentGameParticipant `json:"participants"`
}

// GetGameId returns the value of GameId.
func (s *SpectatorTftV5CurrentGameInfo) GetGameId() int64 {
	return s.GameId
}

// GetGameType returns the value of GameType.
func (s *SpectatorTftV5CurrentGameInfo) GetGameType() string {
	return s.GameType
}

// GetGameStartTime returns the value of GameStartTime.
func (s *SpectatorTftV5CurrentGameInfo) GetGameStartTime() int64 {
	return s.GameStartTime
}

// GetMapId returns the value of MapId.
func (s *SpectatorTftV5CurrentGameInfo) GetMapId() int64 {
	return s.MapId
}

// GetGameLength returns the value of GameLength.
func (s *SpectatorTftV5CurrentGameInfo) GetGameLength() int64 {
	return s.GameLength
}

// GetPlatformId returns the value of PlatformId.
func (s *SpectatorTftV5CurrentGameInfo) GetPlatformId() string {
	return s.PlatformId
}

// GetGameMode returns the value of GameMode.
func (s *SpectatorTftV5CurrentGameInfo) GetGameMode() string {
	return s.GameMode
}

// GetBannedChampions returns the value of BannedChampions.
func (s *SpectatorTftV5CurrentGameInfo) GetBannedChampions() []SpectatorTftV5BannedChampion {
	return s.BannedChampions
}

// GetGameQueueConfigId returns the value of GameQueueConfigId.
func (s *SpectatorTftV5CurrentGameInfo) GetGameQueueConfigId() OptInt64 {
	return s.GameQueueConfigId
}

// GetObservers returns the value of Observers.
func (s *SpectatorTftV5CurrentGameInfo) GetObservers() SpectatorTftV5Observer {
	return s.Observers
}

// GetParticipants returns the value of Participants.
func (s *SpectatorTftV5CurrentGameInfo) GetParticipants() []SpectatorTftV5CurrentGameParticipant {
	return s.Participants
}

// SetGameId sets the value of GameId.
func (s *SpectatorTftV5CurrentGameInfo) SetGameId(val int64) {
	s.GameId = val
}

// SetGameType sets the value of GameType.
func (s *SpectatorTftV5CurrentGameInfo) SetGameType(val string) {
	s.GameType = val
}

// SetGameStartTime sets the value of GameStartTime.
func (s *SpectatorTftV5CurrentGameInfo) SetGameStartTime(val int64) {
	s.GameStartTime = val
}

// SetMapId sets the value of MapId.
func (s *SpectatorTftV5CurrentGameInfo) SetMapId(val int64) {
	s.MapId = val
}

// SetGameLength sets the value of GameLength.
func (s *SpectatorTftV5CurrentGameInfo) SetGameLength(val int64) {
	s.GameLength = val
}

// SetPlatformId sets the value of PlatformId.
func (s *SpectatorTftV5CurrentGameInfo) SetPlatformId(val string) {
	s.PlatformId = val
}

// SetGameMode sets the value of GameMode.
func (s *SpectatorTftV5CurrentGameInfo) SetGameMode(val string) {
	s.GameMode = val
}

// SetBannedChampions sets the value of BannedChampions.
func (s *SpectatorTftV5CurrentGameInfo) SetBannedChampions(val []SpectatorTftV5BannedChampion) {
	s.BannedChampions = val
}

// SetGameQueueConfigId sets the value of GameQueueConfigId.
func (s *SpectatorTftV5CurrentGameInfo) SetGameQueueConfigId(val OptInt64) {
	s.GameQueueConfigId = val
}

// SetObservers sets the value of Observers.
func (s *SpectatorTftV5CurrentGameInfo) SetObservers(val SpectatorTftV5Observer) {
	s.Observers = val
}

// SetParticipants sets the value of Participants.
func (s *SpectatorTftV5CurrentGameInfo) SetParticipants(val []SpectatorTftV5CurrentGameParticipant) {
	s.Participants = val
}

func (*SpectatorTftV5CurrentGameInfo) spectatorTftV5GetCurrentGameInfoByPuuidRes() {}

// Ref: #/components/schemas/spectator-tft-v5.CurrentGameParticipant
type SpectatorTftV5CurrentGameParticipant struct {
	// The ID of the champion played by this participant.
	ChampionId int64 `json:"championId"`
	// Perks/Runes Reforged Information.
	Perks OptSpectatorTftV5Perks `json:"perks"`
	// The ID of the profile icon used by this participant.
	ProfileIconId int64 `json:"profileIconId"`
	// The team ID of this participant, indicating the participant's team.
	TeamId int64 `json:"teamId"`
	// The encrypted puuid of this participant.
	Puuid OptString `json:"puuid"`
	// The ID of the first summoner spell used by this participant.
	Spell1Id int64 `json:"spell1Id"`
	// The ID of the second summoner spell used by this participant.
	Spell2Id int64 `json:"spell2Id"`
	// List of Game Customizations.
	GameCustomizationObjects []SpectatorTftV5GameCustomizationObject `json:"gameCustomizationObjects"`
	RiotId                   OptString                               `json:"riotId"`
}

// GetChampionId returns the value of ChampionId.
func (s *SpectatorTftV5CurrentGameParticipant) GetChampionId() int64 {
	return s.ChampionId
}

// GetPerks returns the value of Perks.
func (s *SpectatorTftV5CurrentGameParticipant) GetPerks() OptSpectatorTftV5Perks {
	return s.Perks
}

// GetProfileIconId returns the value of ProfileIconId.
func (s *SpectatorTftV5CurrentGameParticipant) GetProfileIconId() int64 {
	return s.ProfileIconId
}

// GetTeamId returns the value of TeamId.
func (s *SpectatorTftV5CurrentGameParticipant) GetTeamId() int64 {
	return s.TeamId
}

// GetPuuid returns the value of Puuid.
func (s *SpectatorTftV5CurrentGameParticipant) GetPuuid() OptString {
	return s.Puuid
}

// GetSpell1Id returns the value of Spell1Id.
func (s *SpectatorTftV5CurrentGameParticipant) GetSpell1Id() int64 {
	return s.Spell1Id
}

// GetSpell2Id returns the value of Spell2Id.
func (s *SpectatorTftV5CurrentGameParticipant) GetSpell2Id() int64 {
	return s.Spell2Id
}

// GetGameCustomizationObjects returns the value of GameCustomizationObjects.
func (s *SpectatorTftV5CurrentGameParticipant) GetGameCustomizationObjects() []SpectatorTftV5GameCustomizationObject {
	return s.GameCustomizationObjects
}

// GetRiotId returns the value of RiotId.
func (s *SpectatorTftV5CurrentGameParticipant) GetRiotId() OptString {
	return s.RiotId
}

// SetChampionId sets the value of ChampionId.
func (s *SpectatorTftV5CurrentGameParticipant) SetChampionId(val int64) {
	s.ChampionId = val
}

// SetPerks sets the value of Perks.
func (s *SpectatorTftV5CurrentGameParticipant) SetPerks(val OptSpectatorTftV5Perks) {
	s.Perks = val
}

// SetProfileIconId sets the value of ProfileIconId.
func (s *SpectatorTftV5CurrentGameParticipant) SetProfileIconId(val int64) {
	s.ProfileIconId = val
}

// SetTeamId sets the value of TeamId.
func (s *SpectatorTftV5CurrentGameParticipant) SetTeamId(val int64) {
	s.TeamId = val
}

// SetPuuid sets the value of Puuid.
func (s *SpectatorTftV5CurrentGameParticipant) SetPuuid(val OptString) {
	s.Puuid = val
}

// SetSpell1Id sets the value of Spell1Id.
func (s *SpectatorTftV5CurrentGameParticipant) SetSpell1Id(val int64) {
	s.Spell1Id = val
}

// SetSpell2Id sets the value of Spell2Id.
func (s *SpectatorTftV5CurrentGameParticipant) SetSpell2Id(val int64) {
	s.Spell2Id = val
}

// SetGameCustomizationObjects sets the value of GameCustomizationObjects.
func (s *SpectatorTftV5CurrentGameParticipant) SetGameCustomizationObjects(val []SpectatorTftV5GameCustomizationObject) {
	s.GameCustomizationObjects = val
}

// SetRiotId sets the value of RiotId.
func (s *SpectatorTftV5CurrentGameParticipant) SetRiotId(val OptString) {
	s.RiotId = val
}

// Ref: #/components/schemas/spectator-tft-v5.FeaturedGameInfo
type SpectatorTftV5FeaturedGameInfo struct {
	// The game mode
	// (Legal values:  TFT).
	GameMode SpectatorTftV5FeaturedGameInfoGameMode `json:"gameMode"`
	// The amount of time in seconds that has passed since the game started.
	GameLength int64 `json:"gameLength"`
	// The ID of the map.
	MapId int64 `json:"mapId"`
	// The game type
	// (Legal values:  MATCHED).
	GameType SpectatorTftV5FeaturedGameInfoGameType `json:"gameType"`
	// Banned champion information.
	BannedChampions []SpectatorTftV5BannedChampion `json:"bannedChampions"`
	// The ID of the game.
	GameId int64 `json:"gameId"`
	// The observer information.
	Observers SpectatorTftV5Observer `json:"observers"`
	// The queue type (queue types are documented on the Game Constants page).
	GameQueueConfigId int64 `json:"gameQueueConfigId"`
	// The participant information.
	Participants []SpectatorTftV5Participant `json:"participants"`
	// The ID of the platform on which the game is being played.
	PlatformId string `json:"platformId"`
}

// GetGameMode returns the value of GameMode.
func (s *SpectatorTftV5FeaturedGameInfo) GetGameMode() SpectatorTftV5FeaturedGameInfoGameMode {
	return s.GameMode
}

// GetGameLength returns the value of GameLength.
func (s *SpectatorTftV5FeaturedGameInfo) GetGameLength() int64 {
	return s.GameLength
}

// GetMapId returns the value of MapId.
func (s *SpectatorTftV5FeaturedGameInfo) GetMapId() int64 {
	return s.MapId
}

// GetGameType returns the value of GameType.
func (s *SpectatorTftV5FeaturedGameInfo) GetGameType() SpectatorTftV5FeaturedGameInfoGameType {
	return s.GameType
}

// GetBannedChampions returns the value of BannedChampions.
func (s *SpectatorTftV5FeaturedGameInfo) GetBannedChampions() []SpectatorTftV5BannedChampion {
	return s.BannedChampions
}

// GetGameId returns the value of GameId.
func (s *SpectatorTftV5FeaturedGameInfo) GetGameId() int64 {
	return s.GameId
}

// GetObservers returns the value of Observers.
func (s *SpectatorTftV5FeaturedGameInfo) GetObservers() SpectatorTftV5Observer {
	return s.Observers
}

// GetGameQueueConfigId returns the value of GameQueueConfigId.
func (s *SpectatorTftV5FeaturedGameInfo) GetGameQueueConfigId() int64 {
	return s.GameQueueConfigId
}

// GetParticipants returns the value of Participants.
func (s *SpectatorTftV5FeaturedGameInfo) GetParticipants() []SpectatorTftV5Participant {
	return s.Participants
}

// GetPlatformId returns the value of PlatformId.
func (s *SpectatorTftV5FeaturedGameInfo) GetPlatformId() string {
	return s.PlatformId
}

// SetGameMode sets the value of GameMode.
func (s *SpectatorTftV5FeaturedGameInfo) SetGameMode(val SpectatorTftV5FeaturedGameInfoGameMode) {
	s.GameMode = val
}

// SetGameLength sets the value of GameLength.
func (s *SpectatorTftV5FeaturedGameInfo) SetGameLength(val int64) {
	s.GameLength = val
}

// SetMapId sets the value of MapId.
func (s *SpectatorTftV5FeaturedGameInfo) SetMapId(val int64) {
	s.MapId = val
}

// SetGameType sets the value of GameType.
func (s *SpectatorTftV5FeaturedGameInfo) SetGameType(val SpectatorTftV5FeaturedGameInfoGameType) {
	s.GameType = val
}

// SetBannedChampions sets the value of BannedChampions.
func (s *SpectatorTftV5FeaturedGameInfo) SetBannedChampions(val []SpectatorTftV5BannedChampion) {
	s.BannedChampions = val
}

// SetGameId sets the value of GameId.
func (s *SpectatorTftV5FeaturedGameInfo) SetGameId(val int64) {
	s.GameId = val
}

// SetObservers sets the value of Observers.
func (s *SpectatorTftV5FeaturedGameInfo) SetObservers(val SpectatorTftV5Observer) {
	s.Observers = val
}

// SetGameQueueConfigId sets the value of GameQueueConfigId.
func (s *SpectatorTftV5FeaturedGameInfo) SetGameQueueConfigId(val int64) {
	s.GameQueueConfigId = val
}

// SetParticipants sets the value of Participants.
func (s *SpectatorTftV5FeaturedGameInfo) SetParticipants(val []SpectatorTftV5Participant) {
	s.Participants = val
}

// SetPlatformId sets the value of PlatformId.
func (s *SpectatorTftV5FeaturedGameInfo) SetPlatformId(val string) {
	s.PlatformId = val
}

// The game mode
// (Legal values:  TFT).
type SpectatorTftV5FeaturedGameInfoGameMode string

const (
	SpectatorTftV5FeaturedGameInfoGameModeTFT SpectatorTftV5FeaturedGameInfoGameMode = "TFT"
)

// AllValues returns all SpectatorTftV5FeaturedGameInfoGameMode values.
func (SpectatorTftV5FeaturedGameInfoGameMode) AllValues() []SpectatorTftV5FeaturedGameInfoGameMode {
	return []SpectatorTftV5FeaturedGameInfoGameMode{
		SpectatorTftV5FeaturedGameInfoGameModeTFT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SpectatorTftV5FeaturedGameInfoGameMode) MarshalText() ([]byte, error) {
	switch s {
	case SpectatorTftV5FeaturedGameInfoGameModeTFT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SpectatorTftV5FeaturedGameInfoGameMode) UnmarshalText(data []byte) error {
	switch SpectatorTftV5FeaturedGameInfoGameMode(data) {
	case SpectatorTftV5FeaturedGameInfoGameModeTFT:
		*s = SpectatorTftV5FeaturedGameInfoGameModeTFT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The game type
// (Legal values:  MATCHED).
type SpectatorTftV5FeaturedGameInfoGameType string

const (
	SpectatorTftV5FeaturedGameInfoGameTypeMATCHED SpectatorTftV5FeaturedGameInfoGameType = "MATCHED"
)

// AllValues returns all SpectatorTftV5FeaturedGameInfoGameType values.
func (SpectatorTftV5FeaturedGameInfoGameType) AllValues() []SpectatorTftV5FeaturedGameInfoGameType {
	return []SpectatorTftV5FeaturedGameInfoGameType{
		SpectatorTftV5FeaturedGameInfoGameTypeMATCHED,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SpectatorTftV5FeaturedGameInfoGameType) MarshalText() ([]byte, error) {
	switch s {
	case SpectatorTftV5FeaturedGameInfoGameTypeMATCHED:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SpectatorTftV5FeaturedGameInfoGameType) UnmarshalText(data []byte) error {
	switch SpectatorTftV5FeaturedGameInfoGameType(data) {
	case SpectatorTftV5FeaturedGameInfoGameTypeMATCHED:
		*s = SpectatorTftV5FeaturedGameInfoGameTypeMATCHED
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/spectator-tft-v5.FeaturedGames
type SpectatorTftV5FeaturedGames struct {
	// The list of featured games.
	GameList []SpectatorTftV5FeaturedGameInfo `json:"gameList"`
	// The suggested interval to wait before requesting FeaturedGames again.
	ClientRefreshInterval OptInt64 `json:"clientRefreshInterval"`
}

// GetGameList returns the value of GameList.
func (s *SpectatorTftV5FeaturedGames) GetGameList() []SpectatorTftV5FeaturedGameInfo {
	return s.GameList
}

// GetClientRefreshInterval returns the value of ClientRefreshInterval.
func (s *SpectatorTftV5FeaturedGames) GetClientRefreshInterval() OptInt64 {
	return s.ClientRefreshInterval
}

// SetGameList sets the value of GameList.
func (s *SpectatorTftV5FeaturedGames) SetGameList(val []SpectatorTftV5FeaturedGameInfo) {
	s.GameList = val
}

// SetClientRefreshInterval sets the value of ClientRefreshInterval.
func (s *SpectatorTftV5FeaturedGames) SetClientRefreshInterval(val OptInt64) {
	s.ClientRefreshInterval = val
}

func (*SpectatorTftV5FeaturedGames) spectatorTftV5GetFeaturedGamesRes() {}

// Ref: #/components/schemas/spectator-tft-v5.GameCustomizationObject
type SpectatorTftV5GameCustomizationObject struct {
	// Category identifier for Game Customization.
	Category string `json:"category"`
	// Game Customization content.
	Content string `json:"content"`
}

// GetCategory returns the value of Category.
func (s *SpectatorTftV5GameCustomizationObject) GetCategory() string {
	return s.Category
}

// GetContent returns the value of Content.
func (s *SpectatorTftV5GameCustomizationObject) GetContent() string {
	return s.Content
}

// SetCategory sets the value of Category.
func (s *SpectatorTftV5GameCustomizationObject) SetCategory(val string) {
	s.Category = val
}

// SetContent sets the value of Content.
func (s *SpectatorTftV5GameCustomizationObject) SetContent(val string) {
	s.Content = val
}

// SpectatorTftV5GetCurrentGameInfoByPuuidBadGateway is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidBadGateway struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidBadGateway) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidBadRequest is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidBadRequest struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidBadRequest) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidForbidden is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidForbidden struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidForbidden) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidGatewayTimeout is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidGatewayTimeout struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidGatewayTimeout) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidInternalServerError is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidInternalServerError struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidInternalServerError) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidMethodNotAllowed is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidMethodNotAllowed struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidMethodNotAllowed) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidNotFound is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidNotFound struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidNotFound) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidServiceUnavailable is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidServiceUnavailable struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidServiceUnavailable) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidTooManyRequests is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidTooManyRequests struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidTooManyRequests) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidUnauthorized is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidUnauthorized struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidUnauthorized) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetCurrentGameInfoByPuuidUnsupportedMediaType is response for SpectatorTftV5GetCurrentGameInfoByPuuid operation.
type SpectatorTftV5GetCurrentGameInfoByPuuidUnsupportedMediaType struct{}

func (*SpectatorTftV5GetCurrentGameInfoByPuuidUnsupportedMediaType) spectatorTftV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorTftV5GetFeaturedGamesBadGateway is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesBadGateway struct{}

func (*SpectatorTftV5GetFeaturedGamesBadGateway) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesBadRequest is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesBadRequest struct{}

func (*SpectatorTftV5GetFeaturedGamesBadRequest) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesForbidden is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesForbidden struct{}

func (*SpectatorTftV5GetFeaturedGamesForbidden) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesGatewayTimeout is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesGatewayTimeout struct{}

func (*SpectatorTftV5GetFeaturedGamesGatewayTimeout) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesInternalServerError is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesInternalServerError struct{}

func (*SpectatorTftV5GetFeaturedGamesInternalServerError) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesMethodNotAllowed is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesMethodNotAllowed struct{}

func (*SpectatorTftV5GetFeaturedGamesMethodNotAllowed) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesNotFound is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesNotFound struct{}

func (*SpectatorTftV5GetFeaturedGamesNotFound) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesServiceUnavailable is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesServiceUnavailable struct{}

func (*SpectatorTftV5GetFeaturedGamesServiceUnavailable) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesTooManyRequests is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesTooManyRequests struct{}

func (*SpectatorTftV5GetFeaturedGamesTooManyRequests) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesUnauthorized is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesUnauthorized struct{}

func (*SpectatorTftV5GetFeaturedGamesUnauthorized) spectatorTftV5GetFeaturedGamesRes() {}

// SpectatorTftV5GetFeaturedGamesUnsupportedMediaType is response for SpectatorTftV5GetFeaturedGames operation.
type SpectatorTftV5GetFeaturedGamesUnsupportedMediaType struct{}

func (*SpectatorTftV5GetFeaturedGamesUnsupportedMediaType) spectatorTftV5GetFeaturedGamesRes() {}

// Ref: #/components/schemas/spectator-tft-v5.Observer
type SpectatorTftV5Observer struct {
	// Key used to decrypt the spectator grid game data for playback.
	EncryptionKey string `json:"encryptionKey"`
}

// GetEncryptionKey returns the value of EncryptionKey.
func (s *SpectatorTftV5Observer) GetEncryptionKey() string {
	return s.EncryptionKey
}

// SetEncryptionKey sets the value of EncryptionKey.
func (s *SpectatorTftV5Observer) SetEncryptionKey(val string) {
	s.EncryptionKey = val
}

// Ref: #/components/schemas/spectator-tft-v5.Participant
type SpectatorTftV5Participant struct {
	// The ID of the second summoner spell used by this participant.
	Spell2Id int64 `json:"spell2Id"`
	// The ID of the profile icon used by this participant.
	ProfileIconId int64 `json:"profileIconId"`
	// Encrypted puuid of this participant.
	Puuid OptString `json:"puuid"`
	// The ID of the champion played by this participant.
	ChampionId int64 `json:"championId"`
	// The team ID of this participant, indicating the participant's team.
	TeamId int64 `json:"teamId"`
	// The ID of the first summoner spell used by this participant.
	Spell1Id int64     `json:"spell1Id"`
	RiotId   OptString `json:"riotId"`
}

// GetSpell2Id returns the value of Spell2Id.
func (s *SpectatorTftV5Participant) GetSpell2Id() int64 {
	return s.Spell2Id
}

// GetProfileIconId returns the value of ProfileIconId.
func (s *SpectatorTftV5Participant) GetProfileIconId() int64 {
	return s.ProfileIconId
}

// GetPuuid returns the value of Puuid.
func (s *SpectatorTftV5Participant) GetPuuid() OptString {
	return s.Puuid
}

// GetChampionId returns the value of ChampionId.
func (s *SpectatorTftV5Participant) GetChampionId() int64 {
	return s.ChampionId
}

// GetTeamId returns the value of TeamId.
func (s *SpectatorTftV5Participant) GetTeamId() int64 {
	return s.TeamId
}

// GetSpell1Id returns the value of Spell1Id.
func (s *SpectatorTftV5Participant) GetSpell1Id() int64 {
	return s.Spell1Id
}

// GetRiotId returns the value of RiotId.
func (s *SpectatorTftV5Participant) GetRiotId() OptString {
	return s.RiotId
}

// SetSpell2Id sets the value of Spell2Id.
func (s *SpectatorTftV5Participant) SetSpell2Id(val int64) {
	s.Spell2Id = val
}

// SetProfileIconId sets the value of ProfileIconId.
func (s *SpectatorTftV5Participant) SetProfileIconId(val int64) {
	s.ProfileIconId = val
}

// SetPuuid sets the value of Puuid.
func (s *SpectatorTftV5Participant) SetPuuid(val OptString) {
	s.Puuid = val
}

// SetChampionId sets the value of ChampionId.
func (s *SpectatorTftV5Participant) SetChampionId(val int64) {
	s.ChampionId = val
}

// SetTeamId sets the value of TeamId.
func (s *SpectatorTftV5Participant) SetTeamId(val int64) {
	s.TeamId = val
}

// SetSpell1Id sets the value of Spell1Id.
func (s *SpectatorTftV5Participant) SetSpell1Id(val int64) {
	s.Spell1Id = val
}

// SetRiotId sets the value of RiotId.
func (s *SpectatorTftV5Participant) SetRiotId(val OptString) {
	s.RiotId = val
}

// Ref: #/components/schemas/spectator-tft-v5.Perks
type SpectatorTftV5Perks struct {
	// IDs of the perks/runes assigned.
	PerkIds []int64 `json:"perkIds"`
	// Primary runes path.
	PerkStyle int64 `json:"perkStyle"`
	// Secondary runes path.
	PerkSubStyle int64 `json:"perkSubStyle"`
}

// GetPerkIds returns the value of PerkIds.
func (s *SpectatorTftV5Perks) GetPerkIds() []int64 {
	return s.PerkIds
}

// GetPerkStyle returns the value of PerkStyle.
func (s *SpectatorTftV5Perks) GetPerkStyle() int64 {
	return s.PerkStyle
}

// GetPerkSubStyle returns the value of PerkSubStyle.
func (s *SpectatorTftV5Perks) GetPerkSubStyle() int64 {
	return s.PerkSubStyle
}

// SetPerkIds sets the value of PerkIds.
func (s *SpectatorTftV5Perks) SetPerkIds(val []int64) {
	s.PerkIds = val
}

// SetPerkStyle sets the value of PerkStyle.
func (s *SpectatorTftV5Perks) SetPerkStyle(val int64) {
	s.PerkStyle = val
}

// SetPerkSubStyle sets the value of PerkSubStyle.
func (s *SpectatorTftV5Perks) SetPerkSubStyle(val int64) {
	s.PerkSubStyle = val
}

// Ref: #/components/schemas/spectator-v5.BannedChampion
type SpectatorV5BannedChampion struct {
	// The turn during which the champion was banned.
	PickTurn int32 `json:"pickTurn"`
	// The ID of the banned champion.
	ChampionId int64 `json:"championId"`
	// The ID of the team that banned the champion.
	TeamId int64 `json:"teamId"`
}

// GetPickTurn returns the value of PickTurn.
func (s *SpectatorV5BannedChampion) GetPickTurn() int32 {
	return s.PickTurn
}

// GetChampionId returns the value of ChampionId.
func (s *SpectatorV5BannedChampion) GetChampionId() int64 {
	return s.ChampionId
}

// GetTeamId returns the value of TeamId.
func (s *SpectatorV5BannedChampion) GetTeamId() int64 {
	return s.TeamId
}

// SetPickTurn sets the value of PickTurn.
func (s *SpectatorV5BannedChampion) SetPickTurn(val int32) {
	s.PickTurn = val
}

// SetChampionId sets the value of ChampionId.
func (s *SpectatorV5BannedChampion) SetChampionId(val int64) {
	s.ChampionId = val
}

// SetTeamId sets the value of TeamId.
func (s *SpectatorV5BannedChampion) SetTeamId(val int64) {
	s.TeamId = val
}

// Ref: #/components/schemas/spectator-v5.CurrentGameInfo
type SpectatorV5CurrentGameInfo struct {
	// The ID of the game.
	GameId int64 `json:"gameId"`
	// The game type.
	GameType string `json:"gameType"`
	// The game start time represented in epoch milliseconds.
	GameStartTime int64 `json:"gameStartTime"`
	// The ID of the map.
	MapId int64 `json:"mapId"`
	// The amount of time in seconds that has passed since the game started.
	GameLength int64 `json:"gameLength"`
	// The ID of the platform on which the game is being played.
	PlatformId string `json:"platformId"`
	// The game mode.
	GameMode string `json:"gameMode"`
	// Banned champion information.
	BannedChampions []SpectatorV5BannedChampion `json:"bannedChampions"`
	// The queue type (queue types are documented on the Game Constants page).
	GameQueueConfigId OptInt64 `json:"gameQueueConfigId"`
	// The observer information.
	Observers SpectatorV5Observer `json:"observers"`
	// The participant information.
	Participants []SpectatorV5CurrentGameParticipant `json:"participants"`
}

// GetGameId returns the value of GameId.
func (s *SpectatorV5CurrentGameInfo) GetGameId() int64 {
	return s.GameId
}

// GetGameType returns the value of GameType.
func (s *SpectatorV5CurrentGameInfo) GetGameType() string {
	return s.GameType
}

// GetGameStartTime returns the value of GameStartTime.
func (s *SpectatorV5CurrentGameInfo) GetGameStartTime() int64 {
	return s.GameStartTime
}

// GetMapId returns the value of MapId.
func (s *SpectatorV5CurrentGameInfo) GetMapId() int64 {
	return s.MapId
}

// GetGameLength returns the value of GameLength.
func (s *SpectatorV5CurrentGameInfo) GetGameLength() int64 {
	return s.GameLength
}

// GetPlatformId returns the value of PlatformId.
func (s *SpectatorV5CurrentGameInfo) GetPlatformId() string {
	return s.PlatformId
}

// GetGameMode returns the value of GameMode.
func (s *SpectatorV5CurrentGameInfo) GetGameMode() string {
	return s.GameMode
}

// GetBannedChampions returns the value of BannedChampions.
func (s *SpectatorV5CurrentGameInfo) GetBannedChampions() []SpectatorV5BannedChampion {
	return s.BannedChampions
}

// GetGameQueueConfigId returns the value of GameQueueConfigId.
func (s *SpectatorV5CurrentGameInfo) GetGameQueueConfigId() OptInt64 {
	return s.GameQueueConfigId
}

// GetObservers returns the value of Observers.
func (s *SpectatorV5CurrentGameInfo) GetObservers() SpectatorV5Observer {
	return s.Observers
}

// GetParticipants returns the value of Participants.
func (s *SpectatorV5CurrentGameInfo) GetParticipants() []SpectatorV5CurrentGameParticipant {
	return s.Participants
}

// SetGameId sets the value of GameId.
func (s *SpectatorV5CurrentGameInfo) SetGameId(val int64) {
	s.GameId = val
}

// SetGameType sets the value of GameType.
func (s *SpectatorV5CurrentGameInfo) SetGameType(val string) {
	s.GameType = val
}

// SetGameStartTime sets the value of GameStartTime.
func (s *SpectatorV5CurrentGameInfo) SetGameStartTime(val int64) {
	s.GameStartTime = val
}

// SetMapId sets the value of MapId.
func (s *SpectatorV5CurrentGameInfo) SetMapId(val int64) {
	s.MapId = val
}

// SetGameLength sets the value of GameLength.
func (s *SpectatorV5CurrentGameInfo) SetGameLength(val int64) {
	s.GameLength = val
}

// SetPlatformId sets the value of PlatformId.
func (s *SpectatorV5CurrentGameInfo) SetPlatformId(val string) {
	s.PlatformId = val
}

// SetGameMode sets the value of GameMode.
func (s *SpectatorV5CurrentGameInfo) SetGameMode(val string) {
	s.GameMode = val
}

// SetBannedChampions sets the value of BannedChampions.
func (s *SpectatorV5CurrentGameInfo) SetBannedChampions(val []SpectatorV5BannedChampion) {
	s.BannedChampions = val
}

// SetGameQueueConfigId sets the value of GameQueueConfigId.
func (s *SpectatorV5CurrentGameInfo) SetGameQueueConfigId(val OptInt64) {
	s.GameQueueConfigId = val
}

// SetObservers sets the value of Observers.
func (s *SpectatorV5CurrentGameInfo) SetObservers(val SpectatorV5Observer) {
	s.Observers = val
}

// SetParticipants sets the value of Participants.
func (s *SpectatorV5CurrentGameInfo) SetParticipants(val []SpectatorV5CurrentGameParticipant) {
	s.Participants = val
}

func (*SpectatorV5CurrentGameInfo) spectatorV5GetCurrentGameInfoByPuuidRes() {}

// Ref: #/components/schemas/spectator-v5.CurrentGameParticipant
type SpectatorV5CurrentGameParticipant struct {
	// The ID of the champion played by this participant.
	ChampionId int64 `json:"championId"`
	// Perks/Runes Reforged Information.
	Perks OptSpectatorV5Perks `json:"perks"`
	// The ID of the profile icon used by this participant.
	ProfileIconId int64 `json:"profileIconId"`
	// Flag indicating whether or not this participant is a bot.
	Bot bool `json:"bot"`
	// The team ID of this participant, indicating the participant's team.
	TeamId int64 `json:"teamId"`
	// The encrypted puuid of this participant.
	Puuid OptString `json:"puuid"`
	// The ID of the first summoner spell used by this participant.
	Spell1Id int64 `json:"spell1Id"`
	// The ID of the second summoner spell used by this participant.
	Spell2Id int64 `json:"spell2Id"`
	// List of Game Customizations.
	GameCustomizationObjects []SpectatorV5GameCustomizationObject `json:"gameCustomizationObjects"`
	RiotId                   OptString                            `json:"riotId"`
}

// GetChampionId returns the value of ChampionId.
func (s *SpectatorV5CurrentGameParticipant) GetChampionId() int64 {
	return s.ChampionId
}

// GetPerks returns the value of Perks.
func (s *SpectatorV5CurrentGameParticipant) GetPerks() OptSpectatorV5Perks {
	return s.Perks
}

// GetProfileIconId returns the value of ProfileIconId.
func (s *SpectatorV5CurrentGameParticipant) GetProfileIconId() int64 {
	return s.ProfileIconId
}

// GetBot returns the value of Bot.
func (s *SpectatorV5CurrentGameParticipant) GetBot() bool {
	return s.Bot
}

// GetTeamId returns the value of TeamId.
func (s *SpectatorV5CurrentGameParticipant) GetTeamId() int64 {
	return s.TeamId
}

// GetPuuid returns the value of Puuid.
func (s *SpectatorV5CurrentGameParticipant) GetPuuid() OptString {
	return s.Puuid
}

// GetSpell1Id returns the value of Spell1Id.
func (s *SpectatorV5CurrentGameParticipant) GetSpell1Id() int64 {
	return s.Spell1Id
}

// GetSpell2Id returns the value of Spell2Id.
func (s *SpectatorV5CurrentGameParticipant) GetSpell2Id() int64 {
	return s.Spell2Id
}

// GetGameCustomizationObjects returns the value of GameCustomizationObjects.
func (s *SpectatorV5CurrentGameParticipant) GetGameCustomizationObjects() []SpectatorV5GameCustomizationObject {
	return s.GameCustomizationObjects
}

// GetRiotId returns the value of RiotId.
func (s *SpectatorV5CurrentGameParticipant) GetRiotId() OptString {
	return s.RiotId
}

// SetChampionId sets the value of ChampionId.
func (s *SpectatorV5CurrentGameParticipant) SetChampionId(val int64) {
	s.ChampionId = val
}

// SetPerks sets the value of Perks.
func (s *SpectatorV5CurrentGameParticipant) SetPerks(val OptSpectatorV5Perks) {
	s.Perks = val
}

// SetProfileIconId sets the value of ProfileIconId.
func (s *SpectatorV5CurrentGameParticipant) SetProfileIconId(val int64) {
	s.ProfileIconId = val
}

// SetBot sets the value of Bot.
func (s *SpectatorV5CurrentGameParticipant) SetBot(val bool) {
	s.Bot = val
}

// SetTeamId sets the value of TeamId.
func (s *SpectatorV5CurrentGameParticipant) SetTeamId(val int64) {
	s.TeamId = val
}

// SetPuuid sets the value of Puuid.
func (s *SpectatorV5CurrentGameParticipant) SetPuuid(val OptString) {
	s.Puuid = val
}

// SetSpell1Id sets the value of Spell1Id.
func (s *SpectatorV5CurrentGameParticipant) SetSpell1Id(val int64) {
	s.Spell1Id = val
}

// SetSpell2Id sets the value of Spell2Id.
func (s *SpectatorV5CurrentGameParticipant) SetSpell2Id(val int64) {
	s.Spell2Id = val
}

// SetGameCustomizationObjects sets the value of GameCustomizationObjects.
func (s *SpectatorV5CurrentGameParticipant) SetGameCustomizationObjects(val []SpectatorV5GameCustomizationObject) {
	s.GameCustomizationObjects = val
}

// SetRiotId sets the value of RiotId.
func (s *SpectatorV5CurrentGameParticipant) SetRiotId(val OptString) {
	s.RiotId = val
}

// Ref: #/components/schemas/spectator-v5.FeaturedGameInfo
type SpectatorV5FeaturedGameInfo struct {
	// The game mode
	// (Legal values:  CLASSIC,  ODIN,  ARAM,  TUTORIAL,  ONEFORALL,  ASCENSION,  FIRSTBLOOD,  KINGPORO).
	GameMode SpectatorV5FeaturedGameInfoGameMode `json:"gameMode"`
	// The amount of time in seconds that has passed since the game started.
	GameLength int64 `json:"gameLength"`
	// The ID of the map.
	MapId int64 `json:"mapId"`
	// The game type
	// (Legal values:  CUSTOM_GAME,  MATCHED_GAME,  TUTORIAL_GAME).
	GameType SpectatorV5FeaturedGameInfoGameType `json:"gameType"`
	// Banned champion information.
	BannedChampions []SpectatorV5BannedChampion `json:"bannedChampions"`
	// The ID of the game.
	GameId int64 `json:"gameId"`
	// The observer information.
	Observers SpectatorV5Observer `json:"observers"`
	// The queue type (queue types are documented on the Game Constants page).
	GameQueueConfigId int64 `json:"gameQueueConfigId"`
	// The participant information.
	Participants []SpectatorV5Participant `json:"participants"`
	// The ID of the platform on which the game is being played.
	PlatformId string `json:"platformId"`
}

// GetGameMode returns the value of GameMode.
func (s *SpectatorV5FeaturedGameInfo) GetGameMode() SpectatorV5FeaturedGameInfoGameMode {
	return s.GameMode
}

// GetGameLength returns the value of GameLength.
func (s *SpectatorV5FeaturedGameInfo) GetGameLength() int64 {
	return s.GameLength
}

// GetMapId returns the value of MapId.
func (s *SpectatorV5FeaturedGameInfo) GetMapId() int64 {
	return s.MapId
}

// GetGameType returns the value of GameType.
func (s *SpectatorV5FeaturedGameInfo) GetGameType() SpectatorV5FeaturedGameInfoGameType {
	return s.GameType
}

// GetBannedChampions returns the value of BannedChampions.
func (s *SpectatorV5FeaturedGameInfo) GetBannedChampions() []SpectatorV5BannedChampion {
	return s.BannedChampions
}

// GetGameId returns the value of GameId.
func (s *SpectatorV5FeaturedGameInfo) GetGameId() int64 {
	return s.GameId
}

// GetObservers returns the value of Observers.
func (s *SpectatorV5FeaturedGameInfo) GetObservers() SpectatorV5Observer {
	return s.Observers
}

// GetGameQueueConfigId returns the value of GameQueueConfigId.
func (s *SpectatorV5FeaturedGameInfo) GetGameQueueConfigId() int64 {
	return s.GameQueueConfigId
}

// GetParticipants returns the value of Participants.
func (s *SpectatorV5FeaturedGameInfo) GetParticipants() []SpectatorV5Participant {
	return s.Participants
}

// GetPlatformId returns the value of PlatformId.
func (s *SpectatorV5FeaturedGameInfo) GetPlatformId() string {
	return s.PlatformId
}

// SetGameMode sets the value of GameMode.
func (s *SpectatorV5FeaturedGameInfo) SetGameMode(val SpectatorV5FeaturedGameInfoGameMode) {
	s.GameMode = val
}

// SetGameLength sets the value of GameLength.
func (s *SpectatorV5FeaturedGameInfo) SetGameLength(val int64) {
	s.GameLength = val
}

// SetMapId sets the value of MapId.
func (s *SpectatorV5FeaturedGameInfo) SetMapId(val int64) {
	s.MapId = val
}

// SetGameType sets the value of GameType.
func (s *SpectatorV5FeaturedGameInfo) SetGameType(val SpectatorV5FeaturedGameInfoGameType) {
	s.GameType = val
}

// SetBannedChampions sets the value of BannedChampions.
func (s *SpectatorV5FeaturedGameInfo) SetBannedChampions(val []SpectatorV5BannedChampion) {
	s.BannedChampions = val
}

// SetGameId sets the value of GameId.
func (s *SpectatorV5FeaturedGameInfo) SetGameId(val int64) {
	s.GameId = val
}

// SetObservers sets the value of Observers.
func (s *SpectatorV5FeaturedGameInfo) SetObservers(val SpectatorV5Observer) {
	s.Observers = val
}

// SetGameQueueConfigId sets the value of GameQueueConfigId.
func (s *SpectatorV5FeaturedGameInfo) SetGameQueueConfigId(val int64) {
	s.GameQueueConfigId = val
}

// SetParticipants sets the value of Participants.
func (s *SpectatorV5FeaturedGameInfo) SetParticipants(val []SpectatorV5Participant) {
	s.Participants = val
}

// SetPlatformId sets the value of PlatformId.
func (s *SpectatorV5FeaturedGameInfo) SetPlatformId(val string) {
	s.PlatformId = val
}

// The game mode
// (Legal values:  CLASSIC,  ODIN,  ARAM,  TUTORIAL,  ONEFORALL,  ASCENSION,  FIRSTBLOOD,  KINGPORO).
type SpectatorV5FeaturedGameInfoGameMode string

const (
	SpectatorV5FeaturedGameInfoGameModeCLASSIC    SpectatorV5FeaturedGameInfoGameMode = "CLASSIC"
	SpectatorV5FeaturedGameInfoGameModeODIN       SpectatorV5FeaturedGameInfoGameMode = "ODIN"
	SpectatorV5FeaturedGameInfoGameModeARAM       SpectatorV5FeaturedGameInfoGameMode = "ARAM"
	SpectatorV5FeaturedGameInfoGameModeTUTORIAL   SpectatorV5FeaturedGameInfoGameMode = "TUTORIAL"
	SpectatorV5FeaturedGameInfoGameModeONEFORALL  SpectatorV5FeaturedGameInfoGameMode = "ONEFORALL"
	SpectatorV5FeaturedGameInfoGameModeASCENSION  SpectatorV5FeaturedGameInfoGameMode = "ASCENSION"
	SpectatorV5FeaturedGameInfoGameModeFIRSTBLOOD SpectatorV5FeaturedGameInfoGameMode = "FIRSTBLOOD"
	SpectatorV5FeaturedGameInfoGameModeKINGPORO   SpectatorV5FeaturedGameInfoGameMode = "KINGPORO"
)

// AllValues returns all SpectatorV5FeaturedGameInfoGameMode values.
func (SpectatorV5FeaturedGameInfoGameMode) AllValues() []SpectatorV5FeaturedGameInfoGameMode {
	return []SpectatorV5FeaturedGameInfoGameMode{
		SpectatorV5FeaturedGameInfoGameModeCLASSIC,
		SpectatorV5FeaturedGameInfoGameModeODIN,
		SpectatorV5FeaturedGameInfoGameModeARAM,
		SpectatorV5FeaturedGameInfoGameModeTUTORIAL,
		SpectatorV5FeaturedGameInfoGameModeONEFORALL,
		SpectatorV5FeaturedGameInfoGameModeASCENSION,
		SpectatorV5FeaturedGameInfoGameModeFIRSTBLOOD,
		SpectatorV5FeaturedGameInfoGameModeKINGPORO,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SpectatorV5FeaturedGameInfoGameMode) MarshalText() ([]byte, error) {
	switch s {
	case SpectatorV5FeaturedGameInfoGameModeCLASSIC:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameModeODIN:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameModeARAM:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameModeTUTORIAL:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameModeONEFORALL:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameModeASCENSION:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameModeFIRSTBLOOD:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameModeKINGPORO:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SpectatorV5FeaturedGameInfoGameMode) UnmarshalText(data []byte) error {
	switch SpectatorV5FeaturedGameInfoGameMode(data) {
	case SpectatorV5FeaturedGameInfoGameModeCLASSIC:
		*s = SpectatorV5FeaturedGameInfoGameModeCLASSIC
		return nil
	case SpectatorV5FeaturedGameInfoGameModeODIN:
		*s = SpectatorV5FeaturedGameInfoGameModeODIN
		return nil
	case SpectatorV5FeaturedGameInfoGameModeARAM:
		*s = SpectatorV5FeaturedGameInfoGameModeARAM
		return nil
	case SpectatorV5FeaturedGameInfoGameModeTUTORIAL:
		*s = SpectatorV5FeaturedGameInfoGameModeTUTORIAL
		return nil
	case SpectatorV5FeaturedGameInfoGameModeONEFORALL:
		*s = SpectatorV5FeaturedGameInfoGameModeONEFORALL
		return nil
	case SpectatorV5FeaturedGameInfoGameModeASCENSION:
		*s = SpectatorV5FeaturedGameInfoGameModeASCENSION
		return nil
	case SpectatorV5FeaturedGameInfoGameModeFIRSTBLOOD:
		*s = SpectatorV5FeaturedGameInfoGameModeFIRSTBLOOD
		return nil
	case SpectatorV5FeaturedGameInfoGameModeKINGPORO:
		*s = SpectatorV5FeaturedGameInfoGameModeKINGPORO
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The game type
// (Legal values:  CUSTOM_GAME,  MATCHED_GAME,  TUTORIAL_GAME).
type SpectatorV5FeaturedGameInfoGameType string

const (
	SpectatorV5FeaturedGameInfoGameTypeCUSTOMGAME   SpectatorV5FeaturedGameInfoGameType = "CUSTOM_GAME"
	SpectatorV5FeaturedGameInfoGameTypeMATCHEDGAME  SpectatorV5FeaturedGameInfoGameType = "MATCHED_GAME"
	SpectatorV5FeaturedGameInfoGameTypeTUTORIALGAME SpectatorV5FeaturedGameInfoGameType = "TUTORIAL_GAME"
)

// AllValues returns all SpectatorV5FeaturedGameInfoGameType values.
func (SpectatorV5FeaturedGameInfoGameType) AllValues() []SpectatorV5FeaturedGameInfoGameType {
	return []SpectatorV5FeaturedGameInfoGameType{
		SpectatorV5FeaturedGameInfoGameTypeCUSTOMGAME,
		SpectatorV5FeaturedGameInfoGameTypeMATCHEDGAME,
		SpectatorV5FeaturedGameInfoGameTypeTUTORIALGAME,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s SpectatorV5FeaturedGameInfoGameType) MarshalText() ([]byte, error) {
	switch s {
	case SpectatorV5FeaturedGameInfoGameTypeCUSTOMGAME:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameTypeMATCHEDGAME:
		return []byte(s), nil
	case SpectatorV5FeaturedGameInfoGameTypeTUTORIALGAME:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *SpectatorV5FeaturedGameInfoGameType) UnmarshalText(data []byte) error {
	switch SpectatorV5FeaturedGameInfoGameType(data) {
	case SpectatorV5FeaturedGameInfoGameTypeCUSTOMGAME:
		*s = SpectatorV5FeaturedGameInfoGameTypeCUSTOMGAME
		return nil
	case SpectatorV5FeaturedGameInfoGameTypeMATCHEDGAME:
		*s = SpectatorV5FeaturedGameInfoGameTypeMATCHEDGAME
		return nil
	case SpectatorV5FeaturedGameInfoGameTypeTUTORIALGAME:
		*s = SpectatorV5FeaturedGameInfoGameTypeTUTORIALGAME
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/spectator-v5.FeaturedGames
type SpectatorV5FeaturedGames struct {
	// The list of featured games.
	GameList []SpectatorV5FeaturedGameInfo `json:"gameList"`
	// The suggested interval to wait before requesting FeaturedGames again.
	ClientRefreshInterval OptInt64 `json:"clientRefreshInterval"`
}

// GetGameList returns the value of GameList.
func (s *SpectatorV5FeaturedGames) GetGameList() []SpectatorV5FeaturedGameInfo {
	return s.GameList
}

// GetClientRefreshInterval returns the value of ClientRefreshInterval.
func (s *SpectatorV5FeaturedGames) GetClientRefreshInterval() OptInt64 {
	return s.ClientRefreshInterval
}

// SetGameList sets the value of GameList.
func (s *SpectatorV5FeaturedGames) SetGameList(val []SpectatorV5FeaturedGameInfo) {
	s.GameList = val
}

// SetClientRefreshInterval sets the value of ClientRefreshInterval.
func (s *SpectatorV5FeaturedGames) SetClientRefreshInterval(val OptInt64) {
	s.ClientRefreshInterval = val
}

func (*SpectatorV5FeaturedGames) spectatorV5GetFeaturedGamesRes() {}

// Ref: #/components/schemas/spectator-v5.GameCustomizationObject
type SpectatorV5GameCustomizationObject struct {
	// Category identifier for Game Customization.
	Category string `json:"category"`
	// Game Customization content.
	Content string `json:"content"`
}

// GetCategory returns the value of Category.
func (s *SpectatorV5GameCustomizationObject) GetCategory() string {
	return s.Category
}

// GetContent returns the value of Content.
func (s *SpectatorV5GameCustomizationObject) GetContent() string {
	return s.Content
}

// SetCategory sets the value of Category.
func (s *SpectatorV5GameCustomizationObject) SetCategory(val string) {
	s.Category = val
}

// SetContent sets the value of Content.
func (s *SpectatorV5GameCustomizationObject) SetContent(val string) {
	s.Content = val
}

// SpectatorV5GetCurrentGameInfoByPuuidBadGateway is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidBadGateway struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidBadGateway) spectatorV5GetCurrentGameInfoByPuuidRes() {}

// SpectatorV5GetCurrentGameInfoByPuuidBadRequest is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidBadRequest struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidBadRequest) spectatorV5GetCurrentGameInfoByPuuidRes() {}

// SpectatorV5GetCurrentGameInfoByPuuidForbidden is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidForbidden struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidForbidden) spectatorV5GetCurrentGameInfoByPuuidRes() {}

// SpectatorV5GetCurrentGameInfoByPuuidGatewayTimeout is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidGatewayTimeout struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidGatewayTimeout) spectatorV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorV5GetCurrentGameInfoByPuuidInternalServerError is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidInternalServerError struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidInternalServerError) spectatorV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorV5GetCurrentGameInfoByPuuidMethodNotAllowed is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidMethodNotAllowed struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidMethodNotAllowed) spectatorV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorV5GetCurrentGameInfoByPuuidNotFound is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidNotFound struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidNotFound) spectatorV5GetCurrentGameInfoByPuuidRes() {}

// SpectatorV5GetCurrentGameInfoByPuuidServiceUnavailable is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidServiceUnavailable struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidServiceUnavailable) spectatorV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorV5GetCurrentGameInfoByPuuidTooManyRequests is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidTooManyRequests struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidTooManyRequests) spectatorV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorV5GetCurrentGameInfoByPuuidUnauthorized is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidUnauthorized struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidUnauthorized) spectatorV5GetCurrentGameInfoByPuuidRes() {}

// SpectatorV5GetCurrentGameInfoByPuuidUnsupportedMediaType is response for SpectatorV5GetCurrentGameInfoByPuuid operation.
type SpectatorV5GetCurrentGameInfoByPuuidUnsupportedMediaType struct{}

func (*SpectatorV5GetCurrentGameInfoByPuuidUnsupportedMediaType) spectatorV5GetCurrentGameInfoByPuuidRes() {
}

// SpectatorV5GetFeaturedGamesBadGateway is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesBadGateway struct{}

func (*SpectatorV5GetFeaturedGamesBadGateway) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesBadRequest is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesBadRequest struct{}

func (*SpectatorV5GetFeaturedGamesBadRequest) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesForbidden is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesForbidden struct{}

func (*SpectatorV5GetFeaturedGamesForbidden) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesGatewayTimeout is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesGatewayTimeout struct{}

func (*SpectatorV5GetFeaturedGamesGatewayTimeout) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesInternalServerError is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesInternalServerError struct{}

func (*SpectatorV5GetFeaturedGamesInternalServerError) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesMethodNotAllowed is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesMethodNotAllowed struct{}

func (*SpectatorV5GetFeaturedGamesMethodNotAllowed) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesNotFound is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesNotFound struct{}

func (*SpectatorV5GetFeaturedGamesNotFound) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesServiceUnavailable is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesServiceUnavailable struct{}

func (*SpectatorV5GetFeaturedGamesServiceUnavailable) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesTooManyRequests is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesTooManyRequests struct{}

func (*SpectatorV5GetFeaturedGamesTooManyRequests) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesUnauthorized is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesUnauthorized struct{}

func (*SpectatorV5GetFeaturedGamesUnauthorized) spectatorV5GetFeaturedGamesRes() {}

// SpectatorV5GetFeaturedGamesUnsupportedMediaType is response for SpectatorV5GetFeaturedGames operation.
type SpectatorV5GetFeaturedGamesUnsupportedMediaType struct{}

func (*SpectatorV5GetFeaturedGamesUnsupportedMediaType) spectatorV5GetFeaturedGamesRes() {}

// Ref: #/components/schemas/spectator-v5.Observer
type SpectatorV5Observer struct {
	// Key used to decrypt the spectator grid game data for playback.
	EncryptionKey string `json:"encryptionKey"`
}

// GetEncryptionKey returns the value of EncryptionKey.
func (s *SpectatorV5Observer) GetEncryptionKey() string {
	return s.EncryptionKey
}

// SetEncryptionKey sets the value of EncryptionKey.
func (s *SpectatorV5Observer) SetEncryptionKey(val string) {
	s.EncryptionKey = val
}

// Ref: #/components/schemas/spectator-v5.Participant
type SpectatorV5Participant struct {
	// Flag indicating whether or not this participant is a bot.
	Bot bool `json:"bot"`
	// The ID of the second summoner spell used by this participant.
	Spell2Id int64 `json:"spell2Id"`
	// The ID of the profile icon used by this participant.
	ProfileIconId int64 `json:"profileIconId"`
	// Encrypted puuid of this participant.
	Puuid OptString `json:"puuid"`
	// The ID of the champion played by this participant.
	ChampionId int64 `json:"championId"`
	// The team ID of this participant, indicating the participant's team.
	TeamId int64 `json:"teamId"`
	// The ID of the first summoner spell used by this participant.
	Spell1Id int64     `json:"spell1Id"`
	RiotId   OptString `json:"riotId"`
}

// GetBot returns the value of Bot.
func (s *SpectatorV5Participant) GetBot() bool {
	return s.Bot
}

// GetSpell2Id returns the value of Spell2Id.
func (s *SpectatorV5Participant) GetSpell2Id() int64 {
	return s.Spell2Id
}

// GetProfileIconId returns the value of ProfileIconId.
func (s *SpectatorV5Participant) GetProfileIconId() int64 {
	return s.ProfileIconId
}

// GetPuuid returns the value of Puuid.
func (s *SpectatorV5Participant) GetPuuid() OptString {
	return s.Puuid
}

// GetChampionId returns the value of ChampionId.
func (s *SpectatorV5Participant) GetChampionId() int64 {
	return s.ChampionId
}

// GetTeamId returns the value of TeamId.
func (s *SpectatorV5Participant) GetTeamId() int64 {
	return s.TeamId
}

// GetSpell1Id returns the value of Spell1Id.
func (s *SpectatorV5Participant) GetSpell1Id() int64 {
	return s.Spell1Id
}

// GetRiotId returns the value of RiotId.
func (s *SpectatorV5Participant) GetRiotId() OptString {
	return s.RiotId
}

// SetBot sets the value of Bot.
func (s *SpectatorV5Participant) SetBot(val bool) {
	s.Bot = val
}

// SetSpell2Id sets the value of Spell2Id.
func (s *SpectatorV5Participant) SetSpell2Id(val int64) {
	s.Spell2Id = val
}

// SetProfileIconId sets the value of ProfileIconId.
func (s *SpectatorV5Participant) SetProfileIconId(val int64) {
	s.ProfileIconId = val
}

// SetPuuid sets the value of Puuid.
func (s *SpectatorV5Participant) SetPuuid(val OptString) {
	s.Puuid = val
}

// SetChampionId sets the value of ChampionId.
func (s *SpectatorV5Participant) SetChampionId(val int64) {
	s.ChampionId = val
}

// SetTeamId sets the value of TeamId.
func (s *SpectatorV5Participant) SetTeamId(val int64) {
	s.TeamId = val
}

// SetSpell1Id sets the value of Spell1Id.
func (s *SpectatorV5Participant) SetSpell1Id(val int64) {
	s.Spell1Id = val
}

// SetRiotId sets the value of RiotId.
func (s *SpectatorV5Participant) SetRiotId(val OptString) {
	s.RiotId = val
}

// Ref: #/components/schemas/spectator-v5.Perks
type SpectatorV5Perks struct {
	// IDs of the perks/runes assigned.
	PerkIds []int64 `json:"perkIds"`
	// Primary runes path.
	PerkStyle int64 `json:"perkStyle"`
	// Secondary runes path.
	PerkSubStyle int64 `json:"perkSubStyle"`
}

// GetPerkIds returns the value of PerkIds.
func (s *SpectatorV5Perks) GetPerkIds() []int64 {
	return s.PerkIds
}

// GetPerkStyle returns the value of PerkStyle.
func (s *SpectatorV5Perks) GetPerkStyle() int64 {
	return s.PerkStyle
}

// GetPerkSubStyle returns the value of PerkSubStyle.
func (s *SpectatorV5Perks) GetPerkSubStyle() int64 {
	return s.PerkSubStyle
}

// SetPerkIds sets the value of PerkIds.
func (s *SpectatorV5Perks) SetPerkIds(val []int64) {
	s.PerkIds = val
}

// SetPerkStyle sets the value of PerkStyle.
func (s *SpectatorV5Perks) SetPerkStyle(val int64) {
	s.PerkStyle = val
}

// SetPerkSubStyle sets the value of PerkSubStyle.
func (s *SpectatorV5Perks) SetPerkSubStyle(val int64) {
	s.PerkSubStyle = val
}

// SummonerV4GetByAccessTokenBadGateway is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenBadGateway struct{}

func (*SummonerV4GetByAccessTokenBadGateway) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenBadRequest is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenBadRequest struct{}

func (*SummonerV4GetByAccessTokenBadRequest) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenForbidden is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenForbidden struct{}

func (*SummonerV4GetByAccessTokenForbidden) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenGatewayTimeout is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenGatewayTimeout struct{}

func (*SummonerV4GetByAccessTokenGatewayTimeout) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenInternalServerError is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenInternalServerError struct{}

func (*SummonerV4GetByAccessTokenInternalServerError) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenMethodNotAllowed is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenMethodNotAllowed struct{}

func (*SummonerV4GetByAccessTokenMethodNotAllowed) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenNotFound is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenNotFound struct{}

func (*SummonerV4GetByAccessTokenNotFound) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenServiceUnavailable is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenServiceUnavailable struct{}

func (*SummonerV4GetByAccessTokenServiceUnavailable) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenTooManyRequests is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenTooManyRequests struct{}

func (*SummonerV4GetByAccessTokenTooManyRequests) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenUnauthorized is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenUnauthorized struct{}

func (*SummonerV4GetByAccessTokenUnauthorized) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByAccessTokenUnsupportedMediaType is response for SummonerV4GetByAccessToken operation.
type SummonerV4GetByAccessTokenUnsupportedMediaType struct{}

func (*SummonerV4GetByAccessTokenUnsupportedMediaType) summonerV4GetByAccessTokenRes() {}

// SummonerV4GetByPUUIDBadGateway is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDBadGateway struct{}

func (*SummonerV4GetByPUUIDBadGateway) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDBadRequest is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDBadRequest struct{}

func (*SummonerV4GetByPUUIDBadRequest) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDForbidden is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDForbidden struct{}

func (*SummonerV4GetByPUUIDForbidden) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDGatewayTimeout is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDGatewayTimeout struct{}

func (*SummonerV4GetByPUUIDGatewayTimeout) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDInternalServerError is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDInternalServerError struct{}

func (*SummonerV4GetByPUUIDInternalServerError) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDMethodNotAllowed is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDMethodNotAllowed struct{}

func (*SummonerV4GetByPUUIDMethodNotAllowed) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDNotFound is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDNotFound struct{}

func (*SummonerV4GetByPUUIDNotFound) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDServiceUnavailable is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDServiceUnavailable struct{}

func (*SummonerV4GetByPUUIDServiceUnavailable) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDTooManyRequests is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDTooManyRequests struct{}

func (*SummonerV4GetByPUUIDTooManyRequests) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDUnauthorized is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDUnauthorized struct{}

func (*SummonerV4GetByPUUIDUnauthorized) summonerV4GetByPUUIDRes() {}

// SummonerV4GetByPUUIDUnsupportedMediaType is response for SummonerV4GetByPUUID operation.
type SummonerV4GetByPUUIDUnsupportedMediaType struct{}

func (*SummonerV4GetByPUUIDUnsupportedMediaType) summonerV4GetByPUUIDRes() {}

// Represents a summoner.
// Ref: #/components/schemas/summoner-v4.SummonerDTO
type SummonerV4SummonerDTO struct {
	// ID of the summoner icon associated with the summoner.
	ProfileIconId int32 `json:"profileIconId"`
	// Date summoner was last modified specified as epoch milliseconds. The following events will update
	// this timestamp: profile icon change, playing the tutorial or advanced tutorial, finishing a game,
	// summoner name change.
	RevisionDate int64 `json:"revisionDate"`
	// Encrypted PUUID. Exact length of 78 characters.
	Puuid string `json:"puuid"`
	// Summoner level associated with the summoner.
	SummonerLevel int64 `json:"summonerLevel"`
	// Encrypted summoner ID. This field is deprecated and will be removed. Use `puuid` instead.
	ID OptString `json:"id"`
}

// GetProfileIconId returns the value of ProfileIconId.
func (s *SummonerV4SummonerDTO) GetProfileIconId() int32 {
	return s.ProfileIconId
}

// GetRevisionDate returns the value of RevisionDate.
func (s *SummonerV4SummonerDTO) GetRevisionDate() int64 {
	return s.RevisionDate
}

// GetPuuid returns the value of Puuid.
func (s *SummonerV4SummonerDTO) GetPuuid() string {
	return s.Puuid
}

// GetSummonerLevel returns the value of SummonerLevel.
func (s *SummonerV4SummonerDTO) GetSummonerLevel() int64 {
	return s.SummonerLevel
}

// GetID returns the value of ID.
func (s *SummonerV4SummonerDTO) GetID() OptString {
	return s.ID
}

// SetProfileIconId sets the value of ProfileIconId.
func (s *SummonerV4SummonerDTO) SetProfileIconId(val int32) {
	s.ProfileIconId = val
}

// SetRevisionDate sets the value of RevisionDate.
func (s *SummonerV4SummonerDTO) SetRevisionDate(val int64) {
	s.RevisionDate = val
}

// SetPuuid sets the value of Puuid.
func (s *SummonerV4SummonerDTO) SetPuuid(val string) {
	s.Puuid = val
}

// SetSummonerLevel sets the value of SummonerLevel.
func (s *SummonerV4SummonerDTO) SetSummonerLevel(val int64) {
	s.SummonerLevel = val
}

// SetID sets the value of ID.
func (s *SummonerV4SummonerDTO) SetID(val OptString) {
	s.ID = val
}

func (*SummonerV4SummonerDTO) summonerV4GetByAccessTokenRes() {}
func (*SummonerV4SummonerDTO) summonerV4GetByPUUIDRes()       {}

// TftLeagueV1GetChallengerLeagueBadGateway is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueBadGateway struct{}

func (*TftLeagueV1GetChallengerLeagueBadGateway) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueBadRequest is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueBadRequest struct{}

func (*TftLeagueV1GetChallengerLeagueBadRequest) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueForbidden is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueForbidden struct{}

func (*TftLeagueV1GetChallengerLeagueForbidden) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueGatewayTimeout is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueGatewayTimeout struct{}

func (*TftLeagueV1GetChallengerLeagueGatewayTimeout) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueInternalServerError is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueInternalServerError struct{}

func (*TftLeagueV1GetChallengerLeagueInternalServerError) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueMethodNotAllowed is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueMethodNotAllowed struct{}

func (*TftLeagueV1GetChallengerLeagueMethodNotAllowed) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueNotFound is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueNotFound struct{}

func (*TftLeagueV1GetChallengerLeagueNotFound) tftLeagueV1GetChallengerLeagueRes() {}

type TftLeagueV1GetChallengerLeagueQueue string

const (
	TftLeagueV1GetChallengerLeagueQueueRANKEDTFT         TftLeagueV1GetChallengerLeagueQueue = "RANKED_TFT"
	TftLeagueV1GetChallengerLeagueQueueRANKEDTFTDOUBLEUP TftLeagueV1GetChallengerLeagueQueue = "RANKED_TFT_DOUBLE_UP"
)

// AllValues returns all TftLeagueV1GetChallengerLeagueQueue values.
func (TftLeagueV1GetChallengerLeagueQueue) AllValues() []TftLeagueV1GetChallengerLeagueQueue {
	return []TftLeagueV1GetChallengerLeagueQueue{
		TftLeagueV1GetChallengerLeagueQueueRANKEDTFT,
		TftLeagueV1GetChallengerLeagueQueueRANKEDTFTDOUBLEUP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1GetChallengerLeagueQueue) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1GetChallengerLeagueQueueRANKEDTFT:
		return []byte(s), nil
	case TftLeagueV1GetChallengerLeagueQueueRANKEDTFTDOUBLEUP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1GetChallengerLeagueQueue) UnmarshalText(data []byte) error {
	switch TftLeagueV1GetChallengerLeagueQueue(data) {
	case TftLeagueV1GetChallengerLeagueQueueRANKEDTFT:
		*s = TftLeagueV1GetChallengerLeagueQueueRANKEDTFT
		return nil
	case TftLeagueV1GetChallengerLeagueQueueRANKEDTFTDOUBLEUP:
		*s = TftLeagueV1GetChallengerLeagueQueueRANKEDTFTDOUBLEUP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftLeagueV1GetChallengerLeagueServiceUnavailable is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueServiceUnavailable struct{}

func (*TftLeagueV1GetChallengerLeagueServiceUnavailable) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueTooManyRequests is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueTooManyRequests struct{}

func (*TftLeagueV1GetChallengerLeagueTooManyRequests) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueUnauthorized is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueUnauthorized struct{}

func (*TftLeagueV1GetChallengerLeagueUnauthorized) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetChallengerLeagueUnsupportedMediaType is response for TftLeagueV1GetChallengerLeague operation.
type TftLeagueV1GetChallengerLeagueUnsupportedMediaType struct{}

func (*TftLeagueV1GetChallengerLeagueUnsupportedMediaType) tftLeagueV1GetChallengerLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueBadGateway is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueBadGateway struct{}

func (*TftLeagueV1GetGrandmasterLeagueBadGateway) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueBadRequest is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueBadRequest struct{}

func (*TftLeagueV1GetGrandmasterLeagueBadRequest) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueForbidden is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueForbidden struct{}

func (*TftLeagueV1GetGrandmasterLeagueForbidden) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueGatewayTimeout is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueGatewayTimeout struct{}

func (*TftLeagueV1GetGrandmasterLeagueGatewayTimeout) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueInternalServerError is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueInternalServerError struct{}

func (*TftLeagueV1GetGrandmasterLeagueInternalServerError) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueMethodNotAllowed is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueMethodNotAllowed struct{}

func (*TftLeagueV1GetGrandmasterLeagueMethodNotAllowed) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueNotFound is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueNotFound struct{}

func (*TftLeagueV1GetGrandmasterLeagueNotFound) tftLeagueV1GetGrandmasterLeagueRes() {}

type TftLeagueV1GetGrandmasterLeagueQueue string

const (
	TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFT         TftLeagueV1GetGrandmasterLeagueQueue = "RANKED_TFT"
	TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFTDOUBLEUP TftLeagueV1GetGrandmasterLeagueQueue = "RANKED_TFT_DOUBLE_UP"
)

// AllValues returns all TftLeagueV1GetGrandmasterLeagueQueue values.
func (TftLeagueV1GetGrandmasterLeagueQueue) AllValues() []TftLeagueV1GetGrandmasterLeagueQueue {
	return []TftLeagueV1GetGrandmasterLeagueQueue{
		TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFT,
		TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFTDOUBLEUP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1GetGrandmasterLeagueQueue) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFT:
		return []byte(s), nil
	case TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFTDOUBLEUP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1GetGrandmasterLeagueQueue) UnmarshalText(data []byte) error {
	switch TftLeagueV1GetGrandmasterLeagueQueue(data) {
	case TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFT:
		*s = TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFT
		return nil
	case TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFTDOUBLEUP:
		*s = TftLeagueV1GetGrandmasterLeagueQueueRANKEDTFTDOUBLEUP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftLeagueV1GetGrandmasterLeagueServiceUnavailable is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueServiceUnavailable struct{}

func (*TftLeagueV1GetGrandmasterLeagueServiceUnavailable) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueTooManyRequests is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueTooManyRequests struct{}

func (*TftLeagueV1GetGrandmasterLeagueTooManyRequests) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueUnauthorized is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueUnauthorized struct{}

func (*TftLeagueV1GetGrandmasterLeagueUnauthorized) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetGrandmasterLeagueUnsupportedMediaType is response for TftLeagueV1GetGrandmasterLeague operation.
type TftLeagueV1GetGrandmasterLeagueUnsupportedMediaType struct{}

func (*TftLeagueV1GetGrandmasterLeagueUnsupportedMediaType) tftLeagueV1GetGrandmasterLeagueRes() {}

// TftLeagueV1GetLeagueByIdBadGateway is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdBadGateway struct{}

func (*TftLeagueV1GetLeagueByIdBadGateway) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdBadRequest is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdBadRequest struct{}

func (*TftLeagueV1GetLeagueByIdBadRequest) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdForbidden is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdForbidden struct{}

func (*TftLeagueV1GetLeagueByIdForbidden) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdGatewayTimeout is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdGatewayTimeout struct{}

func (*TftLeagueV1GetLeagueByIdGatewayTimeout) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdInternalServerError is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdInternalServerError struct{}

func (*TftLeagueV1GetLeagueByIdInternalServerError) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdMethodNotAllowed is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdMethodNotAllowed struct{}

func (*TftLeagueV1GetLeagueByIdMethodNotAllowed) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdNotFound is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdNotFound struct{}

func (*TftLeagueV1GetLeagueByIdNotFound) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdServiceUnavailable is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdServiceUnavailable struct{}

func (*TftLeagueV1GetLeagueByIdServiceUnavailable) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdTooManyRequests is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdTooManyRequests struct{}

func (*TftLeagueV1GetLeagueByIdTooManyRequests) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdUnauthorized is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdUnauthorized struct{}

func (*TftLeagueV1GetLeagueByIdUnauthorized) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueByIdUnsupportedMediaType is response for TftLeagueV1GetLeagueById operation.
type TftLeagueV1GetLeagueByIdUnsupportedMediaType struct{}

func (*TftLeagueV1GetLeagueByIdUnsupportedMediaType) tftLeagueV1GetLeagueByIdRes() {}

// TftLeagueV1GetLeagueEntriesBadGateway is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesBadGateway struct{}

func (*TftLeagueV1GetLeagueEntriesBadGateway) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesBadRequest is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesBadRequest struct{}

func (*TftLeagueV1GetLeagueEntriesBadRequest) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDBadGateway is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDBadGateway struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDBadGateway) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDBadRequest is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDBadRequest struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDBadRequest) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDForbidden is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDForbidden struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDForbidden) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDGatewayTimeout is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDGatewayTimeout struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDGatewayTimeout) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDInternalServerError is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDInternalServerError struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDInternalServerError) tftLeagueV1GetLeagueEntriesByPUUIDRes() {
}

// TftLeagueV1GetLeagueEntriesByPUUIDMethodNotAllowed is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDMethodNotAllowed struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDMethodNotAllowed) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDNotFound is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDNotFound struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDNotFound) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

type TftLeagueV1GetLeagueEntriesByPUUIDOKApplicationJSON []TftLeagueV1LeagueEntryDTO

func (*TftLeagueV1GetLeagueEntriesByPUUIDOKApplicationJSON) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDServiceUnavailable is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDServiceUnavailable struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDServiceUnavailable) tftLeagueV1GetLeagueEntriesByPUUIDRes() {
}

// TftLeagueV1GetLeagueEntriesByPUUIDTooManyRequests is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDTooManyRequests struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDTooManyRequests) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDUnauthorized is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDUnauthorized struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDUnauthorized) tftLeagueV1GetLeagueEntriesByPUUIDRes() {}

// TftLeagueV1GetLeagueEntriesByPUUIDUnsupportedMediaType is response for TftLeagueV1GetLeagueEntriesByPUUID operation.
type TftLeagueV1GetLeagueEntriesByPUUIDUnsupportedMediaType struct{}

func (*TftLeagueV1GetLeagueEntriesByPUUIDUnsupportedMediaType) tftLeagueV1GetLeagueEntriesByPUUIDRes() {
}

type TftLeagueV1GetLeagueEntriesDivision string

const (
	TftLeagueV1GetLeagueEntriesDivisionI   TftLeagueV1GetLeagueEntriesDivision = "I"
	TftLeagueV1GetLeagueEntriesDivisionII  TftLeagueV1GetLeagueEntriesDivision = "II"
	TftLeagueV1GetLeagueEntriesDivisionIII TftLeagueV1GetLeagueEntriesDivision = "III"
	TftLeagueV1GetLeagueEntriesDivisionIV  TftLeagueV1GetLeagueEntriesDivision = "IV"
)

// AllValues returns all TftLeagueV1GetLeagueEntriesDivision values.
func (TftLeagueV1GetLeagueEntriesDivision) AllValues() []TftLeagueV1GetLeagueEntriesDivision {
	return []TftLeagueV1GetLeagueEntriesDivision{
		TftLeagueV1GetLeagueEntriesDivisionI,
		TftLeagueV1GetLeagueEntriesDivisionII,
		TftLeagueV1GetLeagueEntriesDivisionIII,
		TftLeagueV1GetLeagueEntriesDivisionIV,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1GetLeagueEntriesDivision) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1GetLeagueEntriesDivisionI:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesDivisionII:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesDivisionIII:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesDivisionIV:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1GetLeagueEntriesDivision) UnmarshalText(data []byte) error {
	switch TftLeagueV1GetLeagueEntriesDivision(data) {
	case TftLeagueV1GetLeagueEntriesDivisionI:
		*s = TftLeagueV1GetLeagueEntriesDivisionI
		return nil
	case TftLeagueV1GetLeagueEntriesDivisionII:
		*s = TftLeagueV1GetLeagueEntriesDivisionII
		return nil
	case TftLeagueV1GetLeagueEntriesDivisionIII:
		*s = TftLeagueV1GetLeagueEntriesDivisionIII
		return nil
	case TftLeagueV1GetLeagueEntriesDivisionIV:
		*s = TftLeagueV1GetLeagueEntriesDivisionIV
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftLeagueV1GetLeagueEntriesForbidden is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesForbidden struct{}

func (*TftLeagueV1GetLeagueEntriesForbidden) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesGatewayTimeout is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesGatewayTimeout struct{}

func (*TftLeagueV1GetLeagueEntriesGatewayTimeout) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesInternalServerError is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesInternalServerError struct{}

func (*TftLeagueV1GetLeagueEntriesInternalServerError) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesMethodNotAllowed is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesMethodNotAllowed struct{}

func (*TftLeagueV1GetLeagueEntriesMethodNotAllowed) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesNotFound is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesNotFound struct{}

func (*TftLeagueV1GetLeagueEntriesNotFound) tftLeagueV1GetLeagueEntriesRes() {}

type TftLeagueV1GetLeagueEntriesOKApplicationJSON []TftLeagueV1LeagueEntryDTO

func (*TftLeagueV1GetLeagueEntriesOKApplicationJSON) tftLeagueV1GetLeagueEntriesRes() {}

type TftLeagueV1GetLeagueEntriesQueue string

const (
	TftLeagueV1GetLeagueEntriesQueueRANKEDTFT         TftLeagueV1GetLeagueEntriesQueue = "RANKED_TFT"
	TftLeagueV1GetLeagueEntriesQueueRANKEDTFTDOUBLEUP TftLeagueV1GetLeagueEntriesQueue = "RANKED_TFT_DOUBLE_UP"
)

// AllValues returns all TftLeagueV1GetLeagueEntriesQueue values.
func (TftLeagueV1GetLeagueEntriesQueue) AllValues() []TftLeagueV1GetLeagueEntriesQueue {
	return []TftLeagueV1GetLeagueEntriesQueue{
		TftLeagueV1GetLeagueEntriesQueueRANKEDTFT,
		TftLeagueV1GetLeagueEntriesQueueRANKEDTFTDOUBLEUP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1GetLeagueEntriesQueue) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1GetLeagueEntriesQueueRANKEDTFT:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesQueueRANKEDTFTDOUBLEUP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1GetLeagueEntriesQueue) UnmarshalText(data []byte) error {
	switch TftLeagueV1GetLeagueEntriesQueue(data) {
	case TftLeagueV1GetLeagueEntriesQueueRANKEDTFT:
		*s = TftLeagueV1GetLeagueEntriesQueueRANKEDTFT
		return nil
	case TftLeagueV1GetLeagueEntriesQueueRANKEDTFTDOUBLEUP:
		*s = TftLeagueV1GetLeagueEntriesQueueRANKEDTFTDOUBLEUP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftLeagueV1GetLeagueEntriesServiceUnavailable is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesServiceUnavailable struct{}

func (*TftLeagueV1GetLeagueEntriesServiceUnavailable) tftLeagueV1GetLeagueEntriesRes() {}

type TftLeagueV1GetLeagueEntriesTier string

const (
	TftLeagueV1GetLeagueEntriesTierDIAMOND  TftLeagueV1GetLeagueEntriesTier = "DIAMOND"
	TftLeagueV1GetLeagueEntriesTierEMERALD  TftLeagueV1GetLeagueEntriesTier = "EMERALD"
	TftLeagueV1GetLeagueEntriesTierPLATINUM TftLeagueV1GetLeagueEntriesTier = "PLATINUM"
	TftLeagueV1GetLeagueEntriesTierGOLD     TftLeagueV1GetLeagueEntriesTier = "GOLD"
	TftLeagueV1GetLeagueEntriesTierSILVER   TftLeagueV1GetLeagueEntriesTier = "SILVER"
	TftLeagueV1GetLeagueEntriesTierBRONZE   TftLeagueV1GetLeagueEntriesTier = "BRONZE"
	TftLeagueV1GetLeagueEntriesTierIRON     TftLeagueV1GetLeagueEntriesTier = "IRON"
)

// AllValues returns all TftLeagueV1GetLeagueEntriesTier values.
func (TftLeagueV1GetLeagueEntriesTier) AllValues() []TftLeagueV1GetLeagueEntriesTier {
	return []TftLeagueV1GetLeagueEntriesTier{
		TftLeagueV1GetLeagueEntriesTierDIAMOND,
		TftLeagueV1GetLeagueEntriesTierEMERALD,
		TftLeagueV1GetLeagueEntriesTierPLATINUM,
		TftLeagueV1GetLeagueEntriesTierGOLD,
		TftLeagueV1GetLeagueEntriesTierSILVER,
		TftLeagueV1GetLeagueEntriesTierBRONZE,
		TftLeagueV1GetLeagueEntriesTierIRON,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1GetLeagueEntriesTier) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1GetLeagueEntriesTierDIAMOND:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesTierEMERALD:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesTierPLATINUM:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesTierGOLD:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesTierSILVER:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesTierBRONZE:
		return []byte(s), nil
	case TftLeagueV1GetLeagueEntriesTierIRON:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1GetLeagueEntriesTier) UnmarshalText(data []byte) error {
	switch TftLeagueV1GetLeagueEntriesTier(data) {
	case TftLeagueV1GetLeagueEntriesTierDIAMOND:
		*s = TftLeagueV1GetLeagueEntriesTierDIAMOND
		return nil
	case TftLeagueV1GetLeagueEntriesTierEMERALD:
		*s = TftLeagueV1GetLeagueEntriesTierEMERALD
		return nil
	case TftLeagueV1GetLeagueEntriesTierPLATINUM:
		*s = TftLeagueV1GetLeagueEntriesTierPLATINUM
		return nil
	case TftLeagueV1GetLeagueEntriesTierGOLD:
		*s = TftLeagueV1GetLeagueEntriesTierGOLD
		return nil
	case TftLeagueV1GetLeagueEntriesTierSILVER:
		*s = TftLeagueV1GetLeagueEntriesTierSILVER
		return nil
	case TftLeagueV1GetLeagueEntriesTierBRONZE:
		*s = TftLeagueV1GetLeagueEntriesTierBRONZE
		return nil
	case TftLeagueV1GetLeagueEntriesTierIRON:
		*s = TftLeagueV1GetLeagueEntriesTierIRON
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftLeagueV1GetLeagueEntriesTooManyRequests is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesTooManyRequests struct{}

func (*TftLeagueV1GetLeagueEntriesTooManyRequests) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesUnauthorized is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesUnauthorized struct{}

func (*TftLeagueV1GetLeagueEntriesUnauthorized) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetLeagueEntriesUnsupportedMediaType is response for TftLeagueV1GetLeagueEntries operation.
type TftLeagueV1GetLeagueEntriesUnsupportedMediaType struct{}

func (*TftLeagueV1GetLeagueEntriesUnsupportedMediaType) tftLeagueV1GetLeagueEntriesRes() {}

// TftLeagueV1GetMasterLeagueBadGateway is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueBadGateway struct{}

func (*TftLeagueV1GetMasterLeagueBadGateway) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueBadRequest is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueBadRequest struct{}

func (*TftLeagueV1GetMasterLeagueBadRequest) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueForbidden is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueForbidden struct{}

func (*TftLeagueV1GetMasterLeagueForbidden) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueGatewayTimeout is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueGatewayTimeout struct{}

func (*TftLeagueV1GetMasterLeagueGatewayTimeout) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueInternalServerError is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueInternalServerError struct{}

func (*TftLeagueV1GetMasterLeagueInternalServerError) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueMethodNotAllowed is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueMethodNotAllowed struct{}

func (*TftLeagueV1GetMasterLeagueMethodNotAllowed) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueNotFound is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueNotFound struct{}

func (*TftLeagueV1GetMasterLeagueNotFound) tftLeagueV1GetMasterLeagueRes() {}

type TftLeagueV1GetMasterLeagueQueue string

const (
	TftLeagueV1GetMasterLeagueQueueRANKEDTFT         TftLeagueV1GetMasterLeagueQueue = "RANKED_TFT"
	TftLeagueV1GetMasterLeagueQueueRANKEDTFTDOUBLEUP TftLeagueV1GetMasterLeagueQueue = "RANKED_TFT_DOUBLE_UP"
)

// AllValues returns all TftLeagueV1GetMasterLeagueQueue values.
func (TftLeagueV1GetMasterLeagueQueue) AllValues() []TftLeagueV1GetMasterLeagueQueue {
	return []TftLeagueV1GetMasterLeagueQueue{
		TftLeagueV1GetMasterLeagueQueueRANKEDTFT,
		TftLeagueV1GetMasterLeagueQueueRANKEDTFTDOUBLEUP,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1GetMasterLeagueQueue) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1GetMasterLeagueQueueRANKEDTFT:
		return []byte(s), nil
	case TftLeagueV1GetMasterLeagueQueueRANKEDTFTDOUBLEUP:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1GetMasterLeagueQueue) UnmarshalText(data []byte) error {
	switch TftLeagueV1GetMasterLeagueQueue(data) {
	case TftLeagueV1GetMasterLeagueQueueRANKEDTFT:
		*s = TftLeagueV1GetMasterLeagueQueueRANKEDTFT
		return nil
	case TftLeagueV1GetMasterLeagueQueueRANKEDTFTDOUBLEUP:
		*s = TftLeagueV1GetMasterLeagueQueueRANKEDTFTDOUBLEUP
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftLeagueV1GetMasterLeagueServiceUnavailable is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueServiceUnavailable struct{}

func (*TftLeagueV1GetMasterLeagueServiceUnavailable) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueTooManyRequests is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueTooManyRequests struct{}

func (*TftLeagueV1GetMasterLeagueTooManyRequests) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueUnauthorized is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueUnauthorized struct{}

func (*TftLeagueV1GetMasterLeagueUnauthorized) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetMasterLeagueUnsupportedMediaType is response for TftLeagueV1GetMasterLeague operation.
type TftLeagueV1GetMasterLeagueUnsupportedMediaType struct{}

func (*TftLeagueV1GetMasterLeagueUnsupportedMediaType) tftLeagueV1GetMasterLeagueRes() {}

// TftLeagueV1GetTopRatedLadderBadGateway is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderBadGateway struct{}

func (*TftLeagueV1GetTopRatedLadderBadGateway) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderBadRequest is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderBadRequest struct{}

func (*TftLeagueV1GetTopRatedLadderBadRequest) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderForbidden is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderForbidden struct{}

func (*TftLeagueV1GetTopRatedLadderForbidden) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderGatewayTimeout is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderGatewayTimeout struct{}

func (*TftLeagueV1GetTopRatedLadderGatewayTimeout) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderInternalServerError is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderInternalServerError struct{}

func (*TftLeagueV1GetTopRatedLadderInternalServerError) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderMethodNotAllowed is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderMethodNotAllowed struct{}

func (*TftLeagueV1GetTopRatedLadderMethodNotAllowed) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderNotFound is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderNotFound struct{}

func (*TftLeagueV1GetTopRatedLadderNotFound) tftLeagueV1GetTopRatedLadderRes() {}

type TftLeagueV1GetTopRatedLadderOKApplicationJSON []TftLeagueV1TopRatedLadderEntryDto

func (*TftLeagueV1GetTopRatedLadderOKApplicationJSON) tftLeagueV1GetTopRatedLadderRes() {}

type TftLeagueV1GetTopRatedLadderQueue string

const (
	TftLeagueV1GetTopRatedLadderQueueRANKEDTFTTURBO TftLeagueV1GetTopRatedLadderQueue = "RANKED_TFT_TURBO"
)

// AllValues returns all TftLeagueV1GetTopRatedLadderQueue values.
func (TftLeagueV1GetTopRatedLadderQueue) AllValues() []TftLeagueV1GetTopRatedLadderQueue {
	return []TftLeagueV1GetTopRatedLadderQueue{
		TftLeagueV1GetTopRatedLadderQueueRANKEDTFTTURBO,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1GetTopRatedLadderQueue) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1GetTopRatedLadderQueueRANKEDTFTTURBO:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1GetTopRatedLadderQueue) UnmarshalText(data []byte) error {
	switch TftLeagueV1GetTopRatedLadderQueue(data) {
	case TftLeagueV1GetTopRatedLadderQueueRANKEDTFTTURBO:
		*s = TftLeagueV1GetTopRatedLadderQueueRANKEDTFTTURBO
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftLeagueV1GetTopRatedLadderServiceUnavailable is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderServiceUnavailable struct{}

func (*TftLeagueV1GetTopRatedLadderServiceUnavailable) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderTooManyRequests is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderTooManyRequests struct{}

func (*TftLeagueV1GetTopRatedLadderTooManyRequests) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderUnauthorized is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderUnauthorized struct{}

func (*TftLeagueV1GetTopRatedLadderUnauthorized) tftLeagueV1GetTopRatedLadderRes() {}

// TftLeagueV1GetTopRatedLadderUnsupportedMediaType is response for TftLeagueV1GetTopRatedLadder operation.
type TftLeagueV1GetTopRatedLadderUnsupportedMediaType struct{}

func (*TftLeagueV1GetTopRatedLadderUnsupportedMediaType) tftLeagueV1GetTopRatedLadderRes() {}

// Ref: #/components/schemas/tft-league-v1.LeagueEntryDTO
type TftLeagueV1LeagueEntryDTO struct {
	// Player Universal Unique Identifier. Exact length of 78 characters. (Encrypted).
	Puuid OptString `json:"puuid"`
	// Not included for the RANKED_TFT_TURBO queueType.
	LeagueId  OptString `json:"leagueId"`
	QueueType string    `json:"queueType"`
	// Only included for the RANKED_TFT_TURBO queueType.
	// (Legal values:  ORANGE,  PURPLE,  BLUE,  GREEN,  GRAY).
	RatedTier OptTftLeagueV1LeagueEntryDTORatedTier `json:"ratedTier"`
	// Only included for the RANKED_TFT_TURBO queueType.
	RatedRating OptInt32 `json:"ratedRating"`
	// Not included for the RANKED_TFT_TURBO queueType.
	Tier OptString `json:"tier"`
	// The player's division within a tier. Not included for the RANKED_TFT_TURBO queueType.
	Rank OptString `json:"rank"`
	// Not included for the RANKED_TFT_TURBO queueType.
	LeaguePoints OptInt32 `json:"leaguePoints"`
	// First placement.
	Wins int32 `json:"wins"`
	// Second through eighth placement.
	Losses int32 `json:"losses"`
	// Not included for the RANKED_TFT_TURBO queueType.
	HotStreak OptBool `json:"hotStreak"`
	// Not included for the RANKED_TFT_TURBO queueType.
	Veteran OptBool `json:"veteran"`
	// Not included for the RANKED_TFT_TURBO queueType.
	FreshBlood OptBool `json:"freshBlood"`
	// Not included for the RANKED_TFT_TURBO queueType.
	Inactive OptBool `json:"inactive"`
	// Not included for the RANKED_TFT_TURBO queueType.
	MiniSeries OptTftLeagueV1MiniSeriesDTO `json:"miniSeries"`
}

// GetPuuid returns the value of Puuid.
func (s *TftLeagueV1LeagueEntryDTO) GetPuuid() OptString {
	return s.Puuid
}

// GetLeagueId returns the value of LeagueId.
func (s *TftLeagueV1LeagueEntryDTO) GetLeagueId() OptString {
	return s.LeagueId
}

// GetQueueType returns the value of QueueType.
func (s *TftLeagueV1LeagueEntryDTO) GetQueueType() string {
	return s.QueueType
}

// GetRatedTier returns the value of RatedTier.
func (s *TftLeagueV1LeagueEntryDTO) GetRatedTier() OptTftLeagueV1LeagueEntryDTORatedTier {
	return s.RatedTier
}

// GetRatedRating returns the value of RatedRating.
func (s *TftLeagueV1LeagueEntryDTO) GetRatedRating() OptInt32 {
	return s.RatedRating
}

// GetTier returns the value of Tier.
func (s *TftLeagueV1LeagueEntryDTO) GetTier() OptString {
	return s.Tier
}

// GetRank returns the value of Rank.
func (s *TftLeagueV1LeagueEntryDTO) GetRank() OptString {
	return s.Rank
}

// GetLeaguePoints returns the value of LeaguePoints.
func (s *TftLeagueV1LeagueEntryDTO) GetLeaguePoints() OptInt32 {
	return s.LeaguePoints
}

// GetWins returns the value of Wins.
func (s *TftLeagueV1LeagueEntryDTO) GetWins() int32 {
	return s.Wins
}

// GetLosses returns the value of Losses.
func (s *TftLeagueV1LeagueEntryDTO) GetLosses() int32 {
	return s.Losses
}

// GetHotStreak returns the value of HotStreak.
func (s *TftLeagueV1LeagueEntryDTO) GetHotStreak() OptBool {
	return s.HotStreak
}

// GetVeteran returns the value of Veteran.
func (s *TftLeagueV1LeagueEntryDTO) GetVeteran() OptBool {
	return s.Veteran
}

// GetFreshBlood returns the value of FreshBlood.
func (s *TftLeagueV1LeagueEntryDTO) GetFreshBlood() OptBool {
	return s.FreshBlood
}

// GetInactive returns the value of Inactive.
func (s *TftLeagueV1LeagueEntryDTO) GetInactive() OptBool {
	return s.Inactive
}

// GetMiniSeries returns the value of MiniSeries.
func (s *TftLeagueV1LeagueEntryDTO) GetMiniSeries() OptTftLeagueV1MiniSeriesDTO {
	return s.MiniSeries
}

// SetPuuid sets the value of Puuid.
func (s *TftLeagueV1LeagueEntryDTO) SetPuuid(val OptString) {
	s.Puuid = val
}

// SetLeagueId sets the value of LeagueId.
func (s *TftLeagueV1LeagueEntryDTO) SetLeagueId(val OptString) {
	s.LeagueId = val
}

// SetQueueType sets the value of QueueType.
func (s *TftLeagueV1LeagueEntryDTO) SetQueueType(val string) {
	s.QueueType = val
}

// SetRatedTier sets the value of RatedTier.
func (s *TftLeagueV1LeagueEntryDTO) SetRatedTier(val OptTftLeagueV1LeagueEntryDTORatedTier) {
	s.RatedTier = val
}

// SetRatedRating sets the value of RatedRating.
func (s *TftLeagueV1LeagueEntryDTO) SetRatedRating(val OptInt32) {
	s.RatedRating = val
}

// SetTier sets the value of Tier.
func (s *TftLeagueV1LeagueEntryDTO) SetTier(val OptString) {
	s.Tier = val
}

// SetRank sets the value of Rank.
func (s *TftLeagueV1LeagueEntryDTO) SetRank(val OptString) {
	s.Rank = val
}

// SetLeaguePoints sets the value of LeaguePoints.
func (s *TftLeagueV1LeagueEntryDTO) SetLeaguePoints(val OptInt32) {
	s.LeaguePoints = val
}

// SetWins sets the value of Wins.
func (s *TftLeagueV1LeagueEntryDTO) SetWins(val int32) {
	s.Wins = val
}

// SetLosses sets the value of Losses.
func (s *TftLeagueV1LeagueEntryDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetHotStreak sets the value of HotStreak.
func (s *TftLeagueV1LeagueEntryDTO) SetHotStreak(val OptBool) {
	s.HotStreak = val
}

// SetVeteran sets the value of Veteran.
func (s *TftLeagueV1LeagueEntryDTO) SetVeteran(val OptBool) {
	s.Veteran = val
}

// SetFreshBlood sets the value of FreshBlood.
func (s *TftLeagueV1LeagueEntryDTO) SetFreshBlood(val OptBool) {
	s.FreshBlood = val
}

// SetInactive sets the value of Inactive.
func (s *TftLeagueV1LeagueEntryDTO) SetInactive(val OptBool) {
	s.Inactive = val
}

// SetMiniSeries sets the value of MiniSeries.
func (s *TftLeagueV1LeagueEntryDTO) SetMiniSeries(val OptTftLeagueV1MiniSeriesDTO) {
	s.MiniSeries = val
}

// Only included for the RANKED_TFT_TURBO queueType.
// (Legal values:  ORANGE,  PURPLE,  BLUE,  GREEN,  GRAY).
type TftLeagueV1LeagueEntryDTORatedTier string

const (
	TftLeagueV1LeagueEntryDTORatedTierORANGE TftLeagueV1LeagueEntryDTORatedTier = "ORANGE"
	TftLeagueV1LeagueEntryDTORatedTierPURPLE TftLeagueV1LeagueEntryDTORatedTier = "PURPLE"
	TftLeagueV1LeagueEntryDTORatedTierBLUE   TftLeagueV1LeagueEntryDTORatedTier = "BLUE"
	TftLeagueV1LeagueEntryDTORatedTierGREEN  TftLeagueV1LeagueEntryDTORatedTier = "GREEN"
	TftLeagueV1LeagueEntryDTORatedTierGRAY   TftLeagueV1LeagueEntryDTORatedTier = "GRAY"
)

// AllValues returns all TftLeagueV1LeagueEntryDTORatedTier values.
func (TftLeagueV1LeagueEntryDTORatedTier) AllValues() []TftLeagueV1LeagueEntryDTORatedTier {
	return []TftLeagueV1LeagueEntryDTORatedTier{
		TftLeagueV1LeagueEntryDTORatedTierORANGE,
		TftLeagueV1LeagueEntryDTORatedTierPURPLE,
		TftLeagueV1LeagueEntryDTORatedTierBLUE,
		TftLeagueV1LeagueEntryDTORatedTierGREEN,
		TftLeagueV1LeagueEntryDTORatedTierGRAY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1LeagueEntryDTORatedTier) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1LeagueEntryDTORatedTierORANGE:
		return []byte(s), nil
	case TftLeagueV1LeagueEntryDTORatedTierPURPLE:
		return []byte(s), nil
	case TftLeagueV1LeagueEntryDTORatedTierBLUE:
		return []byte(s), nil
	case TftLeagueV1LeagueEntryDTORatedTierGREEN:
		return []byte(s), nil
	case TftLeagueV1LeagueEntryDTORatedTierGRAY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1LeagueEntryDTORatedTier) UnmarshalText(data []byte) error {
	switch TftLeagueV1LeagueEntryDTORatedTier(data) {
	case TftLeagueV1LeagueEntryDTORatedTierORANGE:
		*s = TftLeagueV1LeagueEntryDTORatedTierORANGE
		return nil
	case TftLeagueV1LeagueEntryDTORatedTierPURPLE:
		*s = TftLeagueV1LeagueEntryDTORatedTierPURPLE
		return nil
	case TftLeagueV1LeagueEntryDTORatedTierBLUE:
		*s = TftLeagueV1LeagueEntryDTORatedTierBLUE
		return nil
	case TftLeagueV1LeagueEntryDTORatedTierGREEN:
		*s = TftLeagueV1LeagueEntryDTORatedTierGREEN
		return nil
	case TftLeagueV1LeagueEntryDTORatedTierGRAY:
		*s = TftLeagueV1LeagueEntryDTORatedTierGRAY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tft-league-v1.LeagueItemDTO
type TftLeagueV1LeagueItemDTO struct {
	FreshBlood bool `json:"freshBlood"`
	// First placement.
	Wins         int32                       `json:"wins"`
	MiniSeries   OptTftLeagueV1MiniSeriesDTO `json:"miniSeries"`
	Inactive     bool                        `json:"inactive"`
	Veteran      bool                        `json:"veteran"`
	HotStreak    bool                        `json:"hotStreak"`
	Rank         string                      `json:"rank"`
	LeaguePoints int32                       `json:"leaguePoints"`
	// Second through eighth placement.
	Losses int32 `json:"losses"`
	// Player's encrypted puuid.
	Puuid string `json:"puuid"`
}

// GetFreshBlood returns the value of FreshBlood.
func (s *TftLeagueV1LeagueItemDTO) GetFreshBlood() bool {
	return s.FreshBlood
}

// GetWins returns the value of Wins.
func (s *TftLeagueV1LeagueItemDTO) GetWins() int32 {
	return s.Wins
}

// GetMiniSeries returns the value of MiniSeries.
func (s *TftLeagueV1LeagueItemDTO) GetMiniSeries() OptTftLeagueV1MiniSeriesDTO {
	return s.MiniSeries
}

// GetInactive returns the value of Inactive.
func (s *TftLeagueV1LeagueItemDTO) GetInactive() bool {
	return s.Inactive
}

// GetVeteran returns the value of Veteran.
func (s *TftLeagueV1LeagueItemDTO) GetVeteran() bool {
	return s.Veteran
}

// GetHotStreak returns the value of HotStreak.
func (s *TftLeagueV1LeagueItemDTO) GetHotStreak() bool {
	return s.HotStreak
}

// GetRank returns the value of Rank.
func (s *TftLeagueV1LeagueItemDTO) GetRank() string {
	return s.Rank
}

// GetLeaguePoints returns the value of LeaguePoints.
func (s *TftLeagueV1LeagueItemDTO) GetLeaguePoints() int32 {
	return s.LeaguePoints
}

// GetLosses returns the value of Losses.
func (s *TftLeagueV1LeagueItemDTO) GetLosses() int32 {
	return s.Losses
}

// GetPuuid returns the value of Puuid.
func (s *TftLeagueV1LeagueItemDTO) GetPuuid() string {
	return s.Puuid
}

// SetFreshBlood sets the value of FreshBlood.
func (s *TftLeagueV1LeagueItemDTO) SetFreshBlood(val bool) {
	s.FreshBlood = val
}

// SetWins sets the value of Wins.
func (s *TftLeagueV1LeagueItemDTO) SetWins(val int32) {
	s.Wins = val
}

// SetMiniSeries sets the value of MiniSeries.
func (s *TftLeagueV1LeagueItemDTO) SetMiniSeries(val OptTftLeagueV1MiniSeriesDTO) {
	s.MiniSeries = val
}

// SetInactive sets the value of Inactive.
func (s *TftLeagueV1LeagueItemDTO) SetInactive(val bool) {
	s.Inactive = val
}

// SetVeteran sets the value of Veteran.
func (s *TftLeagueV1LeagueItemDTO) SetVeteran(val bool) {
	s.Veteran = val
}

// SetHotStreak sets the value of HotStreak.
func (s *TftLeagueV1LeagueItemDTO) SetHotStreak(val bool) {
	s.HotStreak = val
}

// SetRank sets the value of Rank.
func (s *TftLeagueV1LeagueItemDTO) SetRank(val string) {
	s.Rank = val
}

// SetLeaguePoints sets the value of LeaguePoints.
func (s *TftLeagueV1LeagueItemDTO) SetLeaguePoints(val int32) {
	s.LeaguePoints = val
}

// SetLosses sets the value of Losses.
func (s *TftLeagueV1LeagueItemDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetPuuid sets the value of Puuid.
func (s *TftLeagueV1LeagueItemDTO) SetPuuid(val string) {
	s.Puuid = val
}

// Ref: #/components/schemas/tft-league-v1.LeagueListDTO
type TftLeagueV1LeagueListDTO struct {
	LeagueId OptString                  `json:"leagueId"`
	Entries  []TftLeagueV1LeagueItemDTO `json:"entries"`
	Tier     string                     `json:"tier"`
	Name     OptString                  `json:"name"`
	Queue    OptString                  `json:"queue"`
}

// GetLeagueId returns the value of LeagueId.
func (s *TftLeagueV1LeagueListDTO) GetLeagueId() OptString {
	return s.LeagueId
}

// GetEntries returns the value of Entries.
func (s *TftLeagueV1LeagueListDTO) GetEntries() []TftLeagueV1LeagueItemDTO {
	return s.Entries
}

// GetTier returns the value of Tier.
func (s *TftLeagueV1LeagueListDTO) GetTier() string {
	return s.Tier
}

// GetName returns the value of Name.
func (s *TftLeagueV1LeagueListDTO) GetName() OptString {
	return s.Name
}

// GetQueue returns the value of Queue.
func (s *TftLeagueV1LeagueListDTO) GetQueue() OptString {
	return s.Queue
}

// SetLeagueId sets the value of LeagueId.
func (s *TftLeagueV1LeagueListDTO) SetLeagueId(val OptString) {
	s.LeagueId = val
}

// SetEntries sets the value of Entries.
func (s *TftLeagueV1LeagueListDTO) SetEntries(val []TftLeagueV1LeagueItemDTO) {
	s.Entries = val
}

// SetTier sets the value of Tier.
func (s *TftLeagueV1LeagueListDTO) SetTier(val string) {
	s.Tier = val
}

// SetName sets the value of Name.
func (s *TftLeagueV1LeagueListDTO) SetName(val OptString) {
	s.Name = val
}

// SetQueue sets the value of Queue.
func (s *TftLeagueV1LeagueListDTO) SetQueue(val OptString) {
	s.Queue = val
}

func (*TftLeagueV1LeagueListDTO) tftLeagueV1GetChallengerLeagueRes()  {}
func (*TftLeagueV1LeagueListDTO) tftLeagueV1GetGrandmasterLeagueRes() {}
func (*TftLeagueV1LeagueListDTO) tftLeagueV1GetLeagueByIdRes()        {}
func (*TftLeagueV1LeagueListDTO) tftLeagueV1GetMasterLeagueRes()      {}

// Ref: #/components/schemas/tft-league-v1.MiniSeriesDTO
type TftLeagueV1MiniSeriesDTO struct {
	Losses   int32  `json:"losses"`
	Progress string `json:"progress"`
	Target   int32  `json:"target"`
	Wins     int32  `json:"wins"`
}

// GetLosses returns the value of Losses.
func (s *TftLeagueV1MiniSeriesDTO) GetLosses() int32 {
	return s.Losses
}

// GetProgress returns the value of Progress.
func (s *TftLeagueV1MiniSeriesDTO) GetProgress() string {
	return s.Progress
}

// GetTarget returns the value of Target.
func (s *TftLeagueV1MiniSeriesDTO) GetTarget() int32 {
	return s.Target
}

// GetWins returns the value of Wins.
func (s *TftLeagueV1MiniSeriesDTO) GetWins() int32 {
	return s.Wins
}

// SetLosses sets the value of Losses.
func (s *TftLeagueV1MiniSeriesDTO) SetLosses(val int32) {
	s.Losses = val
}

// SetProgress sets the value of Progress.
func (s *TftLeagueV1MiniSeriesDTO) SetProgress(val string) {
	s.Progress = val
}

// SetTarget sets the value of Target.
func (s *TftLeagueV1MiniSeriesDTO) SetTarget(val int32) {
	s.Target = val
}

// SetWins sets the value of Wins.
func (s *TftLeagueV1MiniSeriesDTO) SetWins(val int32) {
	s.Wins = val
}

// Ref: #/components/schemas/tft-league-v1.TopRatedLadderEntryDto
type TftLeagueV1TopRatedLadderEntryDto struct {
	// Player's encrypted puuid.
	Puuid string `json:"puuid"`
	// (Legal values:  ORANGE,  PURPLE,  BLUE,  GREEN,  GRAY).
	RatedTier   TftLeagueV1TopRatedLadderEntryDtoRatedTier `json:"ratedTier"`
	RatedRating int32                                      `json:"ratedRating"`
	// First placement.
	Wins                         int32 `json:"wins"`
	PreviousUpdateLadderPosition int32 `json:"previousUpdateLadderPosition"`
}

// GetPuuid returns the value of Puuid.
func (s *TftLeagueV1TopRatedLadderEntryDto) GetPuuid() string {
	return s.Puuid
}

// GetRatedTier returns the value of RatedTier.
func (s *TftLeagueV1TopRatedLadderEntryDto) GetRatedTier() TftLeagueV1TopRatedLadderEntryDtoRatedTier {
	return s.RatedTier
}

// GetRatedRating returns the value of RatedRating.
func (s *TftLeagueV1TopRatedLadderEntryDto) GetRatedRating() int32 {
	return s.RatedRating
}

// GetWins returns the value of Wins.
func (s *TftLeagueV1TopRatedLadderEntryDto) GetWins() int32 {
	return s.Wins
}

// GetPreviousUpdateLadderPosition returns the value of PreviousUpdateLadderPosition.
func (s *TftLeagueV1TopRatedLadderEntryDto) GetPreviousUpdateLadderPosition() int32 {
	return s.PreviousUpdateLadderPosition
}

// SetPuuid sets the value of Puuid.
func (s *TftLeagueV1TopRatedLadderEntryDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetRatedTier sets the value of RatedTier.
func (s *TftLeagueV1TopRatedLadderEntryDto) SetRatedTier(val TftLeagueV1TopRatedLadderEntryDtoRatedTier) {
	s.RatedTier = val
}

// SetRatedRating sets the value of RatedRating.
func (s *TftLeagueV1TopRatedLadderEntryDto) SetRatedRating(val int32) {
	s.RatedRating = val
}

// SetWins sets the value of Wins.
func (s *TftLeagueV1TopRatedLadderEntryDto) SetWins(val int32) {
	s.Wins = val
}

// SetPreviousUpdateLadderPosition sets the value of PreviousUpdateLadderPosition.
func (s *TftLeagueV1TopRatedLadderEntryDto) SetPreviousUpdateLadderPosition(val int32) {
	s.PreviousUpdateLadderPosition = val
}

// (Legal values:  ORANGE,  PURPLE,  BLUE,  GREEN,  GRAY).
type TftLeagueV1TopRatedLadderEntryDtoRatedTier string

const (
	TftLeagueV1TopRatedLadderEntryDtoRatedTierORANGE TftLeagueV1TopRatedLadderEntryDtoRatedTier = "ORANGE"
	TftLeagueV1TopRatedLadderEntryDtoRatedTierPURPLE TftLeagueV1TopRatedLadderEntryDtoRatedTier = "PURPLE"
	TftLeagueV1TopRatedLadderEntryDtoRatedTierBLUE   TftLeagueV1TopRatedLadderEntryDtoRatedTier = "BLUE"
	TftLeagueV1TopRatedLadderEntryDtoRatedTierGREEN  TftLeagueV1TopRatedLadderEntryDtoRatedTier = "GREEN"
	TftLeagueV1TopRatedLadderEntryDtoRatedTierGRAY   TftLeagueV1TopRatedLadderEntryDtoRatedTier = "GRAY"
)

// AllValues returns all TftLeagueV1TopRatedLadderEntryDtoRatedTier values.
func (TftLeagueV1TopRatedLadderEntryDtoRatedTier) AllValues() []TftLeagueV1TopRatedLadderEntryDtoRatedTier {
	return []TftLeagueV1TopRatedLadderEntryDtoRatedTier{
		TftLeagueV1TopRatedLadderEntryDtoRatedTierORANGE,
		TftLeagueV1TopRatedLadderEntryDtoRatedTierPURPLE,
		TftLeagueV1TopRatedLadderEntryDtoRatedTierBLUE,
		TftLeagueV1TopRatedLadderEntryDtoRatedTierGREEN,
		TftLeagueV1TopRatedLadderEntryDtoRatedTierGRAY,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftLeagueV1TopRatedLadderEntryDtoRatedTier) MarshalText() ([]byte, error) {
	switch s {
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierORANGE:
		return []byte(s), nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierPURPLE:
		return []byte(s), nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierBLUE:
		return []byte(s), nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierGREEN:
		return []byte(s), nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierGRAY:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftLeagueV1TopRatedLadderEntryDtoRatedTier) UnmarshalText(data []byte) error {
	switch TftLeagueV1TopRatedLadderEntryDtoRatedTier(data) {
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierORANGE:
		*s = TftLeagueV1TopRatedLadderEntryDtoRatedTierORANGE
		return nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierPURPLE:
		*s = TftLeagueV1TopRatedLadderEntryDtoRatedTierPURPLE
		return nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierBLUE:
		*s = TftLeagueV1TopRatedLadderEntryDtoRatedTierBLUE
		return nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierGREEN:
		*s = TftLeagueV1TopRatedLadderEntryDtoRatedTierGREEN
		return nil
	case TftLeagueV1TopRatedLadderEntryDtoRatedTierGRAY:
		*s = TftLeagueV1TopRatedLadderEntryDtoRatedTierGRAY
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tft-match-v1.CompanionDto
type TftMatchV1CompanionDto struct {
	ContentID string `json:"content_ID"`
	ItemID    int32  `json:"item_ID"`
	SkinID    int32  `json:"skin_ID"`
	Species   string `json:"species"`
}

// GetContentID returns the value of ContentID.
func (s *TftMatchV1CompanionDto) GetContentID() string {
	return s.ContentID
}

// GetItemID returns the value of ItemID.
func (s *TftMatchV1CompanionDto) GetItemID() int32 {
	return s.ItemID
}

// GetSkinID returns the value of SkinID.
func (s *TftMatchV1CompanionDto) GetSkinID() int32 {
	return s.SkinID
}

// GetSpecies returns the value of Species.
func (s *TftMatchV1CompanionDto) GetSpecies() string {
	return s.Species
}

// SetContentID sets the value of ContentID.
func (s *TftMatchV1CompanionDto) SetContentID(val string) {
	s.ContentID = val
}

// SetItemID sets the value of ItemID.
func (s *TftMatchV1CompanionDto) SetItemID(val int32) {
	s.ItemID = val
}

// SetSkinID sets the value of SkinID.
func (s *TftMatchV1CompanionDto) SetSkinID(val int32) {
	s.SkinID = val
}

// SetSpecies sets the value of Species.
func (s *TftMatchV1CompanionDto) SetSpecies(val string) {
	s.Species = val
}

// TftMatchV1GetMatchBadGateway is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchBadGateway struct{}

func (*TftMatchV1GetMatchBadGateway) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchBadRequest is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchBadRequest struct{}

func (*TftMatchV1GetMatchBadRequest) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchForbidden is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchForbidden struct{}

func (*TftMatchV1GetMatchForbidden) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchGatewayTimeout is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchGatewayTimeout struct{}

func (*TftMatchV1GetMatchGatewayTimeout) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchIdsByPUUIDBadGateway is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDBadGateway struct{}

func (*TftMatchV1GetMatchIdsByPUUIDBadGateway) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDBadRequest is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDBadRequest struct{}

func (*TftMatchV1GetMatchIdsByPUUIDBadRequest) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDForbidden is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDForbidden struct{}

func (*TftMatchV1GetMatchIdsByPUUIDForbidden) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDGatewayTimeout is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDGatewayTimeout struct{}

func (*TftMatchV1GetMatchIdsByPUUIDGatewayTimeout) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDInternalServerError is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDInternalServerError struct{}

func (*TftMatchV1GetMatchIdsByPUUIDInternalServerError) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDMethodNotAllowed is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDMethodNotAllowed struct{}

func (*TftMatchV1GetMatchIdsByPUUIDMethodNotAllowed) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDNotFound is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDNotFound struct{}

func (*TftMatchV1GetMatchIdsByPUUIDNotFound) tftMatchV1GetMatchIdsByPUUIDRes() {}

type TftMatchV1GetMatchIdsByPUUIDOKApplicationJSON []string

func (*TftMatchV1GetMatchIdsByPUUIDOKApplicationJSON) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDServiceUnavailable is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDServiceUnavailable struct{}

func (*TftMatchV1GetMatchIdsByPUUIDServiceUnavailable) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDTooManyRequests is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDTooManyRequests struct{}

func (*TftMatchV1GetMatchIdsByPUUIDTooManyRequests) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDUnauthorized is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDUnauthorized struct{}

func (*TftMatchV1GetMatchIdsByPUUIDUnauthorized) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchIdsByPUUIDUnsupportedMediaType is response for TftMatchV1GetMatchIdsByPUUID operation.
type TftMatchV1GetMatchIdsByPUUIDUnsupportedMediaType struct{}

func (*TftMatchV1GetMatchIdsByPUUIDUnsupportedMediaType) tftMatchV1GetMatchIdsByPUUIDRes() {}

// TftMatchV1GetMatchInternalServerError is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchInternalServerError struct{}

func (*TftMatchV1GetMatchInternalServerError) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchMethodNotAllowed is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchMethodNotAllowed struct{}

func (*TftMatchV1GetMatchMethodNotAllowed) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchNotFound is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchNotFound struct{}

func (*TftMatchV1GetMatchNotFound) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchServiceUnavailable is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchServiceUnavailable struct{}

func (*TftMatchV1GetMatchServiceUnavailable) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchTooManyRequests is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchTooManyRequests struct{}

func (*TftMatchV1GetMatchTooManyRequests) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchUnauthorized is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchUnauthorized struct{}

func (*TftMatchV1GetMatchUnauthorized) tftMatchV1GetMatchRes() {}

// TftMatchV1GetMatchUnsupportedMediaType is response for TftMatchV1GetMatch operation.
type TftMatchV1GetMatchUnsupportedMediaType struct{}

func (*TftMatchV1GetMatchUnsupportedMediaType) tftMatchV1GetMatchRes() {}

// Ref: #/components/schemas/tft-match-v1.InfoDto
type TftMatchV1InfoDto struct {
	EndOfGameResult OptString `json:"endOfGameResult"`
	GameCreation    OptInt64  `json:"gameCreation"`
	GameId          OptInt64  `json:"gameId"`
	// Unix timestamp.
	GameDatetime int64 `json:"game_datetime"`
	// Game length in seconds.
	GameLength float32 `json:"game_length"`
	// Game client version.
	GameVersion string `json:"game_version"`
	// Deprecated. Game variation key. Game variations documented in TFT static data.
	GameVariation OptString                  `json:"game_variation"`
	MapId         OptInt64                   `json:"mapId"`
	Participants  []TftMatchV1ParticipantDto `json:"participants"`
	// Please refer to the League of Legends documentation.
	QueueID int32 `json:"queue_id"`
	// Please refer to the League of Legends documentation.
	QueueId        OptInt32  `json:"queueId"`
	TftGameType    OptString `json:"tft_game_type"`
	TftSetCoreName OptString `json:"tft_set_core_name"`
	// Teamfight Tactics set number.
	TftSetNumber int32 `json:"tft_set_number"`
}

// GetEndOfGameResult returns the value of EndOfGameResult.
func (s *TftMatchV1InfoDto) GetEndOfGameResult() OptString {
	return s.EndOfGameResult
}

// GetGameCreation returns the value of GameCreation.
func (s *TftMatchV1InfoDto) GetGameCreation() OptInt64 {
	return s.GameCreation
}

// GetGameId returns the value of GameId.
func (s *TftMatchV1InfoDto) GetGameId() OptInt64 {
	return s.GameId
}

// GetGameDatetime returns the value of GameDatetime.
func (s *TftMatchV1InfoDto) GetGameDatetime() int64 {
	return s.GameDatetime
}

// GetGameLength returns the value of GameLength.
func (s *TftMatchV1InfoDto) GetGameLength() float32 {
	return s.GameLength
}

// GetGameVersion returns the value of GameVersion.
func (s *TftMatchV1InfoDto) GetGameVersion() string {
	return s.GameVersion
}

// GetGameVariation returns the value of GameVariation.
func (s *TftMatchV1InfoDto) GetGameVariation() OptString {
	return s.GameVariation
}

// GetMapId returns the value of MapId.
func (s *TftMatchV1InfoDto) GetMapId() OptInt64 {
	return s.MapId
}

// GetParticipants returns the value of Participants.
func (s *TftMatchV1InfoDto) GetParticipants() []TftMatchV1ParticipantDto {
	return s.Participants
}

// GetQueueID returns the value of QueueID.
func (s *TftMatchV1InfoDto) GetQueueID() int32 {
	return s.QueueID
}

// GetQueueId returns the value of QueueId.
func (s *TftMatchV1InfoDto) GetQueueId() OptInt32 {
	return s.QueueId
}

// GetTftGameType returns the value of TftGameType.
func (s *TftMatchV1InfoDto) GetTftGameType() OptString {
	return s.TftGameType
}

// GetTftSetCoreName returns the value of TftSetCoreName.
func (s *TftMatchV1InfoDto) GetTftSetCoreName() OptString {
	return s.TftSetCoreName
}

// GetTftSetNumber returns the value of TftSetNumber.
func (s *TftMatchV1InfoDto) GetTftSetNumber() int32 {
	return s.TftSetNumber
}

// SetEndOfGameResult sets the value of EndOfGameResult.
func (s *TftMatchV1InfoDto) SetEndOfGameResult(val OptString) {
	s.EndOfGameResult = val
}

// SetGameCreation sets the value of GameCreation.
func (s *TftMatchV1InfoDto) SetGameCreation(val OptInt64) {
	s.GameCreation = val
}

// SetGameId sets the value of GameId.
func (s *TftMatchV1InfoDto) SetGameId(val OptInt64) {
	s.GameId = val
}

// SetGameDatetime sets the value of GameDatetime.
func (s *TftMatchV1InfoDto) SetGameDatetime(val int64) {
	s.GameDatetime = val
}

// SetGameLength sets the value of GameLength.
func (s *TftMatchV1InfoDto) SetGameLength(val float32) {
	s.GameLength = val
}

// SetGameVersion sets the value of GameVersion.
func (s *TftMatchV1InfoDto) SetGameVersion(val string) {
	s.GameVersion = val
}

// SetGameVariation sets the value of GameVariation.
func (s *TftMatchV1InfoDto) SetGameVariation(val OptString) {
	s.GameVariation = val
}

// SetMapId sets the value of MapId.
func (s *TftMatchV1InfoDto) SetMapId(val OptInt64) {
	s.MapId = val
}

// SetParticipants sets the value of Participants.
func (s *TftMatchV1InfoDto) SetParticipants(val []TftMatchV1ParticipantDto) {
	s.Participants = val
}

// SetQueueID sets the value of QueueID.
func (s *TftMatchV1InfoDto) SetQueueID(val int32) {
	s.QueueID = val
}

// SetQueueId sets the value of QueueId.
func (s *TftMatchV1InfoDto) SetQueueId(val OptInt32) {
	s.QueueId = val
}

// SetTftGameType sets the value of TftGameType.
func (s *TftMatchV1InfoDto) SetTftGameType(val OptString) {
	s.TftGameType = val
}

// SetTftSetCoreName sets the value of TftSetCoreName.
func (s *TftMatchV1InfoDto) SetTftSetCoreName(val OptString) {
	s.TftSetCoreName = val
}

// SetTftSetNumber sets the value of TftSetNumber.
func (s *TftMatchV1InfoDto) SetTftSetNumber(val int32) {
	s.TftSetNumber = val
}

// Ref: #/components/schemas/tft-match-v1.MatchDto
type TftMatchV1MatchDto struct {
	// Match metadata.
	Metadata TftMatchV1MetadataDto `json:"metadata"`
	// Match info.
	Info TftMatchV1InfoDto `json:"info"`
}

// GetMetadata returns the value of Metadata.
func (s *TftMatchV1MatchDto) GetMetadata() TftMatchV1MetadataDto {
	return s.Metadata
}

// GetInfo returns the value of Info.
func (s *TftMatchV1MatchDto) GetInfo() TftMatchV1InfoDto {
	return s.Info
}

// SetMetadata sets the value of Metadata.
func (s *TftMatchV1MatchDto) SetMetadata(val TftMatchV1MetadataDto) {
	s.Metadata = val
}

// SetInfo sets the value of Info.
func (s *TftMatchV1MatchDto) SetInfo(val TftMatchV1InfoDto) {
	s.Info = val
}

func (*TftMatchV1MatchDto) tftMatchV1GetMatchRes() {}

// Ref: #/components/schemas/tft-match-v1.MetadataDto
type TftMatchV1MetadataDto struct {
	// Match data version.
	DataVersion string `json:"data_version"`
	// Match id.
	MatchID string `json:"match_id"`
	// A list of participant PUUIDs.
	Participants []string `json:"participants"`
}

// GetDataVersion returns the value of DataVersion.
func (s *TftMatchV1MetadataDto) GetDataVersion() string {
	return s.DataVersion
}

// GetMatchID returns the value of MatchID.
func (s *TftMatchV1MetadataDto) GetMatchID() string {
	return s.MatchID
}

// GetParticipants returns the value of Participants.
func (s *TftMatchV1MetadataDto) GetParticipants() []string {
	return s.Participants
}

// SetDataVersion sets the value of DataVersion.
func (s *TftMatchV1MetadataDto) SetDataVersion(val string) {
	s.DataVersion = val
}

// SetMatchID sets the value of MatchID.
func (s *TftMatchV1MetadataDto) SetMatchID(val string) {
	s.MatchID = val
}

// SetParticipants sets the value of Participants.
func (s *TftMatchV1MetadataDto) SetParticipants(val []string) {
	s.Participants = val
}

// Ref: #/components/schemas/tft-match-v1.ParticipantDto
type TftMatchV1ParticipantDto struct {
	// Participant's companion.
	Companion TftMatchV1CompanionDto `json:"companion"`
	// Gold left after participant was eliminated.
	GoldLeft int32 `json:"gold_left"`
	// The round the participant was eliminated in. Note: If the player was eliminated in stage 2-1 their
	// last_round would be 5.
	LastRound int32 `json:"last_round"`
	// Participant Little Legend level. Note: This is not the number of active units.
	Level int32 `json:"level"`
	// Participant placement upon elimination.
	Placement int32 `json:"placement"`
	// Number of players the participant eliminated.
	PlayersEliminated int32     `json:"players_eliminated"`
	Puuid             string    `json:"puuid"`
	RiotIdGameName    OptString `json:"riotIdGameName"`
	RiotIdTagline     OptString `json:"riotIdTagline"`
	// The number of seconds before the participant was eliminated.
	TimeEliminated float32 `json:"time_eliminated"`
	// Damage the participant dealt to other players.
	TotalDamageToPlayers int32 `json:"total_damage_to_players"`
	// A complete list of traits for the participant's active units.
	Traits []TftMatchV1TraitDto `json:"traits"`
	// A list of active units for the participant.
	Units          []TftMatchV1UnitDto                  `json:"units"`
	Win            OptBool                              `json:"win"`
	Augments       []string                             `json:"augments"`
	PartnerGroupID OptInt32                             `json:"partner_group_id"`
	Missions       OptTftMatchV1ParticipantMissionsDto  `json:"missions"`
	SkillTree      OptTftMatchV1ParticipantDtoSkillTree `json:"skill_tree"`
	PveScore       OptInt32                             `json:"pve_score"`
	PveWonrun      OptBool                              `json:"pve_wonrun"`
}

// GetCompanion returns the value of Companion.
func (s *TftMatchV1ParticipantDto) GetCompanion() TftMatchV1CompanionDto {
	return s.Companion
}

// GetGoldLeft returns the value of GoldLeft.
func (s *TftMatchV1ParticipantDto) GetGoldLeft() int32 {
	return s.GoldLeft
}

// GetLastRound returns the value of LastRound.
func (s *TftMatchV1ParticipantDto) GetLastRound() int32 {
	return s.LastRound
}

// GetLevel returns the value of Level.
func (s *TftMatchV1ParticipantDto) GetLevel() int32 {
	return s.Level
}

// GetPlacement returns the value of Placement.
func (s *TftMatchV1ParticipantDto) GetPlacement() int32 {
	return s.Placement
}

// GetPlayersEliminated returns the value of PlayersEliminated.
func (s *TftMatchV1ParticipantDto) GetPlayersEliminated() int32 {
	return s.PlayersEliminated
}

// GetPuuid returns the value of Puuid.
func (s *TftMatchV1ParticipantDto) GetPuuid() string {
	return s.Puuid
}

// GetRiotIdGameName returns the value of RiotIdGameName.
func (s *TftMatchV1ParticipantDto) GetRiotIdGameName() OptString {
	return s.RiotIdGameName
}

// GetRiotIdTagline returns the value of RiotIdTagline.
func (s *TftMatchV1ParticipantDto) GetRiotIdTagline() OptString {
	return s.RiotIdTagline
}

// GetTimeEliminated returns the value of TimeEliminated.
func (s *TftMatchV1ParticipantDto) GetTimeEliminated() float32 {
	return s.TimeEliminated
}

// GetTotalDamageToPlayers returns the value of TotalDamageToPlayers.
func (s *TftMatchV1ParticipantDto) GetTotalDamageToPlayers() int32 {
	return s.TotalDamageToPlayers
}

// GetTraits returns the value of Traits.
func (s *TftMatchV1ParticipantDto) GetTraits() []TftMatchV1TraitDto {
	return s.Traits
}

// GetUnits returns the value of Units.
func (s *TftMatchV1ParticipantDto) GetUnits() []TftMatchV1UnitDto {
	return s.Units
}

// GetWin returns the value of Win.
func (s *TftMatchV1ParticipantDto) GetWin() OptBool {
	return s.Win
}

// GetAugments returns the value of Augments.
func (s *TftMatchV1ParticipantDto) GetAugments() []string {
	return s.Augments
}

// GetPartnerGroupID returns the value of PartnerGroupID.
func (s *TftMatchV1ParticipantDto) GetPartnerGroupID() OptInt32 {
	return s.PartnerGroupID
}

// GetMissions returns the value of Missions.
func (s *TftMatchV1ParticipantDto) GetMissions() OptTftMatchV1ParticipantMissionsDto {
	return s.Missions
}

// GetSkillTree returns the value of SkillTree.
func (s *TftMatchV1ParticipantDto) GetSkillTree() OptTftMatchV1ParticipantDtoSkillTree {
	return s.SkillTree
}

// GetPveScore returns the value of PveScore.
func (s *TftMatchV1ParticipantDto) GetPveScore() OptInt32 {
	return s.PveScore
}

// GetPveWonrun returns the value of PveWonrun.
func (s *TftMatchV1ParticipantDto) GetPveWonrun() OptBool {
	return s.PveWonrun
}

// SetCompanion sets the value of Companion.
func (s *TftMatchV1ParticipantDto) SetCompanion(val TftMatchV1CompanionDto) {
	s.Companion = val
}

// SetGoldLeft sets the value of GoldLeft.
func (s *TftMatchV1ParticipantDto) SetGoldLeft(val int32) {
	s.GoldLeft = val
}

// SetLastRound sets the value of LastRound.
func (s *TftMatchV1ParticipantDto) SetLastRound(val int32) {
	s.LastRound = val
}

// SetLevel sets the value of Level.
func (s *TftMatchV1ParticipantDto) SetLevel(val int32) {
	s.Level = val
}

// SetPlacement sets the value of Placement.
func (s *TftMatchV1ParticipantDto) SetPlacement(val int32) {
	s.Placement = val
}

// SetPlayersEliminated sets the value of PlayersEliminated.
func (s *TftMatchV1ParticipantDto) SetPlayersEliminated(val int32) {
	s.PlayersEliminated = val
}

// SetPuuid sets the value of Puuid.
func (s *TftMatchV1ParticipantDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetRiotIdGameName sets the value of RiotIdGameName.
func (s *TftMatchV1ParticipantDto) SetRiotIdGameName(val OptString) {
	s.RiotIdGameName = val
}

// SetRiotIdTagline sets the value of RiotIdTagline.
func (s *TftMatchV1ParticipantDto) SetRiotIdTagline(val OptString) {
	s.RiotIdTagline = val
}

// SetTimeEliminated sets the value of TimeEliminated.
func (s *TftMatchV1ParticipantDto) SetTimeEliminated(val float32) {
	s.TimeEliminated = val
}

// SetTotalDamageToPlayers sets the value of TotalDamageToPlayers.
func (s *TftMatchV1ParticipantDto) SetTotalDamageToPlayers(val int32) {
	s.TotalDamageToPlayers = val
}

// SetTraits sets the value of Traits.
func (s *TftMatchV1ParticipantDto) SetTraits(val []TftMatchV1TraitDto) {
	s.Traits = val
}

// SetUnits sets the value of Units.
func (s *TftMatchV1ParticipantDto) SetUnits(val []TftMatchV1UnitDto) {
	s.Units = val
}

// SetWin sets the value of Win.
func (s *TftMatchV1ParticipantDto) SetWin(val OptBool) {
	s.Win = val
}

// SetAugments sets the value of Augments.
func (s *TftMatchV1ParticipantDto) SetAugments(val []string) {
	s.Augments = val
}

// SetPartnerGroupID sets the value of PartnerGroupID.
func (s *TftMatchV1ParticipantDto) SetPartnerGroupID(val OptInt32) {
	s.PartnerGroupID = val
}

// SetMissions sets the value of Missions.
func (s *TftMatchV1ParticipantDto) SetMissions(val OptTftMatchV1ParticipantMissionsDto) {
	s.Missions = val
}

// SetSkillTree sets the value of SkillTree.
func (s *TftMatchV1ParticipantDto) SetSkillTree(val OptTftMatchV1ParticipantDtoSkillTree) {
	s.SkillTree = val
}

// SetPveScore sets the value of PveScore.
func (s *TftMatchV1ParticipantDto) SetPveScore(val OptInt32) {
	s.PveScore = val
}

// SetPveWonrun sets the value of PveWonrun.
func (s *TftMatchV1ParticipantDto) SetPveWonrun(val OptBool) {
	s.PveWonrun = val
}

type TftMatchV1ParticipantDtoSkillTree map[string]int32

func (s *TftMatchV1ParticipantDtoSkillTree) init() TftMatchV1ParticipantDtoSkillTree {
	m := *s
	if m == nil {
		m = map[string]int32{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/tft-match-v1.ParticipantMissionsDto
type TftMatchV1ParticipantMissionsDto struct {
	Assists                        OptInt32 `json:"Assists"`
	DamageDealt                    OptInt32 `json:"DamageDealt"`
	DamageDealtToObjectives        OptInt32 `json:"DamageDealtToObjectives"`
	DamageDealtToTurrets           OptInt32 `json:"DamageDealtToTurrets"`
	DamageTaken                    OptInt32 `json:"DamageTaken"`
	DoubleKills                    OptInt32 `json:"DoubleKills"`
	GoldEarned                     OptInt32 `json:"GoldEarned"`
	GoldSpent                      OptInt32 `json:"GoldSpent"`
	InhibitorsDestroyed            OptInt32 `json:"InhibitorsDestroyed"`
	Kills                          OptInt32 `json:"Kills"`
	LargestKillingSpree            OptInt32 `json:"LargestKillingSpree"`
	LargestMultiKill               OptInt32 `json:"LargestMultiKill"`
	MagicDamageDealt               OptInt32 `json:"MagicDamageDealt"`
	MagicDamageDealtToChampions    OptInt32 `json:"MagicDamageDealtToChampions"`
	NeutralMinionsKilledTeamJungle OptInt32 `json:"NeutralMinionsKilledTeamJungle"`
	PhysicalDamageDealt            OptInt32 `json:"PhysicalDamageDealt"`
	PhysicalDamageTaken            OptInt32 `json:"PhysicalDamageTaken"`
	PlayerScore0                   OptInt32 `json:"PlayerScore0"`
	PlayerScore1                   OptInt32 `json:"PlayerScore1"`
	PlayerScore2                   OptInt32 `json:"PlayerScore2"`
	PlayerScore3                   OptInt32 `json:"PlayerScore3"`
	PlayerScore4                   OptInt32 `json:"PlayerScore4"`
	PlayerScore5                   OptInt32 `json:"PlayerScore5"`
	PlayerScore6                   OptInt32 `json:"PlayerScore6"`
	PlayerScore9                   OptInt32 `json:"PlayerScore9"`
	PlayerScore10                  OptInt32 `json:"PlayerScore10"`
	PlayerScore11                  OptInt32 `json:"PlayerScore11"`
	QuadraKills                    OptInt32 `json:"QuadraKills"`
	Spell1Casts                    OptInt32 `json:"Spell1Casts"`
	Spell2Casts                    OptInt32 `json:"Spell2Casts"`
	Spell3Casts                    OptInt32 `json:"Spell3Casts"`
	Spell4Casts                    OptInt32 `json:"Spell4Casts"`
	SummonerSpell1Casts            OptInt32 `json:"SummonerSpell1Casts"`
	TimeCCOthers                   OptInt32 `json:"TimeCCOthers"`
	TotalMinionsKilled             OptInt32 `json:"TotalMinionsKilled"`
	TrueDamageDealtToChampions     OptInt32 `json:"TrueDamageDealtToChampions"`
	UnrealKills                    OptInt32 `json:"UnrealKills"`
	VisionScore                    OptInt32 `json:"VisionScore"`
	WardsKilled                    OptInt32 `json:"WardsKilled"`
	Deaths                         OptInt32 `json:"Deaths"`
	KillingSprees                  OptInt32 `json:"KillingSprees"`
	MagicDamageTaken               OptInt32 `json:"MagicDamageTaken"`
	PentaKills                     OptInt32 `json:"PentaKills"`
	PhysicalDamageDealtToChampions OptInt32 `json:"PhysicalDamageDealtToChampions"`
	TotalDamageDealtToChampions    OptInt32 `json:"TotalDamageDealtToChampions"`
	TripleKills                    OptInt32 `json:"TripleKills"`
	TrueDamageDealt                OptInt32 `json:"TrueDamageDealt"`
	TrueDamageTaken                OptInt32 `json:"TrueDamageTaken"`
}

// GetAssists returns the value of Assists.
func (s *TftMatchV1ParticipantMissionsDto) GetAssists() OptInt32 {
	return s.Assists
}

// GetDamageDealt returns the value of DamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) GetDamageDealt() OptInt32 {
	return s.DamageDealt
}

// GetDamageDealtToObjectives returns the value of DamageDealtToObjectives.
func (s *TftMatchV1ParticipantMissionsDto) GetDamageDealtToObjectives() OptInt32 {
	return s.DamageDealtToObjectives
}

// GetDamageDealtToTurrets returns the value of DamageDealtToTurrets.
func (s *TftMatchV1ParticipantMissionsDto) GetDamageDealtToTurrets() OptInt32 {
	return s.DamageDealtToTurrets
}

// GetDamageTaken returns the value of DamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) GetDamageTaken() OptInt32 {
	return s.DamageTaken
}

// GetDoubleKills returns the value of DoubleKills.
func (s *TftMatchV1ParticipantMissionsDto) GetDoubleKills() OptInt32 {
	return s.DoubleKills
}

// GetGoldEarned returns the value of GoldEarned.
func (s *TftMatchV1ParticipantMissionsDto) GetGoldEarned() OptInt32 {
	return s.GoldEarned
}

// GetGoldSpent returns the value of GoldSpent.
func (s *TftMatchV1ParticipantMissionsDto) GetGoldSpent() OptInt32 {
	return s.GoldSpent
}

// GetInhibitorsDestroyed returns the value of InhibitorsDestroyed.
func (s *TftMatchV1ParticipantMissionsDto) GetInhibitorsDestroyed() OptInt32 {
	return s.InhibitorsDestroyed
}

// GetKills returns the value of Kills.
func (s *TftMatchV1ParticipantMissionsDto) GetKills() OptInt32 {
	return s.Kills
}

// GetLargestKillingSpree returns the value of LargestKillingSpree.
func (s *TftMatchV1ParticipantMissionsDto) GetLargestKillingSpree() OptInt32 {
	return s.LargestKillingSpree
}

// GetLargestMultiKill returns the value of LargestMultiKill.
func (s *TftMatchV1ParticipantMissionsDto) GetLargestMultiKill() OptInt32 {
	return s.LargestMultiKill
}

// GetMagicDamageDealt returns the value of MagicDamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) GetMagicDamageDealt() OptInt32 {
	return s.MagicDamageDealt
}

// GetMagicDamageDealtToChampions returns the value of MagicDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) GetMagicDamageDealtToChampions() OptInt32 {
	return s.MagicDamageDealtToChampions
}

// GetNeutralMinionsKilledTeamJungle returns the value of NeutralMinionsKilledTeamJungle.
func (s *TftMatchV1ParticipantMissionsDto) GetNeutralMinionsKilledTeamJungle() OptInt32 {
	return s.NeutralMinionsKilledTeamJungle
}

// GetPhysicalDamageDealt returns the value of PhysicalDamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) GetPhysicalDamageDealt() OptInt32 {
	return s.PhysicalDamageDealt
}

// GetPhysicalDamageTaken returns the value of PhysicalDamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) GetPhysicalDamageTaken() OptInt32 {
	return s.PhysicalDamageTaken
}

// GetPlayerScore0 returns the value of PlayerScore0.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore0() OptInt32 {
	return s.PlayerScore0
}

// GetPlayerScore1 returns the value of PlayerScore1.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore1() OptInt32 {
	return s.PlayerScore1
}

// GetPlayerScore2 returns the value of PlayerScore2.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore2() OptInt32 {
	return s.PlayerScore2
}

// GetPlayerScore3 returns the value of PlayerScore3.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore3() OptInt32 {
	return s.PlayerScore3
}

// GetPlayerScore4 returns the value of PlayerScore4.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore4() OptInt32 {
	return s.PlayerScore4
}

// GetPlayerScore5 returns the value of PlayerScore5.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore5() OptInt32 {
	return s.PlayerScore5
}

// GetPlayerScore6 returns the value of PlayerScore6.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore6() OptInt32 {
	return s.PlayerScore6
}

// GetPlayerScore9 returns the value of PlayerScore9.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore9() OptInt32 {
	return s.PlayerScore9
}

// GetPlayerScore10 returns the value of PlayerScore10.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore10() OptInt32 {
	return s.PlayerScore10
}

// GetPlayerScore11 returns the value of PlayerScore11.
func (s *TftMatchV1ParticipantMissionsDto) GetPlayerScore11() OptInt32 {
	return s.PlayerScore11
}

// GetQuadraKills returns the value of QuadraKills.
func (s *TftMatchV1ParticipantMissionsDto) GetQuadraKills() OptInt32 {
	return s.QuadraKills
}

// GetSpell1Casts returns the value of Spell1Casts.
func (s *TftMatchV1ParticipantMissionsDto) GetSpell1Casts() OptInt32 {
	return s.Spell1Casts
}

// GetSpell2Casts returns the value of Spell2Casts.
func (s *TftMatchV1ParticipantMissionsDto) GetSpell2Casts() OptInt32 {
	return s.Spell2Casts
}

// GetSpell3Casts returns the value of Spell3Casts.
func (s *TftMatchV1ParticipantMissionsDto) GetSpell3Casts() OptInt32 {
	return s.Spell3Casts
}

// GetSpell4Casts returns the value of Spell4Casts.
func (s *TftMatchV1ParticipantMissionsDto) GetSpell4Casts() OptInt32 {
	return s.Spell4Casts
}

// GetSummonerSpell1Casts returns the value of SummonerSpell1Casts.
func (s *TftMatchV1ParticipantMissionsDto) GetSummonerSpell1Casts() OptInt32 {
	return s.SummonerSpell1Casts
}

// GetTimeCCOthers returns the value of TimeCCOthers.
func (s *TftMatchV1ParticipantMissionsDto) GetTimeCCOthers() OptInt32 {
	return s.TimeCCOthers
}

// GetTotalMinionsKilled returns the value of TotalMinionsKilled.
func (s *TftMatchV1ParticipantMissionsDto) GetTotalMinionsKilled() OptInt32 {
	return s.TotalMinionsKilled
}

// GetTrueDamageDealtToChampions returns the value of TrueDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) GetTrueDamageDealtToChampions() OptInt32 {
	return s.TrueDamageDealtToChampions
}

// GetUnrealKills returns the value of UnrealKills.
func (s *TftMatchV1ParticipantMissionsDto) GetUnrealKills() OptInt32 {
	return s.UnrealKills
}

// GetVisionScore returns the value of VisionScore.
func (s *TftMatchV1ParticipantMissionsDto) GetVisionScore() OptInt32 {
	return s.VisionScore
}

// GetWardsKilled returns the value of WardsKilled.
func (s *TftMatchV1ParticipantMissionsDto) GetWardsKilled() OptInt32 {
	return s.WardsKilled
}

// GetDeaths returns the value of Deaths.
func (s *TftMatchV1ParticipantMissionsDto) GetDeaths() OptInt32 {
	return s.Deaths
}

// GetKillingSprees returns the value of KillingSprees.
func (s *TftMatchV1ParticipantMissionsDto) GetKillingSprees() OptInt32 {
	return s.KillingSprees
}

// GetMagicDamageTaken returns the value of MagicDamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) GetMagicDamageTaken() OptInt32 {
	return s.MagicDamageTaken
}

// GetPentaKills returns the value of PentaKills.
func (s *TftMatchV1ParticipantMissionsDto) GetPentaKills() OptInt32 {
	return s.PentaKills
}

// GetPhysicalDamageDealtToChampions returns the value of PhysicalDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) GetPhysicalDamageDealtToChampions() OptInt32 {
	return s.PhysicalDamageDealtToChampions
}

// GetTotalDamageDealtToChampions returns the value of TotalDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) GetTotalDamageDealtToChampions() OptInt32 {
	return s.TotalDamageDealtToChampions
}

// GetTripleKills returns the value of TripleKills.
func (s *TftMatchV1ParticipantMissionsDto) GetTripleKills() OptInt32 {
	return s.TripleKills
}

// GetTrueDamageDealt returns the value of TrueDamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) GetTrueDamageDealt() OptInt32 {
	return s.TrueDamageDealt
}

// GetTrueDamageTaken returns the value of TrueDamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) GetTrueDamageTaken() OptInt32 {
	return s.TrueDamageTaken
}

// SetAssists sets the value of Assists.
func (s *TftMatchV1ParticipantMissionsDto) SetAssists(val OptInt32) {
	s.Assists = val
}

// SetDamageDealt sets the value of DamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) SetDamageDealt(val OptInt32) {
	s.DamageDealt = val
}

// SetDamageDealtToObjectives sets the value of DamageDealtToObjectives.
func (s *TftMatchV1ParticipantMissionsDto) SetDamageDealtToObjectives(val OptInt32) {
	s.DamageDealtToObjectives = val
}

// SetDamageDealtToTurrets sets the value of DamageDealtToTurrets.
func (s *TftMatchV1ParticipantMissionsDto) SetDamageDealtToTurrets(val OptInt32) {
	s.DamageDealtToTurrets = val
}

// SetDamageTaken sets the value of DamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) SetDamageTaken(val OptInt32) {
	s.DamageTaken = val
}

// SetDoubleKills sets the value of DoubleKills.
func (s *TftMatchV1ParticipantMissionsDto) SetDoubleKills(val OptInt32) {
	s.DoubleKills = val
}

// SetGoldEarned sets the value of GoldEarned.
func (s *TftMatchV1ParticipantMissionsDto) SetGoldEarned(val OptInt32) {
	s.GoldEarned = val
}

// SetGoldSpent sets the value of GoldSpent.
func (s *TftMatchV1ParticipantMissionsDto) SetGoldSpent(val OptInt32) {
	s.GoldSpent = val
}

// SetInhibitorsDestroyed sets the value of InhibitorsDestroyed.
func (s *TftMatchV1ParticipantMissionsDto) SetInhibitorsDestroyed(val OptInt32) {
	s.InhibitorsDestroyed = val
}

// SetKills sets the value of Kills.
func (s *TftMatchV1ParticipantMissionsDto) SetKills(val OptInt32) {
	s.Kills = val
}

// SetLargestKillingSpree sets the value of LargestKillingSpree.
func (s *TftMatchV1ParticipantMissionsDto) SetLargestKillingSpree(val OptInt32) {
	s.LargestKillingSpree = val
}

// SetLargestMultiKill sets the value of LargestMultiKill.
func (s *TftMatchV1ParticipantMissionsDto) SetLargestMultiKill(val OptInt32) {
	s.LargestMultiKill = val
}

// SetMagicDamageDealt sets the value of MagicDamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) SetMagicDamageDealt(val OptInt32) {
	s.MagicDamageDealt = val
}

// SetMagicDamageDealtToChampions sets the value of MagicDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) SetMagicDamageDealtToChampions(val OptInt32) {
	s.MagicDamageDealtToChampions = val
}

// SetNeutralMinionsKilledTeamJungle sets the value of NeutralMinionsKilledTeamJungle.
func (s *TftMatchV1ParticipantMissionsDto) SetNeutralMinionsKilledTeamJungle(val OptInt32) {
	s.NeutralMinionsKilledTeamJungle = val
}

// SetPhysicalDamageDealt sets the value of PhysicalDamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) SetPhysicalDamageDealt(val OptInt32) {
	s.PhysicalDamageDealt = val
}

// SetPhysicalDamageTaken sets the value of PhysicalDamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) SetPhysicalDamageTaken(val OptInt32) {
	s.PhysicalDamageTaken = val
}

// SetPlayerScore0 sets the value of PlayerScore0.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore0(val OptInt32) {
	s.PlayerScore0 = val
}

// SetPlayerScore1 sets the value of PlayerScore1.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore1(val OptInt32) {
	s.PlayerScore1 = val
}

// SetPlayerScore2 sets the value of PlayerScore2.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore2(val OptInt32) {
	s.PlayerScore2 = val
}

// SetPlayerScore3 sets the value of PlayerScore3.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore3(val OptInt32) {
	s.PlayerScore3 = val
}

// SetPlayerScore4 sets the value of PlayerScore4.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore4(val OptInt32) {
	s.PlayerScore4 = val
}

// SetPlayerScore5 sets the value of PlayerScore5.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore5(val OptInt32) {
	s.PlayerScore5 = val
}

// SetPlayerScore6 sets the value of PlayerScore6.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore6(val OptInt32) {
	s.PlayerScore6 = val
}

// SetPlayerScore9 sets the value of PlayerScore9.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore9(val OptInt32) {
	s.PlayerScore9 = val
}

// SetPlayerScore10 sets the value of PlayerScore10.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore10(val OptInt32) {
	s.PlayerScore10 = val
}

// SetPlayerScore11 sets the value of PlayerScore11.
func (s *TftMatchV1ParticipantMissionsDto) SetPlayerScore11(val OptInt32) {
	s.PlayerScore11 = val
}

// SetQuadraKills sets the value of QuadraKills.
func (s *TftMatchV1ParticipantMissionsDto) SetQuadraKills(val OptInt32) {
	s.QuadraKills = val
}

// SetSpell1Casts sets the value of Spell1Casts.
func (s *TftMatchV1ParticipantMissionsDto) SetSpell1Casts(val OptInt32) {
	s.Spell1Casts = val
}

// SetSpell2Casts sets the value of Spell2Casts.
func (s *TftMatchV1ParticipantMissionsDto) SetSpell2Casts(val OptInt32) {
	s.Spell2Casts = val
}

// SetSpell3Casts sets the value of Spell3Casts.
func (s *TftMatchV1ParticipantMissionsDto) SetSpell3Casts(val OptInt32) {
	s.Spell3Casts = val
}

// SetSpell4Casts sets the value of Spell4Casts.
func (s *TftMatchV1ParticipantMissionsDto) SetSpell4Casts(val OptInt32) {
	s.Spell4Casts = val
}

// SetSummonerSpell1Casts sets the value of SummonerSpell1Casts.
func (s *TftMatchV1ParticipantMissionsDto) SetSummonerSpell1Casts(val OptInt32) {
	s.SummonerSpell1Casts = val
}

// SetTimeCCOthers sets the value of TimeCCOthers.
func (s *TftMatchV1ParticipantMissionsDto) SetTimeCCOthers(val OptInt32) {
	s.TimeCCOthers = val
}

// SetTotalMinionsKilled sets the value of TotalMinionsKilled.
func (s *TftMatchV1ParticipantMissionsDto) SetTotalMinionsKilled(val OptInt32) {
	s.TotalMinionsKilled = val
}

// SetTrueDamageDealtToChampions sets the value of TrueDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) SetTrueDamageDealtToChampions(val OptInt32) {
	s.TrueDamageDealtToChampions = val
}

// SetUnrealKills sets the value of UnrealKills.
func (s *TftMatchV1ParticipantMissionsDto) SetUnrealKills(val OptInt32) {
	s.UnrealKills = val
}

// SetVisionScore sets the value of VisionScore.
func (s *TftMatchV1ParticipantMissionsDto) SetVisionScore(val OptInt32) {
	s.VisionScore = val
}

// SetWardsKilled sets the value of WardsKilled.
func (s *TftMatchV1ParticipantMissionsDto) SetWardsKilled(val OptInt32) {
	s.WardsKilled = val
}

// SetDeaths sets the value of Deaths.
func (s *TftMatchV1ParticipantMissionsDto) SetDeaths(val OptInt32) {
	s.Deaths = val
}

// SetKillingSprees sets the value of KillingSprees.
func (s *TftMatchV1ParticipantMissionsDto) SetKillingSprees(val OptInt32) {
	s.KillingSprees = val
}

// SetMagicDamageTaken sets the value of MagicDamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) SetMagicDamageTaken(val OptInt32) {
	s.MagicDamageTaken = val
}

// SetPentaKills sets the value of PentaKills.
func (s *TftMatchV1ParticipantMissionsDto) SetPentaKills(val OptInt32) {
	s.PentaKills = val
}

// SetPhysicalDamageDealtToChampions sets the value of PhysicalDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) SetPhysicalDamageDealtToChampions(val OptInt32) {
	s.PhysicalDamageDealtToChampions = val
}

// SetTotalDamageDealtToChampions sets the value of TotalDamageDealtToChampions.
func (s *TftMatchV1ParticipantMissionsDto) SetTotalDamageDealtToChampions(val OptInt32) {
	s.TotalDamageDealtToChampions = val
}

// SetTripleKills sets the value of TripleKills.
func (s *TftMatchV1ParticipantMissionsDto) SetTripleKills(val OptInt32) {
	s.TripleKills = val
}

// SetTrueDamageDealt sets the value of TrueDamageDealt.
func (s *TftMatchV1ParticipantMissionsDto) SetTrueDamageDealt(val OptInt32) {
	s.TrueDamageDealt = val
}

// SetTrueDamageTaken sets the value of TrueDamageTaken.
func (s *TftMatchV1ParticipantMissionsDto) SetTrueDamageTaken(val OptInt32) {
	s.TrueDamageTaken = val
}

// Ref: #/components/schemas/tft-match-v1.TraitDto
type TftMatchV1TraitDto struct {
	// Trait name.
	Name string `json:"name"`
	// Number of units with this trait.
	NumUnits int32 `json:"num_units"`
	// Current style for this trait. (0 = No style, 1 = Bronze, 2 = Silver, 3 = Gold, 4 = Chromatic).
	Style OptInt32 `json:"style"`
	// Current active tier for the trait.
	TierCurrent int32 `json:"tier_current"`
	// Total tiers for the trait.
	TierTotal OptInt32 `json:"tier_total"`
}

// GetName returns the value of Name.
func (s *TftMatchV1TraitDto) GetName() string {
	return s.Name
}

// GetNumUnits returns the value of NumUnits.
func (s *TftMatchV1TraitDto) GetNumUnits() int32 {
	return s.NumUnits
}

// GetStyle returns the value of Style.
func (s *TftMatchV1TraitDto) GetStyle() OptInt32 {
	return s.Style
}

// GetTierCurrent returns the value of TierCurrent.
func (s *TftMatchV1TraitDto) GetTierCurrent() int32 {
	return s.TierCurrent
}

// GetTierTotal returns the value of TierTotal.
func (s *TftMatchV1TraitDto) GetTierTotal() OptInt32 {
	return s.TierTotal
}

// SetName sets the value of Name.
func (s *TftMatchV1TraitDto) SetName(val string) {
	s.Name = val
}

// SetNumUnits sets the value of NumUnits.
func (s *TftMatchV1TraitDto) SetNumUnits(val int32) {
	s.NumUnits = val
}

// SetStyle sets the value of Style.
func (s *TftMatchV1TraitDto) SetStyle(val OptInt32) {
	s.Style = val
}

// SetTierCurrent sets the value of TierCurrent.
func (s *TftMatchV1TraitDto) SetTierCurrent(val int32) {
	s.TierCurrent = val
}

// SetTierTotal sets the value of TierTotal.
func (s *TftMatchV1TraitDto) SetTierTotal(val OptInt32) {
	s.TierTotal = val
}

// Ref: #/components/schemas/tft-match-v1.UnitDto
type TftMatchV1UnitDto struct {
	// A list of the unit's items. Please refer to the Teamfight Tactics documentation for item ids.
	Items []int32 `json:"items"`
	// This field was introduced in patch 9.22 with data_version 2.
	CharacterID string   `json:"character_id"`
	ItemNames   []string `json:"itemNames"`
	// If a unit is chosen as part of the Fates set mechanic, the chosen trait will be indicated by this
	// field. Otherwise this field is excluded from the response.
	Chosen OptString `json:"chosen"`
	// Unit name. This field is often left blank.
	Name string `json:"name"`
	// Unit rarity. This doesn't equate to the unit cost.
	Rarity int32 `json:"rarity"`
	// Unit tier.
	Tier int32 `json:"tier"`
}

// GetItems returns the value of Items.
func (s *TftMatchV1UnitDto) GetItems() []int32 {
	return s.Items
}

// GetCharacterID returns the value of CharacterID.
func (s *TftMatchV1UnitDto) GetCharacterID() string {
	return s.CharacterID
}

// GetItemNames returns the value of ItemNames.
func (s *TftMatchV1UnitDto) GetItemNames() []string {
	return s.ItemNames
}

// GetChosen returns the value of Chosen.
func (s *TftMatchV1UnitDto) GetChosen() OptString {
	return s.Chosen
}

// GetName returns the value of Name.
func (s *TftMatchV1UnitDto) GetName() string {
	return s.Name
}

// GetRarity returns the value of Rarity.
func (s *TftMatchV1UnitDto) GetRarity() int32 {
	return s.Rarity
}

// GetTier returns the value of Tier.
func (s *TftMatchV1UnitDto) GetTier() int32 {
	return s.Tier
}

// SetItems sets the value of Items.
func (s *TftMatchV1UnitDto) SetItems(val []int32) {
	s.Items = val
}

// SetCharacterID sets the value of CharacterID.
func (s *TftMatchV1UnitDto) SetCharacterID(val string) {
	s.CharacterID = val
}

// SetItemNames sets the value of ItemNames.
func (s *TftMatchV1UnitDto) SetItemNames(val []string) {
	s.ItemNames = val
}

// SetChosen sets the value of Chosen.
func (s *TftMatchV1UnitDto) SetChosen(val OptString) {
	s.Chosen = val
}

// SetName sets the value of Name.
func (s *TftMatchV1UnitDto) SetName(val string) {
	s.Name = val
}

// SetRarity sets the value of Rarity.
func (s *TftMatchV1UnitDto) SetRarity(val int32) {
	s.Rarity = val
}

// SetTier sets the value of Tier.
func (s *TftMatchV1UnitDto) SetTier(val int32) {
	s.Tier = val
}

// Ref: #/components/schemas/tft-status-v1.ContentDto
type TftStatusV1ContentDto struct {
	Locale  string `json:"locale"`
	Content string `json:"content"`
}

// GetLocale returns the value of Locale.
func (s *TftStatusV1ContentDto) GetLocale() string {
	return s.Locale
}

// GetContent returns the value of Content.
func (s *TftStatusV1ContentDto) GetContent() string {
	return s.Content
}

// SetLocale sets the value of Locale.
func (s *TftStatusV1ContentDto) SetLocale(val string) {
	s.Locale = val
}

// SetContent sets the value of Content.
func (s *TftStatusV1ContentDto) SetContent(val string) {
	s.Content = val
}

// TftStatusV1GetPlatformDataBadGateway is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataBadGateway struct{}

func (*TftStatusV1GetPlatformDataBadGateway) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataBadRequest is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataBadRequest struct{}

func (*TftStatusV1GetPlatformDataBadRequest) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataForbidden is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataForbidden struct{}

func (*TftStatusV1GetPlatformDataForbidden) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataGatewayTimeout is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataGatewayTimeout struct{}

func (*TftStatusV1GetPlatformDataGatewayTimeout) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataInternalServerError is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataInternalServerError struct{}

func (*TftStatusV1GetPlatformDataInternalServerError) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataMethodNotAllowed is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataMethodNotAllowed struct{}

func (*TftStatusV1GetPlatformDataMethodNotAllowed) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataNotFound is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataNotFound struct{}

func (*TftStatusV1GetPlatformDataNotFound) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataServiceUnavailable is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataServiceUnavailable struct{}

func (*TftStatusV1GetPlatformDataServiceUnavailable) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataTooManyRequests is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataTooManyRequests struct{}

func (*TftStatusV1GetPlatformDataTooManyRequests) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataUnauthorized is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataUnauthorized struct{}

func (*TftStatusV1GetPlatformDataUnauthorized) tftStatusV1GetPlatformDataRes() {}

// TftStatusV1GetPlatformDataUnsupportedMediaType is response for TftStatusV1GetPlatformData operation.
type TftStatusV1GetPlatformDataUnsupportedMediaType struct{}

func (*TftStatusV1GetPlatformDataUnsupportedMediaType) tftStatusV1GetPlatformDataRes() {}

// Ref: #/components/schemas/tft-status-v1.PlatformDataDto
type TftStatusV1PlatformDataDto struct {
	ID           string                 `json:"id"`
	Name         string                 `json:"name"`
	Locales      []string               `json:"locales"`
	Maintenances []TftStatusV1StatusDto `json:"maintenances"`
	Incidents    []TftStatusV1StatusDto `json:"incidents"`
}

// GetID returns the value of ID.
func (s *TftStatusV1PlatformDataDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *TftStatusV1PlatformDataDto) GetName() string {
	return s.Name
}

// GetLocales returns the value of Locales.
func (s *TftStatusV1PlatformDataDto) GetLocales() []string {
	return s.Locales
}

// GetMaintenances returns the value of Maintenances.
func (s *TftStatusV1PlatformDataDto) GetMaintenances() []TftStatusV1StatusDto {
	return s.Maintenances
}

// GetIncidents returns the value of Incidents.
func (s *TftStatusV1PlatformDataDto) GetIncidents() []TftStatusV1StatusDto {
	return s.Incidents
}

// SetID sets the value of ID.
func (s *TftStatusV1PlatformDataDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *TftStatusV1PlatformDataDto) SetName(val string) {
	s.Name = val
}

// SetLocales sets the value of Locales.
func (s *TftStatusV1PlatformDataDto) SetLocales(val []string) {
	s.Locales = val
}

// SetMaintenances sets the value of Maintenances.
func (s *TftStatusV1PlatformDataDto) SetMaintenances(val []TftStatusV1StatusDto) {
	s.Maintenances = val
}

// SetIncidents sets the value of Incidents.
func (s *TftStatusV1PlatformDataDto) SetIncidents(val []TftStatusV1StatusDto) {
	s.Incidents = val
}

func (*TftStatusV1PlatformDataDto) tftStatusV1GetPlatformDataRes() {}

// Ref: #/components/schemas/tft-status-v1.StatusDto
type TftStatusV1StatusDto struct {
	ID int32 `json:"id"`
	// (Legal values:  scheduled,  in_progress,  complete).
	MaintenanceStatus TftStatusV1StatusDtoMaintenanceStatus `json:"maintenance_status"`
	// (Legal values:  info,  warning,  critical).
	IncidentSeverity TftStatusV1StatusDtoIncidentSeverity `json:"incident_severity"`
	Titles           []TftStatusV1ContentDto              `json:"titles"`
	Updates          []TftStatusV1UpdateDto               `json:"updates"`
	CreatedAt        string                               `json:"created_at"`
	ArchiveAt        string                               `json:"archive_at"`
	UpdatedAt        string                               `json:"updated_at"`
	// (Legal values: windows, macos, android, ios, ps4, xbone, switch).
	Platforms []TftStatusV1StatusDtoPlatformsItem `json:"platforms"`
}

// GetID returns the value of ID.
func (s *TftStatusV1StatusDto) GetID() int32 {
	return s.ID
}

// GetMaintenanceStatus returns the value of MaintenanceStatus.
func (s *TftStatusV1StatusDto) GetMaintenanceStatus() TftStatusV1StatusDtoMaintenanceStatus {
	return s.MaintenanceStatus
}

// GetIncidentSeverity returns the value of IncidentSeverity.
func (s *TftStatusV1StatusDto) GetIncidentSeverity() TftStatusV1StatusDtoIncidentSeverity {
	return s.IncidentSeverity
}

// GetTitles returns the value of Titles.
func (s *TftStatusV1StatusDto) GetTitles() []TftStatusV1ContentDto {
	return s.Titles
}

// GetUpdates returns the value of Updates.
func (s *TftStatusV1StatusDto) GetUpdates() []TftStatusV1UpdateDto {
	return s.Updates
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TftStatusV1StatusDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetArchiveAt returns the value of ArchiveAt.
func (s *TftStatusV1StatusDto) GetArchiveAt() string {
	return s.ArchiveAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TftStatusV1StatusDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetPlatforms returns the value of Platforms.
func (s *TftStatusV1StatusDto) GetPlatforms() []TftStatusV1StatusDtoPlatformsItem {
	return s.Platforms
}

// SetID sets the value of ID.
func (s *TftStatusV1StatusDto) SetID(val int32) {
	s.ID = val
}

// SetMaintenanceStatus sets the value of MaintenanceStatus.
func (s *TftStatusV1StatusDto) SetMaintenanceStatus(val TftStatusV1StatusDtoMaintenanceStatus) {
	s.MaintenanceStatus = val
}

// SetIncidentSeverity sets the value of IncidentSeverity.
func (s *TftStatusV1StatusDto) SetIncidentSeverity(val TftStatusV1StatusDtoIncidentSeverity) {
	s.IncidentSeverity = val
}

// SetTitles sets the value of Titles.
func (s *TftStatusV1StatusDto) SetTitles(val []TftStatusV1ContentDto) {
	s.Titles = val
}

// SetUpdates sets the value of Updates.
func (s *TftStatusV1StatusDto) SetUpdates(val []TftStatusV1UpdateDto) {
	s.Updates = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TftStatusV1StatusDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetArchiveAt sets the value of ArchiveAt.
func (s *TftStatusV1StatusDto) SetArchiveAt(val string) {
	s.ArchiveAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TftStatusV1StatusDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetPlatforms sets the value of Platforms.
func (s *TftStatusV1StatusDto) SetPlatforms(val []TftStatusV1StatusDtoPlatformsItem) {
	s.Platforms = val
}

// (Legal values:  info,  warning,  critical).
type TftStatusV1StatusDtoIncidentSeverity string

const (
	TftStatusV1StatusDtoIncidentSeverityInfo     TftStatusV1StatusDtoIncidentSeverity = "info"
	TftStatusV1StatusDtoIncidentSeverityWarning  TftStatusV1StatusDtoIncidentSeverity = "warning"
	TftStatusV1StatusDtoIncidentSeverityCritical TftStatusV1StatusDtoIncidentSeverity = "critical"
)

// AllValues returns all TftStatusV1StatusDtoIncidentSeverity values.
func (TftStatusV1StatusDtoIncidentSeverity) AllValues() []TftStatusV1StatusDtoIncidentSeverity {
	return []TftStatusV1StatusDtoIncidentSeverity{
		TftStatusV1StatusDtoIncidentSeverityInfo,
		TftStatusV1StatusDtoIncidentSeverityWarning,
		TftStatusV1StatusDtoIncidentSeverityCritical,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftStatusV1StatusDtoIncidentSeverity) MarshalText() ([]byte, error) {
	switch s {
	case TftStatusV1StatusDtoIncidentSeverityInfo:
		return []byte(s), nil
	case TftStatusV1StatusDtoIncidentSeverityWarning:
		return []byte(s), nil
	case TftStatusV1StatusDtoIncidentSeverityCritical:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftStatusV1StatusDtoIncidentSeverity) UnmarshalText(data []byte) error {
	switch TftStatusV1StatusDtoIncidentSeverity(data) {
	case TftStatusV1StatusDtoIncidentSeverityInfo:
		*s = TftStatusV1StatusDtoIncidentSeverityInfo
		return nil
	case TftStatusV1StatusDtoIncidentSeverityWarning:
		*s = TftStatusV1StatusDtoIncidentSeverityWarning
		return nil
	case TftStatusV1StatusDtoIncidentSeverityCritical:
		*s = TftStatusV1StatusDtoIncidentSeverityCritical
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// (Legal values:  scheduled,  in_progress,  complete).
type TftStatusV1StatusDtoMaintenanceStatus string

const (
	TftStatusV1StatusDtoMaintenanceStatusScheduled  TftStatusV1StatusDtoMaintenanceStatus = "scheduled"
	TftStatusV1StatusDtoMaintenanceStatusInProgress TftStatusV1StatusDtoMaintenanceStatus = "in_progress"
	TftStatusV1StatusDtoMaintenanceStatusComplete   TftStatusV1StatusDtoMaintenanceStatus = "complete"
)

// AllValues returns all TftStatusV1StatusDtoMaintenanceStatus values.
func (TftStatusV1StatusDtoMaintenanceStatus) AllValues() []TftStatusV1StatusDtoMaintenanceStatus {
	return []TftStatusV1StatusDtoMaintenanceStatus{
		TftStatusV1StatusDtoMaintenanceStatusScheduled,
		TftStatusV1StatusDtoMaintenanceStatusInProgress,
		TftStatusV1StatusDtoMaintenanceStatusComplete,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftStatusV1StatusDtoMaintenanceStatus) MarshalText() ([]byte, error) {
	switch s {
	case TftStatusV1StatusDtoMaintenanceStatusScheduled:
		return []byte(s), nil
	case TftStatusV1StatusDtoMaintenanceStatusInProgress:
		return []byte(s), nil
	case TftStatusV1StatusDtoMaintenanceStatusComplete:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftStatusV1StatusDtoMaintenanceStatus) UnmarshalText(data []byte) error {
	switch TftStatusV1StatusDtoMaintenanceStatus(data) {
	case TftStatusV1StatusDtoMaintenanceStatusScheduled:
		*s = TftStatusV1StatusDtoMaintenanceStatusScheduled
		return nil
	case TftStatusV1StatusDtoMaintenanceStatusInProgress:
		*s = TftStatusV1StatusDtoMaintenanceStatusInProgress
		return nil
	case TftStatusV1StatusDtoMaintenanceStatusComplete:
		*s = TftStatusV1StatusDtoMaintenanceStatusComplete
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type TftStatusV1StatusDtoPlatformsItem string

const (
	TftStatusV1StatusDtoPlatformsItemWindows TftStatusV1StatusDtoPlatformsItem = "windows"
	TftStatusV1StatusDtoPlatformsItemMacos   TftStatusV1StatusDtoPlatformsItem = "macos"
	TftStatusV1StatusDtoPlatformsItemAndroid TftStatusV1StatusDtoPlatformsItem = "android"
	TftStatusV1StatusDtoPlatformsItemIos     TftStatusV1StatusDtoPlatformsItem = "ios"
	TftStatusV1StatusDtoPlatformsItemPs4     TftStatusV1StatusDtoPlatformsItem = "ps4"
	TftStatusV1StatusDtoPlatformsItemXbone   TftStatusV1StatusDtoPlatformsItem = "xbone"
	TftStatusV1StatusDtoPlatformsItemSwitch  TftStatusV1StatusDtoPlatformsItem = "switch"
)

// AllValues returns all TftStatusV1StatusDtoPlatformsItem values.
func (TftStatusV1StatusDtoPlatformsItem) AllValues() []TftStatusV1StatusDtoPlatformsItem {
	return []TftStatusV1StatusDtoPlatformsItem{
		TftStatusV1StatusDtoPlatformsItemWindows,
		TftStatusV1StatusDtoPlatformsItemMacos,
		TftStatusV1StatusDtoPlatformsItemAndroid,
		TftStatusV1StatusDtoPlatformsItemIos,
		TftStatusV1StatusDtoPlatformsItemPs4,
		TftStatusV1StatusDtoPlatformsItemXbone,
		TftStatusV1StatusDtoPlatformsItemSwitch,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftStatusV1StatusDtoPlatformsItem) MarshalText() ([]byte, error) {
	switch s {
	case TftStatusV1StatusDtoPlatformsItemWindows:
		return []byte(s), nil
	case TftStatusV1StatusDtoPlatformsItemMacos:
		return []byte(s), nil
	case TftStatusV1StatusDtoPlatformsItemAndroid:
		return []byte(s), nil
	case TftStatusV1StatusDtoPlatformsItemIos:
		return []byte(s), nil
	case TftStatusV1StatusDtoPlatformsItemPs4:
		return []byte(s), nil
	case TftStatusV1StatusDtoPlatformsItemXbone:
		return []byte(s), nil
	case TftStatusV1StatusDtoPlatformsItemSwitch:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftStatusV1StatusDtoPlatformsItem) UnmarshalText(data []byte) error {
	switch TftStatusV1StatusDtoPlatformsItem(data) {
	case TftStatusV1StatusDtoPlatformsItemWindows:
		*s = TftStatusV1StatusDtoPlatformsItemWindows
		return nil
	case TftStatusV1StatusDtoPlatformsItemMacos:
		*s = TftStatusV1StatusDtoPlatformsItemMacos
		return nil
	case TftStatusV1StatusDtoPlatformsItemAndroid:
		*s = TftStatusV1StatusDtoPlatformsItemAndroid
		return nil
	case TftStatusV1StatusDtoPlatformsItemIos:
		*s = TftStatusV1StatusDtoPlatformsItemIos
		return nil
	case TftStatusV1StatusDtoPlatformsItemPs4:
		*s = TftStatusV1StatusDtoPlatformsItemPs4
		return nil
	case TftStatusV1StatusDtoPlatformsItemXbone:
		*s = TftStatusV1StatusDtoPlatformsItemXbone
		return nil
	case TftStatusV1StatusDtoPlatformsItemSwitch:
		*s = TftStatusV1StatusDtoPlatformsItemSwitch
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tft-status-v1.UpdateDto
type TftStatusV1UpdateDto struct {
	ID      int32  `json:"id"`
	Author  string `json:"author"`
	Publish bool   `json:"publish"`
	// (Legal values: riotclient, riotstatus, game).
	PublishLocations []TftStatusV1UpdateDtoPublishLocationsItem `json:"publish_locations"`
	Translations     []TftStatusV1ContentDto                    `json:"translations"`
	CreatedAt        string                                     `json:"created_at"`
	UpdatedAt        string                                     `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *TftStatusV1UpdateDto) GetID() int32 {
	return s.ID
}

// GetAuthor returns the value of Author.
func (s *TftStatusV1UpdateDto) GetAuthor() string {
	return s.Author
}

// GetPublish returns the value of Publish.
func (s *TftStatusV1UpdateDto) GetPublish() bool {
	return s.Publish
}

// GetPublishLocations returns the value of PublishLocations.
func (s *TftStatusV1UpdateDto) GetPublishLocations() []TftStatusV1UpdateDtoPublishLocationsItem {
	return s.PublishLocations
}

// GetTranslations returns the value of Translations.
func (s *TftStatusV1UpdateDto) GetTranslations() []TftStatusV1ContentDto {
	return s.Translations
}

// GetCreatedAt returns the value of CreatedAt.
func (s *TftStatusV1UpdateDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *TftStatusV1UpdateDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *TftStatusV1UpdateDto) SetID(val int32) {
	s.ID = val
}

// SetAuthor sets the value of Author.
func (s *TftStatusV1UpdateDto) SetAuthor(val string) {
	s.Author = val
}

// SetPublish sets the value of Publish.
func (s *TftStatusV1UpdateDto) SetPublish(val bool) {
	s.Publish = val
}

// SetPublishLocations sets the value of PublishLocations.
func (s *TftStatusV1UpdateDto) SetPublishLocations(val []TftStatusV1UpdateDtoPublishLocationsItem) {
	s.PublishLocations = val
}

// SetTranslations sets the value of Translations.
func (s *TftStatusV1UpdateDto) SetTranslations(val []TftStatusV1ContentDto) {
	s.Translations = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *TftStatusV1UpdateDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *TftStatusV1UpdateDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

type TftStatusV1UpdateDtoPublishLocationsItem string

const (
	TftStatusV1UpdateDtoPublishLocationsItemRiotclient TftStatusV1UpdateDtoPublishLocationsItem = "riotclient"
	TftStatusV1UpdateDtoPublishLocationsItemRiotstatus TftStatusV1UpdateDtoPublishLocationsItem = "riotstatus"
	TftStatusV1UpdateDtoPublishLocationsItemGame       TftStatusV1UpdateDtoPublishLocationsItem = "game"
)

// AllValues returns all TftStatusV1UpdateDtoPublishLocationsItem values.
func (TftStatusV1UpdateDtoPublishLocationsItem) AllValues() []TftStatusV1UpdateDtoPublishLocationsItem {
	return []TftStatusV1UpdateDtoPublishLocationsItem{
		TftStatusV1UpdateDtoPublishLocationsItemRiotclient,
		TftStatusV1UpdateDtoPublishLocationsItemRiotstatus,
		TftStatusV1UpdateDtoPublishLocationsItemGame,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TftStatusV1UpdateDtoPublishLocationsItem) MarshalText() ([]byte, error) {
	switch s {
	case TftStatusV1UpdateDtoPublishLocationsItemRiotclient:
		return []byte(s), nil
	case TftStatusV1UpdateDtoPublishLocationsItemRiotstatus:
		return []byte(s), nil
	case TftStatusV1UpdateDtoPublishLocationsItemGame:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TftStatusV1UpdateDtoPublishLocationsItem) UnmarshalText(data []byte) error {
	switch TftStatusV1UpdateDtoPublishLocationsItem(data) {
	case TftStatusV1UpdateDtoPublishLocationsItemRiotclient:
		*s = TftStatusV1UpdateDtoPublishLocationsItemRiotclient
		return nil
	case TftStatusV1UpdateDtoPublishLocationsItemRiotstatus:
		*s = TftStatusV1UpdateDtoPublishLocationsItemRiotstatus
		return nil
	case TftStatusV1UpdateDtoPublishLocationsItemGame:
		*s = TftStatusV1UpdateDtoPublishLocationsItemGame
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TftSummonerV1GetByAccessTokenBadGateway is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenBadGateway struct{}

func (*TftSummonerV1GetByAccessTokenBadGateway) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenBadRequest is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenBadRequest struct{}

func (*TftSummonerV1GetByAccessTokenBadRequest) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenForbidden is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenForbidden struct{}

func (*TftSummonerV1GetByAccessTokenForbidden) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenGatewayTimeout is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenGatewayTimeout struct{}

func (*TftSummonerV1GetByAccessTokenGatewayTimeout) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenInternalServerError is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenInternalServerError struct{}

func (*TftSummonerV1GetByAccessTokenInternalServerError) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenMethodNotAllowed is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenMethodNotAllowed struct{}

func (*TftSummonerV1GetByAccessTokenMethodNotAllowed) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenNotFound is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenNotFound struct{}

func (*TftSummonerV1GetByAccessTokenNotFound) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenServiceUnavailable is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenServiceUnavailable struct{}

func (*TftSummonerV1GetByAccessTokenServiceUnavailable) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenTooManyRequests is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenTooManyRequests struct{}

func (*TftSummonerV1GetByAccessTokenTooManyRequests) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenUnauthorized is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenUnauthorized struct{}

func (*TftSummonerV1GetByAccessTokenUnauthorized) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByAccessTokenUnsupportedMediaType is response for TftSummonerV1GetByAccessToken operation.
type TftSummonerV1GetByAccessTokenUnsupportedMediaType struct{}

func (*TftSummonerV1GetByAccessTokenUnsupportedMediaType) tftSummonerV1GetByAccessTokenRes() {}

// TftSummonerV1GetByPUUIDBadGateway is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDBadGateway struct{}

func (*TftSummonerV1GetByPUUIDBadGateway) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDBadRequest is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDBadRequest struct{}

func (*TftSummonerV1GetByPUUIDBadRequest) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDForbidden is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDForbidden struct{}

func (*TftSummonerV1GetByPUUIDForbidden) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDGatewayTimeout is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDGatewayTimeout struct{}

func (*TftSummonerV1GetByPUUIDGatewayTimeout) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDInternalServerError is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDInternalServerError struct{}

func (*TftSummonerV1GetByPUUIDInternalServerError) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDMethodNotAllowed is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDMethodNotAllowed struct{}

func (*TftSummonerV1GetByPUUIDMethodNotAllowed) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDNotFound is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDNotFound struct{}

func (*TftSummonerV1GetByPUUIDNotFound) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDServiceUnavailable is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDServiceUnavailable struct{}

func (*TftSummonerV1GetByPUUIDServiceUnavailable) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDTooManyRequests is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDTooManyRequests struct{}

func (*TftSummonerV1GetByPUUIDTooManyRequests) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDUnauthorized is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDUnauthorized struct{}

func (*TftSummonerV1GetByPUUIDUnauthorized) tftSummonerV1GetByPUUIDRes() {}

// TftSummonerV1GetByPUUIDUnsupportedMediaType is response for TftSummonerV1GetByPUUID operation.
type TftSummonerV1GetByPUUIDUnsupportedMediaType struct{}

func (*TftSummonerV1GetByPUUIDUnsupportedMediaType) tftSummonerV1GetByPUUIDRes() {}

// Represents a summoner.
// Ref: #/components/schemas/tft-summoner-v1.SummonerDTO
type TftSummonerV1SummonerDTO struct {
	// Encrypted PUUID. Exact length of 78 characters.
	Puuid string `json:"puuid"`
	// ID of the summoner icon associated with the summoner.
	ProfileIconId int32 `json:"profileIconId"`
	// Date summoner was last modified specified as epoch milliseconds. The following events will update
	// this timestamp: profile icon change, playing the tutorial or advanced tutorial, finishing a game,
	// summoner name change.
	RevisionDate int64 `json:"revisionDate"`
	// Summoner level associated with the summoner.
	SummonerLevel int64 `json:"summonerLevel"`
	// Encrypted summoner ID. This field is deprecated and will be removed. Use `puuid` instead.
	ID OptString `json:"id"`
}

// GetPuuid returns the value of Puuid.
func (s *TftSummonerV1SummonerDTO) GetPuuid() string {
	return s.Puuid
}

// GetProfileIconId returns the value of ProfileIconId.
func (s *TftSummonerV1SummonerDTO) GetProfileIconId() int32 {
	return s.ProfileIconId
}

// GetRevisionDate returns the value of RevisionDate.
func (s *TftSummonerV1SummonerDTO) GetRevisionDate() int64 {
	return s.RevisionDate
}

// GetSummonerLevel returns the value of SummonerLevel.
func (s *TftSummonerV1SummonerDTO) GetSummonerLevel() int64 {
	return s.SummonerLevel
}

// GetID returns the value of ID.
func (s *TftSummonerV1SummonerDTO) GetID() OptString {
	return s.ID
}

// SetPuuid sets the value of Puuid.
func (s *TftSummonerV1SummonerDTO) SetPuuid(val string) {
	s.Puuid = val
}

// SetProfileIconId sets the value of ProfileIconId.
func (s *TftSummonerV1SummonerDTO) SetProfileIconId(val int32) {
	s.ProfileIconId = val
}

// SetRevisionDate sets the value of RevisionDate.
func (s *TftSummonerV1SummonerDTO) SetRevisionDate(val int64) {
	s.RevisionDate = val
}

// SetSummonerLevel sets the value of SummonerLevel.
func (s *TftSummonerV1SummonerDTO) SetSummonerLevel(val int64) {
	s.SummonerLevel = val
}

// SetID sets the value of ID.
func (s *TftSummonerV1SummonerDTO) SetID(val OptString) {
	s.ID = val
}

func (*TftSummonerV1SummonerDTO) tftSummonerV1GetByAccessTokenRes() {}
func (*TftSummonerV1SummonerDTO) tftSummonerV1GetByPUUIDRes()       {}

// TournamentStubV5CreateTournamentCodeBadGateway is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeBadGateway struct{}

func (*TournamentStubV5CreateTournamentCodeBadGateway) tournamentStubV5CreateTournamentCodeRes() {}

// TournamentStubV5CreateTournamentCodeBadRequest is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeBadRequest struct{}

func (*TournamentStubV5CreateTournamentCodeBadRequest) tournamentStubV5CreateTournamentCodeRes() {}

// TournamentStubV5CreateTournamentCodeForbidden is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeForbidden struct{}

func (*TournamentStubV5CreateTournamentCodeForbidden) tournamentStubV5CreateTournamentCodeRes() {}

// TournamentStubV5CreateTournamentCodeGatewayTimeout is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeGatewayTimeout struct{}

func (*TournamentStubV5CreateTournamentCodeGatewayTimeout) tournamentStubV5CreateTournamentCodeRes() {
}

// TournamentStubV5CreateTournamentCodeInternalServerError is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeInternalServerError struct{}

func (*TournamentStubV5CreateTournamentCodeInternalServerError) tournamentStubV5CreateTournamentCodeRes() {
}

// TournamentStubV5CreateTournamentCodeMethodNotAllowed is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeMethodNotAllowed struct{}

func (*TournamentStubV5CreateTournamentCodeMethodNotAllowed) tournamentStubV5CreateTournamentCodeRes() {
}

// TournamentStubV5CreateTournamentCodeNotFound is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeNotFound struct{}

func (*TournamentStubV5CreateTournamentCodeNotFound) tournamentStubV5CreateTournamentCodeRes() {}

type TournamentStubV5CreateTournamentCodeOKApplicationJSON []string

func (*TournamentStubV5CreateTournamentCodeOKApplicationJSON) tournamentStubV5CreateTournamentCodeRes() {
}

// TournamentStubV5CreateTournamentCodeServiceUnavailable is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeServiceUnavailable struct{}

func (*TournamentStubV5CreateTournamentCodeServiceUnavailable) tournamentStubV5CreateTournamentCodeRes() {
}

// TournamentStubV5CreateTournamentCodeTooManyRequests is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeTooManyRequests struct{}

func (*TournamentStubV5CreateTournamentCodeTooManyRequests) tournamentStubV5CreateTournamentCodeRes() {
}

// TournamentStubV5CreateTournamentCodeUnauthorized is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeUnauthorized struct{}

func (*TournamentStubV5CreateTournamentCodeUnauthorized) tournamentStubV5CreateTournamentCodeRes() {}

// TournamentStubV5CreateTournamentCodeUnsupportedMediaType is response for TournamentStubV5CreateTournamentCode operation.
type TournamentStubV5CreateTournamentCodeUnsupportedMediaType struct{}

func (*TournamentStubV5CreateTournamentCodeUnsupportedMediaType) tournamentStubV5CreateTournamentCodeRes() {
}

// TournamentStubV5GetLobbyEventsByCodeBadGateway is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeBadGateway struct{}

func (*TournamentStubV5GetLobbyEventsByCodeBadGateway) tournamentStubV5GetLobbyEventsByCodeRes() {}

// TournamentStubV5GetLobbyEventsByCodeBadRequest is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeBadRequest struct{}

func (*TournamentStubV5GetLobbyEventsByCodeBadRequest) tournamentStubV5GetLobbyEventsByCodeRes() {}

// TournamentStubV5GetLobbyEventsByCodeForbidden is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeForbidden struct{}

func (*TournamentStubV5GetLobbyEventsByCodeForbidden) tournamentStubV5GetLobbyEventsByCodeRes() {}

// TournamentStubV5GetLobbyEventsByCodeGatewayTimeout is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeGatewayTimeout struct{}

func (*TournamentStubV5GetLobbyEventsByCodeGatewayTimeout) tournamentStubV5GetLobbyEventsByCodeRes() {
}

// TournamentStubV5GetLobbyEventsByCodeInternalServerError is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeInternalServerError struct{}

func (*TournamentStubV5GetLobbyEventsByCodeInternalServerError) tournamentStubV5GetLobbyEventsByCodeRes() {
}

// TournamentStubV5GetLobbyEventsByCodeMethodNotAllowed is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeMethodNotAllowed struct{}

func (*TournamentStubV5GetLobbyEventsByCodeMethodNotAllowed) tournamentStubV5GetLobbyEventsByCodeRes() {
}

// TournamentStubV5GetLobbyEventsByCodeNotFound is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeNotFound struct{}

func (*TournamentStubV5GetLobbyEventsByCodeNotFound) tournamentStubV5GetLobbyEventsByCodeRes() {}

// TournamentStubV5GetLobbyEventsByCodeServiceUnavailable is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeServiceUnavailable struct{}

func (*TournamentStubV5GetLobbyEventsByCodeServiceUnavailable) tournamentStubV5GetLobbyEventsByCodeRes() {
}

// TournamentStubV5GetLobbyEventsByCodeTooManyRequests is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeTooManyRequests struct{}

func (*TournamentStubV5GetLobbyEventsByCodeTooManyRequests) tournamentStubV5GetLobbyEventsByCodeRes() {
}

// TournamentStubV5GetLobbyEventsByCodeUnauthorized is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeUnauthorized struct{}

func (*TournamentStubV5GetLobbyEventsByCodeUnauthorized) tournamentStubV5GetLobbyEventsByCodeRes() {}

// TournamentStubV5GetLobbyEventsByCodeUnsupportedMediaType is response for TournamentStubV5GetLobbyEventsByCode operation.
type TournamentStubV5GetLobbyEventsByCodeUnsupportedMediaType struct{}

func (*TournamentStubV5GetLobbyEventsByCodeUnsupportedMediaType) tournamentStubV5GetLobbyEventsByCodeRes() {
}

// TournamentStubV5GetTournamentCodeBadGateway is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeBadGateway struct{}

func (*TournamentStubV5GetTournamentCodeBadGateway) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeBadRequest is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeBadRequest struct{}

func (*TournamentStubV5GetTournamentCodeBadRequest) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeForbidden is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeForbidden struct{}

func (*TournamentStubV5GetTournamentCodeForbidden) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeGatewayTimeout is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeGatewayTimeout struct{}

func (*TournamentStubV5GetTournamentCodeGatewayTimeout) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeInternalServerError is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeInternalServerError struct{}

func (*TournamentStubV5GetTournamentCodeInternalServerError) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeMethodNotAllowed is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeMethodNotAllowed struct{}

func (*TournamentStubV5GetTournamentCodeMethodNotAllowed) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeNotFound is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeNotFound struct{}

func (*TournamentStubV5GetTournamentCodeNotFound) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeServiceUnavailable is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeServiceUnavailable struct{}

func (*TournamentStubV5GetTournamentCodeServiceUnavailable) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeTooManyRequests is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeTooManyRequests struct{}

func (*TournamentStubV5GetTournamentCodeTooManyRequests) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeUnauthorized is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeUnauthorized struct{}

func (*TournamentStubV5GetTournamentCodeUnauthorized) tournamentStubV5GetTournamentCodeRes() {}

// TournamentStubV5GetTournamentCodeUnsupportedMediaType is response for TournamentStubV5GetTournamentCode operation.
type TournamentStubV5GetTournamentCodeUnsupportedMediaType struct{}

func (*TournamentStubV5GetTournamentCodeUnsupportedMediaType) tournamentStubV5GetTournamentCodeRes() {
}

// Ref: #/components/schemas/tournament-stub-v5.LobbyEventV5DTO
type TournamentStubV5LobbyEventV5DTO struct {
	// Timestamp from the event.
	Timestamp string `json:"timestamp"`
	// The type of event that was triggered.
	EventType string `json:"eventType"`
	// The puuid that triggered the event (Encrypted).
	Puuid string `json:"puuid"`
}

// GetTimestamp returns the value of Timestamp.
func (s *TournamentStubV5LobbyEventV5DTO) GetTimestamp() string {
	return s.Timestamp
}

// GetEventType returns the value of EventType.
func (s *TournamentStubV5LobbyEventV5DTO) GetEventType() string {
	return s.EventType
}

// GetPuuid returns the value of Puuid.
func (s *TournamentStubV5LobbyEventV5DTO) GetPuuid() string {
	return s.Puuid
}

// SetTimestamp sets the value of Timestamp.
func (s *TournamentStubV5LobbyEventV5DTO) SetTimestamp(val string) {
	s.Timestamp = val
}

// SetEventType sets the value of EventType.
func (s *TournamentStubV5LobbyEventV5DTO) SetEventType(val string) {
	s.EventType = val
}

// SetPuuid sets the value of Puuid.
func (s *TournamentStubV5LobbyEventV5DTO) SetPuuid(val string) {
	s.Puuid = val
}

// Ref: #/components/schemas/tournament-stub-v5.LobbyEventV5DTOWrapper
type TournamentStubV5LobbyEventV5DTOWrapper struct {
	EventList []TournamentStubV5LobbyEventV5DTO `json:"eventList"`
}

// GetEventList returns the value of EventList.
func (s *TournamentStubV5LobbyEventV5DTOWrapper) GetEventList() []TournamentStubV5LobbyEventV5DTO {
	return s.EventList
}

// SetEventList sets the value of EventList.
func (s *TournamentStubV5LobbyEventV5DTOWrapper) SetEventList(val []TournamentStubV5LobbyEventV5DTO) {
	s.EventList = val
}

func (*TournamentStubV5LobbyEventV5DTOWrapper) tournamentStubV5GetLobbyEventsByCodeRes() {}

// Ref: #/components/schemas/tournament-stub-v5.ProviderRegistrationParametersV5
type TournamentStubV5ProviderRegistrationParametersV5 struct {
	// The region in which the provider will be running tournaments.
	// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR).
	Region TournamentStubV5ProviderRegistrationParametersV5Region `json:"region"`
	// The provider's callback URL to which tournament game results in this region should be posted. The
	// URL must be well-formed, use the http or https protocol, and use the default port for the protocol
	// (http URLs must use port 80, https URLs must use port 443).
	URL string `json:"url"`
}

// GetRegion returns the value of Region.
func (s *TournamentStubV5ProviderRegistrationParametersV5) GetRegion() TournamentStubV5ProviderRegistrationParametersV5Region {
	return s.Region
}

// GetURL returns the value of URL.
func (s *TournamentStubV5ProviderRegistrationParametersV5) GetURL() string {
	return s.URL
}

// SetRegion sets the value of Region.
func (s *TournamentStubV5ProviderRegistrationParametersV5) SetRegion(val TournamentStubV5ProviderRegistrationParametersV5Region) {
	s.Region = val
}

// SetURL sets the value of URL.
func (s *TournamentStubV5ProviderRegistrationParametersV5) SetURL(val string) {
	s.URL = val
}

// The region in which the provider will be running tournaments.
// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR).
type TournamentStubV5ProviderRegistrationParametersV5Region string

const (
	TournamentStubV5ProviderRegistrationParametersV5RegionBR   TournamentStubV5ProviderRegistrationParametersV5Region = "BR"
	TournamentStubV5ProviderRegistrationParametersV5RegionEUNE TournamentStubV5ProviderRegistrationParametersV5Region = "EUNE"
	TournamentStubV5ProviderRegistrationParametersV5RegionEUW  TournamentStubV5ProviderRegistrationParametersV5Region = "EUW"
	TournamentStubV5ProviderRegistrationParametersV5RegionJP   TournamentStubV5ProviderRegistrationParametersV5Region = "JP"
	TournamentStubV5ProviderRegistrationParametersV5RegionLAN  TournamentStubV5ProviderRegistrationParametersV5Region = "LAN"
	TournamentStubV5ProviderRegistrationParametersV5RegionLAS  TournamentStubV5ProviderRegistrationParametersV5Region = "LAS"
	TournamentStubV5ProviderRegistrationParametersV5RegionNA   TournamentStubV5ProviderRegistrationParametersV5Region = "NA"
	TournamentStubV5ProviderRegistrationParametersV5RegionOCE  TournamentStubV5ProviderRegistrationParametersV5Region = "OCE"
	TournamentStubV5ProviderRegistrationParametersV5RegionPBE  TournamentStubV5ProviderRegistrationParametersV5Region = "PBE"
	TournamentStubV5ProviderRegistrationParametersV5RegionRU   TournamentStubV5ProviderRegistrationParametersV5Region = "RU"
	TournamentStubV5ProviderRegistrationParametersV5RegionTR   TournamentStubV5ProviderRegistrationParametersV5Region = "TR"
	TournamentStubV5ProviderRegistrationParametersV5RegionKR   TournamentStubV5ProviderRegistrationParametersV5Region = "KR"
)

// AllValues returns all TournamentStubV5ProviderRegistrationParametersV5Region values.
func (TournamentStubV5ProviderRegistrationParametersV5Region) AllValues() []TournamentStubV5ProviderRegistrationParametersV5Region {
	return []TournamentStubV5ProviderRegistrationParametersV5Region{
		TournamentStubV5ProviderRegistrationParametersV5RegionBR,
		TournamentStubV5ProviderRegistrationParametersV5RegionEUNE,
		TournamentStubV5ProviderRegistrationParametersV5RegionEUW,
		TournamentStubV5ProviderRegistrationParametersV5RegionJP,
		TournamentStubV5ProviderRegistrationParametersV5RegionLAN,
		TournamentStubV5ProviderRegistrationParametersV5RegionLAS,
		TournamentStubV5ProviderRegistrationParametersV5RegionNA,
		TournamentStubV5ProviderRegistrationParametersV5RegionOCE,
		TournamentStubV5ProviderRegistrationParametersV5RegionPBE,
		TournamentStubV5ProviderRegistrationParametersV5RegionRU,
		TournamentStubV5ProviderRegistrationParametersV5RegionTR,
		TournamentStubV5ProviderRegistrationParametersV5RegionKR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentStubV5ProviderRegistrationParametersV5Region) MarshalText() ([]byte, error) {
	switch s {
	case TournamentStubV5ProviderRegistrationParametersV5RegionBR:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionEUNE:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionEUW:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionJP:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionLAN:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionLAS:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionNA:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionOCE:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionPBE:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionRU:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionTR:
		return []byte(s), nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionKR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentStubV5ProviderRegistrationParametersV5Region) UnmarshalText(data []byte) error {
	switch TournamentStubV5ProviderRegistrationParametersV5Region(data) {
	case TournamentStubV5ProviderRegistrationParametersV5RegionBR:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionBR
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionEUNE:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionEUNE
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionEUW:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionEUW
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionJP:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionJP
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionLAN:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionLAN
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionLAS:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionLAS
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionNA:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionNA
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionOCE:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionOCE
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionPBE:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionPBE
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionRU:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionRU
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionTR:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionTR
		return nil
	case TournamentStubV5ProviderRegistrationParametersV5RegionKR:
		*s = TournamentStubV5ProviderRegistrationParametersV5RegionKR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TournamentStubV5RegisterProviderDataBadGateway is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataBadGateway struct{}

func (*TournamentStubV5RegisterProviderDataBadGateway) tournamentStubV5RegisterProviderDataRes() {}

// TournamentStubV5RegisterProviderDataBadRequest is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataBadRequest struct{}

func (*TournamentStubV5RegisterProviderDataBadRequest) tournamentStubV5RegisterProviderDataRes() {}

// TournamentStubV5RegisterProviderDataForbidden is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataForbidden struct{}

func (*TournamentStubV5RegisterProviderDataForbidden) tournamentStubV5RegisterProviderDataRes() {}

// TournamentStubV5RegisterProviderDataGatewayTimeout is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataGatewayTimeout struct{}

func (*TournamentStubV5RegisterProviderDataGatewayTimeout) tournamentStubV5RegisterProviderDataRes() {
}

// TournamentStubV5RegisterProviderDataInternalServerError is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataInternalServerError struct{}

func (*TournamentStubV5RegisterProviderDataInternalServerError) tournamentStubV5RegisterProviderDataRes() {
}

// TournamentStubV5RegisterProviderDataMethodNotAllowed is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataMethodNotAllowed struct{}

func (*TournamentStubV5RegisterProviderDataMethodNotAllowed) tournamentStubV5RegisterProviderDataRes() {
}

// TournamentStubV5RegisterProviderDataNotFound is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataNotFound struct{}

func (*TournamentStubV5RegisterProviderDataNotFound) tournamentStubV5RegisterProviderDataRes() {}

type TournamentStubV5RegisterProviderDataOKApplicationJSON int32

func (*TournamentStubV5RegisterProviderDataOKApplicationJSON) tournamentStubV5RegisterProviderDataRes() {
}

// TournamentStubV5RegisterProviderDataServiceUnavailable is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataServiceUnavailable struct{}

func (*TournamentStubV5RegisterProviderDataServiceUnavailable) tournamentStubV5RegisterProviderDataRes() {
}

// TournamentStubV5RegisterProviderDataTooManyRequests is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataTooManyRequests struct{}

func (*TournamentStubV5RegisterProviderDataTooManyRequests) tournamentStubV5RegisterProviderDataRes() {
}

// TournamentStubV5RegisterProviderDataUnauthorized is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataUnauthorized struct{}

func (*TournamentStubV5RegisterProviderDataUnauthorized) tournamentStubV5RegisterProviderDataRes() {}

// TournamentStubV5RegisterProviderDataUnsupportedMediaType is response for TournamentStubV5RegisterProviderData operation.
type TournamentStubV5RegisterProviderDataUnsupportedMediaType struct{}

func (*TournamentStubV5RegisterProviderDataUnsupportedMediaType) tournamentStubV5RegisterProviderDataRes() {
}

// TournamentStubV5RegisterTournamentBadGateway is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentBadGateway struct{}

func (*TournamentStubV5RegisterTournamentBadGateway) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentBadRequest is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentBadRequest struct{}

func (*TournamentStubV5RegisterTournamentBadRequest) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentForbidden is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentForbidden struct{}

func (*TournamentStubV5RegisterTournamentForbidden) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentGatewayTimeout is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentGatewayTimeout struct{}

func (*TournamentStubV5RegisterTournamentGatewayTimeout) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentInternalServerError is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentInternalServerError struct{}

func (*TournamentStubV5RegisterTournamentInternalServerError) tournamentStubV5RegisterTournamentRes() {
}

// TournamentStubV5RegisterTournamentMethodNotAllowed is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentMethodNotAllowed struct{}

func (*TournamentStubV5RegisterTournamentMethodNotAllowed) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentNotFound is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentNotFound struct{}

func (*TournamentStubV5RegisterTournamentNotFound) tournamentStubV5RegisterTournamentRes() {}

type TournamentStubV5RegisterTournamentOKApplicationJSON int32

func (*TournamentStubV5RegisterTournamentOKApplicationJSON) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentServiceUnavailable is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentServiceUnavailable struct{}

func (*TournamentStubV5RegisterTournamentServiceUnavailable) tournamentStubV5RegisterTournamentRes() {
}

// TournamentStubV5RegisterTournamentTooManyRequests is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentTooManyRequests struct{}

func (*TournamentStubV5RegisterTournamentTooManyRequests) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentUnauthorized is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentUnauthorized struct{}

func (*TournamentStubV5RegisterTournamentUnauthorized) tournamentStubV5RegisterTournamentRes() {}

// TournamentStubV5RegisterTournamentUnsupportedMediaType is response for TournamentStubV5RegisterTournament operation.
type TournamentStubV5RegisterTournamentUnsupportedMediaType struct{}

func (*TournamentStubV5RegisterTournamentUnsupportedMediaType) tournamentStubV5RegisterTournamentRes() {
}

// Ref: #/components/schemas/tournament-stub-v5.TournamentCodeParametersV5
type TournamentStubV5TournamentCodeParametersV5 struct {
	// Optional list of encrypted puuids in order to validate the players eligible to join the lobby.
	// NOTE: We currently do not enforce participants at the team level, but rather the aggregate of
	// teamOne and teamTwo. We may add the ability to enforce at the team level in the future.
	AllowedParticipants []string `json:"allowedParticipants"`
	// Optional string that may contain any data in any format, if specified at all. Used to denote any
	// custom information about the game.
	Metadata OptString `json:"metadata"`
	// The team size of the game. Valid values are 1-5.
	TeamSize int32 `json:"teamSize"`
	// The pick type of the game.
	// (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT).
	PickType TournamentStubV5TournamentCodeParametersV5PickType `json:"pickType"`
	// The map type of the game.
	// (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS).
	MapType TournamentStubV5TournamentCodeParametersV5MapType `json:"mapType"`
	// The spectator type of the game.
	// (Legal values:  NONE,  LOBBYONLY,  ALL).
	SpectatorType TournamentStubV5TournamentCodeParametersV5SpectatorType `json:"spectatorType"`
	// Checks if allowed participants are enough to make full teams.
	EnoughPlayers bool `json:"enoughPlayers"`
}

// GetAllowedParticipants returns the value of AllowedParticipants.
func (s *TournamentStubV5TournamentCodeParametersV5) GetAllowedParticipants() []string {
	return s.AllowedParticipants
}

// GetMetadata returns the value of Metadata.
func (s *TournamentStubV5TournamentCodeParametersV5) GetMetadata() OptString {
	return s.Metadata
}

// GetTeamSize returns the value of TeamSize.
func (s *TournamentStubV5TournamentCodeParametersV5) GetTeamSize() int32 {
	return s.TeamSize
}

// GetPickType returns the value of PickType.
func (s *TournamentStubV5TournamentCodeParametersV5) GetPickType() TournamentStubV5TournamentCodeParametersV5PickType {
	return s.PickType
}

// GetMapType returns the value of MapType.
func (s *TournamentStubV5TournamentCodeParametersV5) GetMapType() TournamentStubV5TournamentCodeParametersV5MapType {
	return s.MapType
}

// GetSpectatorType returns the value of SpectatorType.
func (s *TournamentStubV5TournamentCodeParametersV5) GetSpectatorType() TournamentStubV5TournamentCodeParametersV5SpectatorType {
	return s.SpectatorType
}

// GetEnoughPlayers returns the value of EnoughPlayers.
func (s *TournamentStubV5TournamentCodeParametersV5) GetEnoughPlayers() bool {
	return s.EnoughPlayers
}

// SetAllowedParticipants sets the value of AllowedParticipants.
func (s *TournamentStubV5TournamentCodeParametersV5) SetAllowedParticipants(val []string) {
	s.AllowedParticipants = val
}

// SetMetadata sets the value of Metadata.
func (s *TournamentStubV5TournamentCodeParametersV5) SetMetadata(val OptString) {
	s.Metadata = val
}

// SetTeamSize sets the value of TeamSize.
func (s *TournamentStubV5TournamentCodeParametersV5) SetTeamSize(val int32) {
	s.TeamSize = val
}

// SetPickType sets the value of PickType.
func (s *TournamentStubV5TournamentCodeParametersV5) SetPickType(val TournamentStubV5TournamentCodeParametersV5PickType) {
	s.PickType = val
}

// SetMapType sets the value of MapType.
func (s *TournamentStubV5TournamentCodeParametersV5) SetMapType(val TournamentStubV5TournamentCodeParametersV5MapType) {
	s.MapType = val
}

// SetSpectatorType sets the value of SpectatorType.
func (s *TournamentStubV5TournamentCodeParametersV5) SetSpectatorType(val TournamentStubV5TournamentCodeParametersV5SpectatorType) {
	s.SpectatorType = val
}

// SetEnoughPlayers sets the value of EnoughPlayers.
func (s *TournamentStubV5TournamentCodeParametersV5) SetEnoughPlayers(val bool) {
	s.EnoughPlayers = val
}

// The map type of the game.
// (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS).
type TournamentStubV5TournamentCodeParametersV5MapType string

const (
	TournamentStubV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT TournamentStubV5TournamentCodeParametersV5MapType = "SUMMONERS_RIFT"
	TournamentStubV5TournamentCodeParametersV5MapTypeHOWLINGABYSS  TournamentStubV5TournamentCodeParametersV5MapType = "HOWLING_ABYSS"
)

// AllValues returns all TournamentStubV5TournamentCodeParametersV5MapType values.
func (TournamentStubV5TournamentCodeParametersV5MapType) AllValues() []TournamentStubV5TournamentCodeParametersV5MapType {
	return []TournamentStubV5TournamentCodeParametersV5MapType{
		TournamentStubV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT,
		TournamentStubV5TournamentCodeParametersV5MapTypeHOWLINGABYSS,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentStubV5TournamentCodeParametersV5MapType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentStubV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeParametersV5MapTypeHOWLINGABYSS:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentStubV5TournamentCodeParametersV5MapType) UnmarshalText(data []byte) error {
	switch TournamentStubV5TournamentCodeParametersV5MapType(data) {
	case TournamentStubV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT:
		*s = TournamentStubV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT
		return nil
	case TournamentStubV5TournamentCodeParametersV5MapTypeHOWLINGABYSS:
		*s = TournamentStubV5TournamentCodeParametersV5MapTypeHOWLINGABYSS
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The pick type of the game.
// (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT).
type TournamentStubV5TournamentCodeParametersV5PickType string

const (
	TournamentStubV5TournamentCodeParametersV5PickTypeBLINDPICK       TournamentStubV5TournamentCodeParametersV5PickType = "BLIND_PICK"
	TournamentStubV5TournamentCodeParametersV5PickTypeDRAFTMODE       TournamentStubV5TournamentCodeParametersV5PickType = "DRAFT_MODE"
	TournamentStubV5TournamentCodeParametersV5PickTypeALLRANDOM       TournamentStubV5TournamentCodeParametersV5PickType = "ALL_RANDOM"
	TournamentStubV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT TournamentStubV5TournamentCodeParametersV5PickType = "TOURNAMENT_DRAFT"
)

// AllValues returns all TournamentStubV5TournamentCodeParametersV5PickType values.
func (TournamentStubV5TournamentCodeParametersV5PickType) AllValues() []TournamentStubV5TournamentCodeParametersV5PickType {
	return []TournamentStubV5TournamentCodeParametersV5PickType{
		TournamentStubV5TournamentCodeParametersV5PickTypeBLINDPICK,
		TournamentStubV5TournamentCodeParametersV5PickTypeDRAFTMODE,
		TournamentStubV5TournamentCodeParametersV5PickTypeALLRANDOM,
		TournamentStubV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentStubV5TournamentCodeParametersV5PickType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentStubV5TournamentCodeParametersV5PickTypeBLINDPICK:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeParametersV5PickTypeDRAFTMODE:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeParametersV5PickTypeALLRANDOM:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentStubV5TournamentCodeParametersV5PickType) UnmarshalText(data []byte) error {
	switch TournamentStubV5TournamentCodeParametersV5PickType(data) {
	case TournamentStubV5TournamentCodeParametersV5PickTypeBLINDPICK:
		*s = TournamentStubV5TournamentCodeParametersV5PickTypeBLINDPICK
		return nil
	case TournamentStubV5TournamentCodeParametersV5PickTypeDRAFTMODE:
		*s = TournamentStubV5TournamentCodeParametersV5PickTypeDRAFTMODE
		return nil
	case TournamentStubV5TournamentCodeParametersV5PickTypeALLRANDOM:
		*s = TournamentStubV5TournamentCodeParametersV5PickTypeALLRANDOM
		return nil
	case TournamentStubV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT:
		*s = TournamentStubV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The spectator type of the game.
// (Legal values:  NONE,  LOBBYONLY,  ALL).
type TournamentStubV5TournamentCodeParametersV5SpectatorType string

const (
	TournamentStubV5TournamentCodeParametersV5SpectatorTypeNONE      TournamentStubV5TournamentCodeParametersV5SpectatorType = "NONE"
	TournamentStubV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY TournamentStubV5TournamentCodeParametersV5SpectatorType = "LOBBYONLY"
	TournamentStubV5TournamentCodeParametersV5SpectatorTypeALL       TournamentStubV5TournamentCodeParametersV5SpectatorType = "ALL"
)

// AllValues returns all TournamentStubV5TournamentCodeParametersV5SpectatorType values.
func (TournamentStubV5TournamentCodeParametersV5SpectatorType) AllValues() []TournamentStubV5TournamentCodeParametersV5SpectatorType {
	return []TournamentStubV5TournamentCodeParametersV5SpectatorType{
		TournamentStubV5TournamentCodeParametersV5SpectatorTypeNONE,
		TournamentStubV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY,
		TournamentStubV5TournamentCodeParametersV5SpectatorTypeALL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentStubV5TournamentCodeParametersV5SpectatorType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentStubV5TournamentCodeParametersV5SpectatorTypeNONE:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeParametersV5SpectatorTypeALL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentStubV5TournamentCodeParametersV5SpectatorType) UnmarshalText(data []byte) error {
	switch TournamentStubV5TournamentCodeParametersV5SpectatorType(data) {
	case TournamentStubV5TournamentCodeParametersV5SpectatorTypeNONE:
		*s = TournamentStubV5TournamentCodeParametersV5SpectatorTypeNONE
		return nil
	case TournamentStubV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY:
		*s = TournamentStubV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY
		return nil
	case TournamentStubV5TournamentCodeParametersV5SpectatorTypeALL:
		*s = TournamentStubV5TournamentCodeParametersV5SpectatorTypeALL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tournament-stub-v5.TournamentCodeV5DTO
type TournamentStubV5TournamentCodeV5DTO struct {
	// The tournament code.
	Code string `json:"code"`
	// The lobby name for the tournament code game.
	LobbyName string `json:"lobbyName"`
	// The metadata for tournament code.
	MetaData string `json:"metaData"`
	// The password for the tournament code game.
	Password string `json:"password"`
	// The team size for the tournament code game.
	TeamSize int32 `json:"teamSize"`
	// The provider's ID.
	ProviderId int32 `json:"providerId"`
	// The pick mode for tournament code game.
	PickType string `json:"pickType"`
	// The tournament's ID.
	TournamentId int32 `json:"tournamentId"`
	// The tournament code's ID.
	ID int32 `json:"id"`
	// The tournament code's region.
	// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR).
	Region TournamentStubV5TournamentCodeV5DTORegion `json:"region"`
	// The game map for the tournament code game.
	Map string `json:"map"`
	// The puuids of the participants (Encrypted).
	Participants []string `json:"participants"`
}

// GetCode returns the value of Code.
func (s *TournamentStubV5TournamentCodeV5DTO) GetCode() string {
	return s.Code
}

// GetLobbyName returns the value of LobbyName.
func (s *TournamentStubV5TournamentCodeV5DTO) GetLobbyName() string {
	return s.LobbyName
}

// GetMetaData returns the value of MetaData.
func (s *TournamentStubV5TournamentCodeV5DTO) GetMetaData() string {
	return s.MetaData
}

// GetPassword returns the value of Password.
func (s *TournamentStubV5TournamentCodeV5DTO) GetPassword() string {
	return s.Password
}

// GetTeamSize returns the value of TeamSize.
func (s *TournamentStubV5TournamentCodeV5DTO) GetTeamSize() int32 {
	return s.TeamSize
}

// GetProviderId returns the value of ProviderId.
func (s *TournamentStubV5TournamentCodeV5DTO) GetProviderId() int32 {
	return s.ProviderId
}

// GetPickType returns the value of PickType.
func (s *TournamentStubV5TournamentCodeV5DTO) GetPickType() string {
	return s.PickType
}

// GetTournamentId returns the value of TournamentId.
func (s *TournamentStubV5TournamentCodeV5DTO) GetTournamentId() int32 {
	return s.TournamentId
}

// GetID returns the value of ID.
func (s *TournamentStubV5TournamentCodeV5DTO) GetID() int32 {
	return s.ID
}

// GetRegion returns the value of Region.
func (s *TournamentStubV5TournamentCodeV5DTO) GetRegion() TournamentStubV5TournamentCodeV5DTORegion {
	return s.Region
}

// GetMap returns the value of Map.
func (s *TournamentStubV5TournamentCodeV5DTO) GetMap() string {
	return s.Map
}

// GetParticipants returns the value of Participants.
func (s *TournamentStubV5TournamentCodeV5DTO) GetParticipants() []string {
	return s.Participants
}

// SetCode sets the value of Code.
func (s *TournamentStubV5TournamentCodeV5DTO) SetCode(val string) {
	s.Code = val
}

// SetLobbyName sets the value of LobbyName.
func (s *TournamentStubV5TournamentCodeV5DTO) SetLobbyName(val string) {
	s.LobbyName = val
}

// SetMetaData sets the value of MetaData.
func (s *TournamentStubV5TournamentCodeV5DTO) SetMetaData(val string) {
	s.MetaData = val
}

// SetPassword sets the value of Password.
func (s *TournamentStubV5TournamentCodeV5DTO) SetPassword(val string) {
	s.Password = val
}

// SetTeamSize sets the value of TeamSize.
func (s *TournamentStubV5TournamentCodeV5DTO) SetTeamSize(val int32) {
	s.TeamSize = val
}

// SetProviderId sets the value of ProviderId.
func (s *TournamentStubV5TournamentCodeV5DTO) SetProviderId(val int32) {
	s.ProviderId = val
}

// SetPickType sets the value of PickType.
func (s *TournamentStubV5TournamentCodeV5DTO) SetPickType(val string) {
	s.PickType = val
}

// SetTournamentId sets the value of TournamentId.
func (s *TournamentStubV5TournamentCodeV5DTO) SetTournamentId(val int32) {
	s.TournamentId = val
}

// SetID sets the value of ID.
func (s *TournamentStubV5TournamentCodeV5DTO) SetID(val int32) {
	s.ID = val
}

// SetRegion sets the value of Region.
func (s *TournamentStubV5TournamentCodeV5DTO) SetRegion(val TournamentStubV5TournamentCodeV5DTORegion) {
	s.Region = val
}

// SetMap sets the value of Map.
func (s *TournamentStubV5TournamentCodeV5DTO) SetMap(val string) {
	s.Map = val
}

// SetParticipants sets the value of Participants.
func (s *TournamentStubV5TournamentCodeV5DTO) SetParticipants(val []string) {
	s.Participants = val
}

func (*TournamentStubV5TournamentCodeV5DTO) tournamentStubV5GetTournamentCodeRes() {}

// The tournament code's region.
// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR).
type TournamentStubV5TournamentCodeV5DTORegion string

const (
	TournamentStubV5TournamentCodeV5DTORegionBR   TournamentStubV5TournamentCodeV5DTORegion = "BR"
	TournamentStubV5TournamentCodeV5DTORegionEUNE TournamentStubV5TournamentCodeV5DTORegion = "EUNE"
	TournamentStubV5TournamentCodeV5DTORegionEUW  TournamentStubV5TournamentCodeV5DTORegion = "EUW"
	TournamentStubV5TournamentCodeV5DTORegionJP   TournamentStubV5TournamentCodeV5DTORegion = "JP"
	TournamentStubV5TournamentCodeV5DTORegionLAN  TournamentStubV5TournamentCodeV5DTORegion = "LAN"
	TournamentStubV5TournamentCodeV5DTORegionLAS  TournamentStubV5TournamentCodeV5DTORegion = "LAS"
	TournamentStubV5TournamentCodeV5DTORegionNA   TournamentStubV5TournamentCodeV5DTORegion = "NA"
	TournamentStubV5TournamentCodeV5DTORegionOCE  TournamentStubV5TournamentCodeV5DTORegion = "OCE"
	TournamentStubV5TournamentCodeV5DTORegionPBE  TournamentStubV5TournamentCodeV5DTORegion = "PBE"
	TournamentStubV5TournamentCodeV5DTORegionRU   TournamentStubV5TournamentCodeV5DTORegion = "RU"
	TournamentStubV5TournamentCodeV5DTORegionTR   TournamentStubV5TournamentCodeV5DTORegion = "TR"
	TournamentStubV5TournamentCodeV5DTORegionKR   TournamentStubV5TournamentCodeV5DTORegion = "KR"
)

// AllValues returns all TournamentStubV5TournamentCodeV5DTORegion values.
func (TournamentStubV5TournamentCodeV5DTORegion) AllValues() []TournamentStubV5TournamentCodeV5DTORegion {
	return []TournamentStubV5TournamentCodeV5DTORegion{
		TournamentStubV5TournamentCodeV5DTORegionBR,
		TournamentStubV5TournamentCodeV5DTORegionEUNE,
		TournamentStubV5TournamentCodeV5DTORegionEUW,
		TournamentStubV5TournamentCodeV5DTORegionJP,
		TournamentStubV5TournamentCodeV5DTORegionLAN,
		TournamentStubV5TournamentCodeV5DTORegionLAS,
		TournamentStubV5TournamentCodeV5DTORegionNA,
		TournamentStubV5TournamentCodeV5DTORegionOCE,
		TournamentStubV5TournamentCodeV5DTORegionPBE,
		TournamentStubV5TournamentCodeV5DTORegionRU,
		TournamentStubV5TournamentCodeV5DTORegionTR,
		TournamentStubV5TournamentCodeV5DTORegionKR,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentStubV5TournamentCodeV5DTORegion) MarshalText() ([]byte, error) {
	switch s {
	case TournamentStubV5TournamentCodeV5DTORegionBR:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionEUNE:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionEUW:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionJP:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionLAN:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionLAS:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionNA:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionOCE:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionPBE:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionRU:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionTR:
		return []byte(s), nil
	case TournamentStubV5TournamentCodeV5DTORegionKR:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentStubV5TournamentCodeV5DTORegion) UnmarshalText(data []byte) error {
	switch TournamentStubV5TournamentCodeV5DTORegion(data) {
	case TournamentStubV5TournamentCodeV5DTORegionBR:
		*s = TournamentStubV5TournamentCodeV5DTORegionBR
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionEUNE:
		*s = TournamentStubV5TournamentCodeV5DTORegionEUNE
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionEUW:
		*s = TournamentStubV5TournamentCodeV5DTORegionEUW
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionJP:
		*s = TournamentStubV5TournamentCodeV5DTORegionJP
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionLAN:
		*s = TournamentStubV5TournamentCodeV5DTORegionLAN
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionLAS:
		*s = TournamentStubV5TournamentCodeV5DTORegionLAS
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionNA:
		*s = TournamentStubV5TournamentCodeV5DTORegionNA
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionOCE:
		*s = TournamentStubV5TournamentCodeV5DTORegionOCE
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionPBE:
		*s = TournamentStubV5TournamentCodeV5DTORegionPBE
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionRU:
		*s = TournamentStubV5TournamentCodeV5DTORegionRU
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionTR:
		*s = TournamentStubV5TournamentCodeV5DTORegionTR
		return nil
	case TournamentStubV5TournamentCodeV5DTORegionKR:
		*s = TournamentStubV5TournamentCodeV5DTORegionKR
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tournament-stub-v5.TournamentRegistrationParametersV5
type TournamentStubV5TournamentRegistrationParametersV5 struct {
	// The provider ID to specify the regional registered provider data to associate this tournament.
	ProviderId int32 `json:"providerId"`
	// The optional name of the tournament.
	Name OptString `json:"name"`
}

// GetProviderId returns the value of ProviderId.
func (s *TournamentStubV5TournamentRegistrationParametersV5) GetProviderId() int32 {
	return s.ProviderId
}

// GetName returns the value of Name.
func (s *TournamentStubV5TournamentRegistrationParametersV5) GetName() OptString {
	return s.Name
}

// SetProviderId sets the value of ProviderId.
func (s *TournamentStubV5TournamentRegistrationParametersV5) SetProviderId(val int32) {
	s.ProviderId = val
}

// SetName sets the value of Name.
func (s *TournamentStubV5TournamentRegistrationParametersV5) SetName(val OptString) {
	s.Name = val
}

// TournamentV5CreateTournamentCodeBadGateway is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeBadGateway struct{}

func (*TournamentV5CreateTournamentCodeBadGateway) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeBadRequest is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeBadRequest struct{}

func (*TournamentV5CreateTournamentCodeBadRequest) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeForbidden is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeForbidden struct{}

func (*TournamentV5CreateTournamentCodeForbidden) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeGatewayTimeout is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeGatewayTimeout struct{}

func (*TournamentV5CreateTournamentCodeGatewayTimeout) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeInternalServerError is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeInternalServerError struct{}

func (*TournamentV5CreateTournamentCodeInternalServerError) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeMethodNotAllowed is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeMethodNotAllowed struct{}

func (*TournamentV5CreateTournamentCodeMethodNotAllowed) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeNotFound is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeNotFound struct{}

func (*TournamentV5CreateTournamentCodeNotFound) tournamentV5CreateTournamentCodeRes() {}

type TournamentV5CreateTournamentCodeOKApplicationJSON []string

func (*TournamentV5CreateTournamentCodeOKApplicationJSON) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeServiceUnavailable is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeServiceUnavailable struct{}

func (*TournamentV5CreateTournamentCodeServiceUnavailable) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeTooManyRequests is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeTooManyRequests struct{}

func (*TournamentV5CreateTournamentCodeTooManyRequests) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeUnauthorized is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeUnauthorized struct{}

func (*TournamentV5CreateTournamentCodeUnauthorized) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5CreateTournamentCodeUnsupportedMediaType is response for TournamentV5CreateTournamentCode operation.
type TournamentV5CreateTournamentCodeUnsupportedMediaType struct{}

func (*TournamentV5CreateTournamentCodeUnsupportedMediaType) tournamentV5CreateTournamentCodeRes() {}

// TournamentV5GetGamesBadGateway is response for TournamentV5GetGames operation.
type TournamentV5GetGamesBadGateway struct{}

func (*TournamentV5GetGamesBadGateway) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesBadRequest is response for TournamentV5GetGames operation.
type TournamentV5GetGamesBadRequest struct{}

func (*TournamentV5GetGamesBadRequest) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesForbidden is response for TournamentV5GetGames operation.
type TournamentV5GetGamesForbidden struct{}

func (*TournamentV5GetGamesForbidden) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesGatewayTimeout is response for TournamentV5GetGames operation.
type TournamentV5GetGamesGatewayTimeout struct{}

func (*TournamentV5GetGamesGatewayTimeout) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesInternalServerError is response for TournamentV5GetGames operation.
type TournamentV5GetGamesInternalServerError struct{}

func (*TournamentV5GetGamesInternalServerError) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesMethodNotAllowed is response for TournamentV5GetGames operation.
type TournamentV5GetGamesMethodNotAllowed struct{}

func (*TournamentV5GetGamesMethodNotAllowed) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesNotFound is response for TournamentV5GetGames operation.
type TournamentV5GetGamesNotFound struct{}

func (*TournamentV5GetGamesNotFound) tournamentV5GetGamesRes() {}

type TournamentV5GetGamesOKApplicationJSON []TournamentV5TournamentGamesV5

func (*TournamentV5GetGamesOKApplicationJSON) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesServiceUnavailable is response for TournamentV5GetGames operation.
type TournamentV5GetGamesServiceUnavailable struct{}

func (*TournamentV5GetGamesServiceUnavailable) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesTooManyRequests is response for TournamentV5GetGames operation.
type TournamentV5GetGamesTooManyRequests struct{}

func (*TournamentV5GetGamesTooManyRequests) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesUnauthorized is response for TournamentV5GetGames operation.
type TournamentV5GetGamesUnauthorized struct{}

func (*TournamentV5GetGamesUnauthorized) tournamentV5GetGamesRes() {}

// TournamentV5GetGamesUnsupportedMediaType is response for TournamentV5GetGames operation.
type TournamentV5GetGamesUnsupportedMediaType struct{}

func (*TournamentV5GetGamesUnsupportedMediaType) tournamentV5GetGamesRes() {}

// TournamentV5GetLobbyEventsByCodeBadGateway is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeBadGateway struct{}

func (*TournamentV5GetLobbyEventsByCodeBadGateway) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeBadRequest is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeBadRequest struct{}

func (*TournamentV5GetLobbyEventsByCodeBadRequest) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeForbidden is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeForbidden struct{}

func (*TournamentV5GetLobbyEventsByCodeForbidden) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeGatewayTimeout is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeGatewayTimeout struct{}

func (*TournamentV5GetLobbyEventsByCodeGatewayTimeout) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeInternalServerError is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeInternalServerError struct{}

func (*TournamentV5GetLobbyEventsByCodeInternalServerError) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeMethodNotAllowed is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeMethodNotAllowed struct{}

func (*TournamentV5GetLobbyEventsByCodeMethodNotAllowed) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeNotFound is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeNotFound struct{}

func (*TournamentV5GetLobbyEventsByCodeNotFound) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeServiceUnavailable is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeServiceUnavailable struct{}

func (*TournamentV5GetLobbyEventsByCodeServiceUnavailable) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeTooManyRequests is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeTooManyRequests struct{}

func (*TournamentV5GetLobbyEventsByCodeTooManyRequests) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeUnauthorized is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeUnauthorized struct{}

func (*TournamentV5GetLobbyEventsByCodeUnauthorized) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetLobbyEventsByCodeUnsupportedMediaType is response for TournamentV5GetLobbyEventsByCode operation.
type TournamentV5GetLobbyEventsByCodeUnsupportedMediaType struct{}

func (*TournamentV5GetLobbyEventsByCodeUnsupportedMediaType) tournamentV5GetLobbyEventsByCodeRes() {}

// TournamentV5GetTournamentCodeBadGateway is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeBadGateway struct{}

func (*TournamentV5GetTournamentCodeBadGateway) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeBadRequest is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeBadRequest struct{}

func (*TournamentV5GetTournamentCodeBadRequest) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeForbidden is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeForbidden struct{}

func (*TournamentV5GetTournamentCodeForbidden) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeGatewayTimeout is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeGatewayTimeout struct{}

func (*TournamentV5GetTournamentCodeGatewayTimeout) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeInternalServerError is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeInternalServerError struct{}

func (*TournamentV5GetTournamentCodeInternalServerError) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeMethodNotAllowed is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeMethodNotAllowed struct{}

func (*TournamentV5GetTournamentCodeMethodNotAllowed) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeNotFound is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeNotFound struct{}

func (*TournamentV5GetTournamentCodeNotFound) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeServiceUnavailable is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeServiceUnavailable struct{}

func (*TournamentV5GetTournamentCodeServiceUnavailable) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeTooManyRequests is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeTooManyRequests struct{}

func (*TournamentV5GetTournamentCodeTooManyRequests) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeUnauthorized is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeUnauthorized struct{}

func (*TournamentV5GetTournamentCodeUnauthorized) tournamentV5GetTournamentCodeRes() {}

// TournamentV5GetTournamentCodeUnsupportedMediaType is response for TournamentV5GetTournamentCode operation.
type TournamentV5GetTournamentCodeUnsupportedMediaType struct{}

func (*TournamentV5GetTournamentCodeUnsupportedMediaType) tournamentV5GetTournamentCodeRes() {}

// Ref: #/components/schemas/tournament-v5.LobbyEventV5DTO
type TournamentV5LobbyEventV5DTO struct {
	// Timestamp from the event.
	Timestamp string `json:"timestamp"`
	// The type of event that was triggered.
	EventType string `json:"eventType"`
	// The puuid that triggered the event (Encrypted).
	Puuid string `json:"puuid"`
}

// GetTimestamp returns the value of Timestamp.
func (s *TournamentV5LobbyEventV5DTO) GetTimestamp() string {
	return s.Timestamp
}

// GetEventType returns the value of EventType.
func (s *TournamentV5LobbyEventV5DTO) GetEventType() string {
	return s.EventType
}

// GetPuuid returns the value of Puuid.
func (s *TournamentV5LobbyEventV5DTO) GetPuuid() string {
	return s.Puuid
}

// SetTimestamp sets the value of Timestamp.
func (s *TournamentV5LobbyEventV5DTO) SetTimestamp(val string) {
	s.Timestamp = val
}

// SetEventType sets the value of EventType.
func (s *TournamentV5LobbyEventV5DTO) SetEventType(val string) {
	s.EventType = val
}

// SetPuuid sets the value of Puuid.
func (s *TournamentV5LobbyEventV5DTO) SetPuuid(val string) {
	s.Puuid = val
}

// Ref: #/components/schemas/tournament-v5.LobbyEventV5DTOWrapper
type TournamentV5LobbyEventV5DTOWrapper struct {
	EventList []TournamentV5LobbyEventV5DTO `json:"eventList"`
}

// GetEventList returns the value of EventList.
func (s *TournamentV5LobbyEventV5DTOWrapper) GetEventList() []TournamentV5LobbyEventV5DTO {
	return s.EventList
}

// SetEventList sets the value of EventList.
func (s *TournamentV5LobbyEventV5DTOWrapper) SetEventList(val []TournamentV5LobbyEventV5DTO) {
	s.EventList = val
}

func (*TournamentV5LobbyEventV5DTOWrapper) tournamentV5GetLobbyEventsByCodeRes() {}

// Ref: #/components/schemas/tournament-v5.ProviderRegistrationParametersV5
type TournamentV5ProviderRegistrationParametersV5 struct {
	// The region in which the provider will be running tournaments.
	// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR,  PH,  SG,  TH,
	// TW,  VN).
	Region TournamentV5ProviderRegistrationParametersV5Region `json:"region"`
	// The provider's callback URL to which tournament game results in this region should be posted. The
	// URL must be well-formed, use the http or https protocol, and use the default port for the protocol
	// (http URLs must use port 80, https URLs must use port 443).
	URL string `json:"url"`
}

// GetRegion returns the value of Region.
func (s *TournamentV5ProviderRegistrationParametersV5) GetRegion() TournamentV5ProviderRegistrationParametersV5Region {
	return s.Region
}

// GetURL returns the value of URL.
func (s *TournamentV5ProviderRegistrationParametersV5) GetURL() string {
	return s.URL
}

// SetRegion sets the value of Region.
func (s *TournamentV5ProviderRegistrationParametersV5) SetRegion(val TournamentV5ProviderRegistrationParametersV5Region) {
	s.Region = val
}

// SetURL sets the value of URL.
func (s *TournamentV5ProviderRegistrationParametersV5) SetURL(val string) {
	s.URL = val
}

// The region in which the provider will be running tournaments.
// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR,  PH,  SG,  TH,
// TW,  VN).
type TournamentV5ProviderRegistrationParametersV5Region string

const (
	TournamentV5ProviderRegistrationParametersV5RegionBR   TournamentV5ProviderRegistrationParametersV5Region = "BR"
	TournamentV5ProviderRegistrationParametersV5RegionEUNE TournamentV5ProviderRegistrationParametersV5Region = "EUNE"
	TournamentV5ProviderRegistrationParametersV5RegionEUW  TournamentV5ProviderRegistrationParametersV5Region = "EUW"
	TournamentV5ProviderRegistrationParametersV5RegionJP   TournamentV5ProviderRegistrationParametersV5Region = "JP"
	TournamentV5ProviderRegistrationParametersV5RegionLAN  TournamentV5ProviderRegistrationParametersV5Region = "LAN"
	TournamentV5ProviderRegistrationParametersV5RegionLAS  TournamentV5ProviderRegistrationParametersV5Region = "LAS"
	TournamentV5ProviderRegistrationParametersV5RegionNA   TournamentV5ProviderRegistrationParametersV5Region = "NA"
	TournamentV5ProviderRegistrationParametersV5RegionOCE  TournamentV5ProviderRegistrationParametersV5Region = "OCE"
	TournamentV5ProviderRegistrationParametersV5RegionPBE  TournamentV5ProviderRegistrationParametersV5Region = "PBE"
	TournamentV5ProviderRegistrationParametersV5RegionRU   TournamentV5ProviderRegistrationParametersV5Region = "RU"
	TournamentV5ProviderRegistrationParametersV5RegionTR   TournamentV5ProviderRegistrationParametersV5Region = "TR"
	TournamentV5ProviderRegistrationParametersV5RegionKR   TournamentV5ProviderRegistrationParametersV5Region = "KR"
	TournamentV5ProviderRegistrationParametersV5RegionPH   TournamentV5ProviderRegistrationParametersV5Region = "PH"
	TournamentV5ProviderRegistrationParametersV5RegionSG   TournamentV5ProviderRegistrationParametersV5Region = "SG"
	TournamentV5ProviderRegistrationParametersV5RegionTH   TournamentV5ProviderRegistrationParametersV5Region = "TH"
	TournamentV5ProviderRegistrationParametersV5RegionTW   TournamentV5ProviderRegistrationParametersV5Region = "TW"
	TournamentV5ProviderRegistrationParametersV5RegionVN   TournamentV5ProviderRegistrationParametersV5Region = "VN"
)

// AllValues returns all TournamentV5ProviderRegistrationParametersV5Region values.
func (TournamentV5ProviderRegistrationParametersV5Region) AllValues() []TournamentV5ProviderRegistrationParametersV5Region {
	return []TournamentV5ProviderRegistrationParametersV5Region{
		TournamentV5ProviderRegistrationParametersV5RegionBR,
		TournamentV5ProviderRegistrationParametersV5RegionEUNE,
		TournamentV5ProviderRegistrationParametersV5RegionEUW,
		TournamentV5ProviderRegistrationParametersV5RegionJP,
		TournamentV5ProviderRegistrationParametersV5RegionLAN,
		TournamentV5ProviderRegistrationParametersV5RegionLAS,
		TournamentV5ProviderRegistrationParametersV5RegionNA,
		TournamentV5ProviderRegistrationParametersV5RegionOCE,
		TournamentV5ProviderRegistrationParametersV5RegionPBE,
		TournamentV5ProviderRegistrationParametersV5RegionRU,
		TournamentV5ProviderRegistrationParametersV5RegionTR,
		TournamentV5ProviderRegistrationParametersV5RegionKR,
		TournamentV5ProviderRegistrationParametersV5RegionPH,
		TournamentV5ProviderRegistrationParametersV5RegionSG,
		TournamentV5ProviderRegistrationParametersV5RegionTH,
		TournamentV5ProviderRegistrationParametersV5RegionTW,
		TournamentV5ProviderRegistrationParametersV5RegionVN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5ProviderRegistrationParametersV5Region) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5ProviderRegistrationParametersV5RegionBR:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionEUNE:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionEUW:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionJP:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionLAN:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionLAS:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionNA:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionOCE:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionPBE:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionRU:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionTR:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionKR:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionPH:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionSG:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionTH:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionTW:
		return []byte(s), nil
	case TournamentV5ProviderRegistrationParametersV5RegionVN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5ProviderRegistrationParametersV5Region) UnmarshalText(data []byte) error {
	switch TournamentV5ProviderRegistrationParametersV5Region(data) {
	case TournamentV5ProviderRegistrationParametersV5RegionBR:
		*s = TournamentV5ProviderRegistrationParametersV5RegionBR
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionEUNE:
		*s = TournamentV5ProviderRegistrationParametersV5RegionEUNE
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionEUW:
		*s = TournamentV5ProviderRegistrationParametersV5RegionEUW
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionJP:
		*s = TournamentV5ProviderRegistrationParametersV5RegionJP
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionLAN:
		*s = TournamentV5ProviderRegistrationParametersV5RegionLAN
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionLAS:
		*s = TournamentV5ProviderRegistrationParametersV5RegionLAS
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionNA:
		*s = TournamentV5ProviderRegistrationParametersV5RegionNA
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionOCE:
		*s = TournamentV5ProviderRegistrationParametersV5RegionOCE
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionPBE:
		*s = TournamentV5ProviderRegistrationParametersV5RegionPBE
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionRU:
		*s = TournamentV5ProviderRegistrationParametersV5RegionRU
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionTR:
		*s = TournamentV5ProviderRegistrationParametersV5RegionTR
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionKR:
		*s = TournamentV5ProviderRegistrationParametersV5RegionKR
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionPH:
		*s = TournamentV5ProviderRegistrationParametersV5RegionPH
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionSG:
		*s = TournamentV5ProviderRegistrationParametersV5RegionSG
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionTH:
		*s = TournamentV5ProviderRegistrationParametersV5RegionTH
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionTW:
		*s = TournamentV5ProviderRegistrationParametersV5RegionTW
		return nil
	case TournamentV5ProviderRegistrationParametersV5RegionVN:
		*s = TournamentV5ProviderRegistrationParametersV5RegionVN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// TournamentV5RegisterProviderDataBadGateway is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataBadGateway struct{}

func (*TournamentV5RegisterProviderDataBadGateway) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataBadRequest is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataBadRequest struct{}

func (*TournamentV5RegisterProviderDataBadRequest) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataForbidden is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataForbidden struct{}

func (*TournamentV5RegisterProviderDataForbidden) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataGatewayTimeout is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataGatewayTimeout struct{}

func (*TournamentV5RegisterProviderDataGatewayTimeout) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataInternalServerError is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataInternalServerError struct{}

func (*TournamentV5RegisterProviderDataInternalServerError) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataMethodNotAllowed is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataMethodNotAllowed struct{}

func (*TournamentV5RegisterProviderDataMethodNotAllowed) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataNotFound is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataNotFound struct{}

func (*TournamentV5RegisterProviderDataNotFound) tournamentV5RegisterProviderDataRes() {}

type TournamentV5RegisterProviderDataOKApplicationJSON int32

func (*TournamentV5RegisterProviderDataOKApplicationJSON) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataServiceUnavailable is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataServiceUnavailable struct{}

func (*TournamentV5RegisterProviderDataServiceUnavailable) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataTooManyRequests is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataTooManyRequests struct{}

func (*TournamentV5RegisterProviderDataTooManyRequests) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataUnauthorized is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataUnauthorized struct{}

func (*TournamentV5RegisterProviderDataUnauthorized) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterProviderDataUnsupportedMediaType is response for TournamentV5RegisterProviderData operation.
type TournamentV5RegisterProviderDataUnsupportedMediaType struct{}

func (*TournamentV5RegisterProviderDataUnsupportedMediaType) tournamentV5RegisterProviderDataRes() {}

// TournamentV5RegisterTournamentBadGateway is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentBadGateway struct{}

func (*TournamentV5RegisterTournamentBadGateway) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentBadRequest is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentBadRequest struct{}

func (*TournamentV5RegisterTournamentBadRequest) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentForbidden is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentForbidden struct{}

func (*TournamentV5RegisterTournamentForbidden) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentGatewayTimeout is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentGatewayTimeout struct{}

func (*TournamentV5RegisterTournamentGatewayTimeout) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentInternalServerError is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentInternalServerError struct{}

func (*TournamentV5RegisterTournamentInternalServerError) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentMethodNotAllowed is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentMethodNotAllowed struct{}

func (*TournamentV5RegisterTournamentMethodNotAllowed) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentNotFound is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentNotFound struct{}

func (*TournamentV5RegisterTournamentNotFound) tournamentV5RegisterTournamentRes() {}

type TournamentV5RegisterTournamentOKApplicationJSON int32

func (*TournamentV5RegisterTournamentOKApplicationJSON) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentServiceUnavailable is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentServiceUnavailable struct{}

func (*TournamentV5RegisterTournamentServiceUnavailable) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentTooManyRequests is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentTooManyRequests struct{}

func (*TournamentV5RegisterTournamentTooManyRequests) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentUnauthorized is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentUnauthorized struct{}

func (*TournamentV5RegisterTournamentUnauthorized) tournamentV5RegisterTournamentRes() {}

// TournamentV5RegisterTournamentUnsupportedMediaType is response for TournamentV5RegisterTournament operation.
type TournamentV5RegisterTournamentUnsupportedMediaType struct{}

func (*TournamentV5RegisterTournamentUnsupportedMediaType) tournamentV5RegisterTournamentRes() {}

// Ref: #/components/schemas/tournament-v5.TournamentCodeParametersV5
type TournamentV5TournamentCodeParametersV5 struct {
	// Optional list of encrypted puuids in order to validate the players eligible to join the lobby.
	// NOTE: We currently do not enforce participants at the team level, but rather the aggregate of
	// teamOne and teamTwo. We may add the ability to enforce at the team level in the future.
	AllowedParticipants []string `json:"allowedParticipants"`
	// Optional string that may contain any data in any format, if specified at all. Used to denote any
	// custom information about the game.
	Metadata OptString `json:"metadata"`
	// The team size of the game. Valid values are 1-5.
	TeamSize int32 `json:"teamSize"`
	// The pick type of the game.
	// (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT).
	PickType TournamentV5TournamentCodeParametersV5PickType `json:"pickType"`
	// The map type of the game.
	// (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS).
	MapType TournamentV5TournamentCodeParametersV5MapType `json:"mapType"`
	// The spectator type of the game.
	// (Legal values:  NONE,  LOBBYONLY,  ALL).
	SpectatorType TournamentV5TournamentCodeParametersV5SpectatorType `json:"spectatorType"`
	// Checks if allowed participants are enough to make full teams.
	EnoughPlayers bool `json:"enoughPlayers"`
}

// GetAllowedParticipants returns the value of AllowedParticipants.
func (s *TournamentV5TournamentCodeParametersV5) GetAllowedParticipants() []string {
	return s.AllowedParticipants
}

// GetMetadata returns the value of Metadata.
func (s *TournamentV5TournamentCodeParametersV5) GetMetadata() OptString {
	return s.Metadata
}

// GetTeamSize returns the value of TeamSize.
func (s *TournamentV5TournamentCodeParametersV5) GetTeamSize() int32 {
	return s.TeamSize
}

// GetPickType returns the value of PickType.
func (s *TournamentV5TournamentCodeParametersV5) GetPickType() TournamentV5TournamentCodeParametersV5PickType {
	return s.PickType
}

// GetMapType returns the value of MapType.
func (s *TournamentV5TournamentCodeParametersV5) GetMapType() TournamentV5TournamentCodeParametersV5MapType {
	return s.MapType
}

// GetSpectatorType returns the value of SpectatorType.
func (s *TournamentV5TournamentCodeParametersV5) GetSpectatorType() TournamentV5TournamentCodeParametersV5SpectatorType {
	return s.SpectatorType
}

// GetEnoughPlayers returns the value of EnoughPlayers.
func (s *TournamentV5TournamentCodeParametersV5) GetEnoughPlayers() bool {
	return s.EnoughPlayers
}

// SetAllowedParticipants sets the value of AllowedParticipants.
func (s *TournamentV5TournamentCodeParametersV5) SetAllowedParticipants(val []string) {
	s.AllowedParticipants = val
}

// SetMetadata sets the value of Metadata.
func (s *TournamentV5TournamentCodeParametersV5) SetMetadata(val OptString) {
	s.Metadata = val
}

// SetTeamSize sets the value of TeamSize.
func (s *TournamentV5TournamentCodeParametersV5) SetTeamSize(val int32) {
	s.TeamSize = val
}

// SetPickType sets the value of PickType.
func (s *TournamentV5TournamentCodeParametersV5) SetPickType(val TournamentV5TournamentCodeParametersV5PickType) {
	s.PickType = val
}

// SetMapType sets the value of MapType.
func (s *TournamentV5TournamentCodeParametersV5) SetMapType(val TournamentV5TournamentCodeParametersV5MapType) {
	s.MapType = val
}

// SetSpectatorType sets the value of SpectatorType.
func (s *TournamentV5TournamentCodeParametersV5) SetSpectatorType(val TournamentV5TournamentCodeParametersV5SpectatorType) {
	s.SpectatorType = val
}

// SetEnoughPlayers sets the value of EnoughPlayers.
func (s *TournamentV5TournamentCodeParametersV5) SetEnoughPlayers(val bool) {
	s.EnoughPlayers = val
}

// The map type of the game.
// (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS).
type TournamentV5TournamentCodeParametersV5MapType string

const (
	TournamentV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT TournamentV5TournamentCodeParametersV5MapType = "SUMMONERS_RIFT"
	TournamentV5TournamentCodeParametersV5MapTypeHOWLINGABYSS  TournamentV5TournamentCodeParametersV5MapType = "HOWLING_ABYSS"
)

// AllValues returns all TournamentV5TournamentCodeParametersV5MapType values.
func (TournamentV5TournamentCodeParametersV5MapType) AllValues() []TournamentV5TournamentCodeParametersV5MapType {
	return []TournamentV5TournamentCodeParametersV5MapType{
		TournamentV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT,
		TournamentV5TournamentCodeParametersV5MapTypeHOWLINGABYSS,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5TournamentCodeParametersV5MapType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT:
		return []byte(s), nil
	case TournamentV5TournamentCodeParametersV5MapTypeHOWLINGABYSS:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5TournamentCodeParametersV5MapType) UnmarshalText(data []byte) error {
	switch TournamentV5TournamentCodeParametersV5MapType(data) {
	case TournamentV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT:
		*s = TournamentV5TournamentCodeParametersV5MapTypeSUMMONERSRIFT
		return nil
	case TournamentV5TournamentCodeParametersV5MapTypeHOWLINGABYSS:
		*s = TournamentV5TournamentCodeParametersV5MapTypeHOWLINGABYSS
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The pick type of the game.
// (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT).
type TournamentV5TournamentCodeParametersV5PickType string

const (
	TournamentV5TournamentCodeParametersV5PickTypeBLINDPICK       TournamentV5TournamentCodeParametersV5PickType = "BLIND_PICK"
	TournamentV5TournamentCodeParametersV5PickTypeDRAFTMODE       TournamentV5TournamentCodeParametersV5PickType = "DRAFT_MODE"
	TournamentV5TournamentCodeParametersV5PickTypeALLRANDOM       TournamentV5TournamentCodeParametersV5PickType = "ALL_RANDOM"
	TournamentV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT TournamentV5TournamentCodeParametersV5PickType = "TOURNAMENT_DRAFT"
)

// AllValues returns all TournamentV5TournamentCodeParametersV5PickType values.
func (TournamentV5TournamentCodeParametersV5PickType) AllValues() []TournamentV5TournamentCodeParametersV5PickType {
	return []TournamentV5TournamentCodeParametersV5PickType{
		TournamentV5TournamentCodeParametersV5PickTypeBLINDPICK,
		TournamentV5TournamentCodeParametersV5PickTypeDRAFTMODE,
		TournamentV5TournamentCodeParametersV5PickTypeALLRANDOM,
		TournamentV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5TournamentCodeParametersV5PickType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5TournamentCodeParametersV5PickTypeBLINDPICK:
		return []byte(s), nil
	case TournamentV5TournamentCodeParametersV5PickTypeDRAFTMODE:
		return []byte(s), nil
	case TournamentV5TournamentCodeParametersV5PickTypeALLRANDOM:
		return []byte(s), nil
	case TournamentV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5TournamentCodeParametersV5PickType) UnmarshalText(data []byte) error {
	switch TournamentV5TournamentCodeParametersV5PickType(data) {
	case TournamentV5TournamentCodeParametersV5PickTypeBLINDPICK:
		*s = TournamentV5TournamentCodeParametersV5PickTypeBLINDPICK
		return nil
	case TournamentV5TournamentCodeParametersV5PickTypeDRAFTMODE:
		*s = TournamentV5TournamentCodeParametersV5PickTypeDRAFTMODE
		return nil
	case TournamentV5TournamentCodeParametersV5PickTypeALLRANDOM:
		*s = TournamentV5TournamentCodeParametersV5PickTypeALLRANDOM
		return nil
	case TournamentV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT:
		*s = TournamentV5TournamentCodeParametersV5PickTypeTOURNAMENTDRAFT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The spectator type of the game.
// (Legal values:  NONE,  LOBBYONLY,  ALL).
type TournamentV5TournamentCodeParametersV5SpectatorType string

const (
	TournamentV5TournamentCodeParametersV5SpectatorTypeNONE      TournamentV5TournamentCodeParametersV5SpectatorType = "NONE"
	TournamentV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY TournamentV5TournamentCodeParametersV5SpectatorType = "LOBBYONLY"
	TournamentV5TournamentCodeParametersV5SpectatorTypeALL       TournamentV5TournamentCodeParametersV5SpectatorType = "ALL"
)

// AllValues returns all TournamentV5TournamentCodeParametersV5SpectatorType values.
func (TournamentV5TournamentCodeParametersV5SpectatorType) AllValues() []TournamentV5TournamentCodeParametersV5SpectatorType {
	return []TournamentV5TournamentCodeParametersV5SpectatorType{
		TournamentV5TournamentCodeParametersV5SpectatorTypeNONE,
		TournamentV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY,
		TournamentV5TournamentCodeParametersV5SpectatorTypeALL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5TournamentCodeParametersV5SpectatorType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5TournamentCodeParametersV5SpectatorTypeNONE:
		return []byte(s), nil
	case TournamentV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY:
		return []byte(s), nil
	case TournamentV5TournamentCodeParametersV5SpectatorTypeALL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5TournamentCodeParametersV5SpectatorType) UnmarshalText(data []byte) error {
	switch TournamentV5TournamentCodeParametersV5SpectatorType(data) {
	case TournamentV5TournamentCodeParametersV5SpectatorTypeNONE:
		*s = TournamentV5TournamentCodeParametersV5SpectatorTypeNONE
		return nil
	case TournamentV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY:
		*s = TournamentV5TournamentCodeParametersV5SpectatorTypeLOBBYONLY
		return nil
	case TournamentV5TournamentCodeParametersV5SpectatorTypeALL:
		*s = TournamentV5TournamentCodeParametersV5SpectatorTypeALL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tournament-v5.TournamentCodeUpdateParametersV5
type TournamentV5TournamentCodeUpdateParametersV5 struct {
	// Optional list of encrypted puuids in order to validate the players eligible to join the lobby.
	// NOTE: We currently do not enforce participants at the team level, but rather the aggregate of
	// teamOne and teamTwo. We may add the ability to enforce at the team level in the future.
	AllowedParticipants []string `json:"allowedParticipants"`
	// The pick type
	// (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT).
	PickType TournamentV5TournamentCodeUpdateParametersV5PickType `json:"pickType"`
	// The map type
	// (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS).
	MapType TournamentV5TournamentCodeUpdateParametersV5MapType `json:"mapType"`
	// The spectator type
	// (Legal values:  NONE,  LOBBYONLY,  ALL).
	SpectatorType TournamentV5TournamentCodeUpdateParametersV5SpectatorType `json:"spectatorType"`
}

// GetAllowedParticipants returns the value of AllowedParticipants.
func (s *TournamentV5TournamentCodeUpdateParametersV5) GetAllowedParticipants() []string {
	return s.AllowedParticipants
}

// GetPickType returns the value of PickType.
func (s *TournamentV5TournamentCodeUpdateParametersV5) GetPickType() TournamentV5TournamentCodeUpdateParametersV5PickType {
	return s.PickType
}

// GetMapType returns the value of MapType.
func (s *TournamentV5TournamentCodeUpdateParametersV5) GetMapType() TournamentV5TournamentCodeUpdateParametersV5MapType {
	return s.MapType
}

// GetSpectatorType returns the value of SpectatorType.
func (s *TournamentV5TournamentCodeUpdateParametersV5) GetSpectatorType() TournamentV5TournamentCodeUpdateParametersV5SpectatorType {
	return s.SpectatorType
}

// SetAllowedParticipants sets the value of AllowedParticipants.
func (s *TournamentV5TournamentCodeUpdateParametersV5) SetAllowedParticipants(val []string) {
	s.AllowedParticipants = val
}

// SetPickType sets the value of PickType.
func (s *TournamentV5TournamentCodeUpdateParametersV5) SetPickType(val TournamentV5TournamentCodeUpdateParametersV5PickType) {
	s.PickType = val
}

// SetMapType sets the value of MapType.
func (s *TournamentV5TournamentCodeUpdateParametersV5) SetMapType(val TournamentV5TournamentCodeUpdateParametersV5MapType) {
	s.MapType = val
}

// SetSpectatorType sets the value of SpectatorType.
func (s *TournamentV5TournamentCodeUpdateParametersV5) SetSpectatorType(val TournamentV5TournamentCodeUpdateParametersV5SpectatorType) {
	s.SpectatorType = val
}

// The map type
// (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS).
type TournamentV5TournamentCodeUpdateParametersV5MapType string

const (
	TournamentV5TournamentCodeUpdateParametersV5MapTypeSUMMONERSRIFT TournamentV5TournamentCodeUpdateParametersV5MapType = "SUMMONERS_RIFT"
	TournamentV5TournamentCodeUpdateParametersV5MapTypeHOWLINGABYSS  TournamentV5TournamentCodeUpdateParametersV5MapType = "HOWLING_ABYSS"
)

// AllValues returns all TournamentV5TournamentCodeUpdateParametersV5MapType values.
func (TournamentV5TournamentCodeUpdateParametersV5MapType) AllValues() []TournamentV5TournamentCodeUpdateParametersV5MapType {
	return []TournamentV5TournamentCodeUpdateParametersV5MapType{
		TournamentV5TournamentCodeUpdateParametersV5MapTypeSUMMONERSRIFT,
		TournamentV5TournamentCodeUpdateParametersV5MapTypeHOWLINGABYSS,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5TournamentCodeUpdateParametersV5MapType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5TournamentCodeUpdateParametersV5MapTypeSUMMONERSRIFT:
		return []byte(s), nil
	case TournamentV5TournamentCodeUpdateParametersV5MapTypeHOWLINGABYSS:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5TournamentCodeUpdateParametersV5MapType) UnmarshalText(data []byte) error {
	switch TournamentV5TournamentCodeUpdateParametersV5MapType(data) {
	case TournamentV5TournamentCodeUpdateParametersV5MapTypeSUMMONERSRIFT:
		*s = TournamentV5TournamentCodeUpdateParametersV5MapTypeSUMMONERSRIFT
		return nil
	case TournamentV5TournamentCodeUpdateParametersV5MapTypeHOWLINGABYSS:
		*s = TournamentV5TournamentCodeUpdateParametersV5MapTypeHOWLINGABYSS
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The pick type
// (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT).
type TournamentV5TournamentCodeUpdateParametersV5PickType string

const (
	TournamentV5TournamentCodeUpdateParametersV5PickTypeBLINDPICK       TournamentV5TournamentCodeUpdateParametersV5PickType = "BLIND_PICK"
	TournamentV5TournamentCodeUpdateParametersV5PickTypeDRAFTMODE       TournamentV5TournamentCodeUpdateParametersV5PickType = "DRAFT_MODE"
	TournamentV5TournamentCodeUpdateParametersV5PickTypeALLRANDOM       TournamentV5TournamentCodeUpdateParametersV5PickType = "ALL_RANDOM"
	TournamentV5TournamentCodeUpdateParametersV5PickTypeTOURNAMENTDRAFT TournamentV5TournamentCodeUpdateParametersV5PickType = "TOURNAMENT_DRAFT"
)

// AllValues returns all TournamentV5TournamentCodeUpdateParametersV5PickType values.
func (TournamentV5TournamentCodeUpdateParametersV5PickType) AllValues() []TournamentV5TournamentCodeUpdateParametersV5PickType {
	return []TournamentV5TournamentCodeUpdateParametersV5PickType{
		TournamentV5TournamentCodeUpdateParametersV5PickTypeBLINDPICK,
		TournamentV5TournamentCodeUpdateParametersV5PickTypeDRAFTMODE,
		TournamentV5TournamentCodeUpdateParametersV5PickTypeALLRANDOM,
		TournamentV5TournamentCodeUpdateParametersV5PickTypeTOURNAMENTDRAFT,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5TournamentCodeUpdateParametersV5PickType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeBLINDPICK:
		return []byte(s), nil
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeDRAFTMODE:
		return []byte(s), nil
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeALLRANDOM:
		return []byte(s), nil
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeTOURNAMENTDRAFT:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5TournamentCodeUpdateParametersV5PickType) UnmarshalText(data []byte) error {
	switch TournamentV5TournamentCodeUpdateParametersV5PickType(data) {
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeBLINDPICK:
		*s = TournamentV5TournamentCodeUpdateParametersV5PickTypeBLINDPICK
		return nil
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeDRAFTMODE:
		*s = TournamentV5TournamentCodeUpdateParametersV5PickTypeDRAFTMODE
		return nil
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeALLRANDOM:
		*s = TournamentV5TournamentCodeUpdateParametersV5PickTypeALLRANDOM
		return nil
	case TournamentV5TournamentCodeUpdateParametersV5PickTypeTOURNAMENTDRAFT:
		*s = TournamentV5TournamentCodeUpdateParametersV5PickTypeTOURNAMENTDRAFT
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// The spectator type
// (Legal values:  NONE,  LOBBYONLY,  ALL).
type TournamentV5TournamentCodeUpdateParametersV5SpectatorType string

const (
	TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeNONE      TournamentV5TournamentCodeUpdateParametersV5SpectatorType = "NONE"
	TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeLOBBYONLY TournamentV5TournamentCodeUpdateParametersV5SpectatorType = "LOBBYONLY"
	TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeALL       TournamentV5TournamentCodeUpdateParametersV5SpectatorType = "ALL"
)

// AllValues returns all TournamentV5TournamentCodeUpdateParametersV5SpectatorType values.
func (TournamentV5TournamentCodeUpdateParametersV5SpectatorType) AllValues() []TournamentV5TournamentCodeUpdateParametersV5SpectatorType {
	return []TournamentV5TournamentCodeUpdateParametersV5SpectatorType{
		TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeNONE,
		TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeLOBBYONLY,
		TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeALL,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5TournamentCodeUpdateParametersV5SpectatorType) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeNONE:
		return []byte(s), nil
	case TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeLOBBYONLY:
		return []byte(s), nil
	case TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeALL:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5TournamentCodeUpdateParametersV5SpectatorType) UnmarshalText(data []byte) error {
	switch TournamentV5TournamentCodeUpdateParametersV5SpectatorType(data) {
	case TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeNONE:
		*s = TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeNONE
		return nil
	case TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeLOBBYONLY:
		*s = TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeLOBBYONLY
		return nil
	case TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeALL:
		*s = TournamentV5TournamentCodeUpdateParametersV5SpectatorTypeALL
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tournament-v5.TournamentCodeV5DTO
type TournamentV5TournamentCodeV5DTO struct {
	// The tournament code's ID.
	ID int32 `json:"id"`
	// The provider's ID.
	ProviderId int32 `json:"providerId"`
	// The tournament's ID.
	TournamentId int32 `json:"tournamentId"`
	// The tournament code.
	Code string `json:"code"`
	// The tournament code's region.
	// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR,  PH,  SG,  TH,
	// TW,  VN).
	Region TournamentV5TournamentCodeV5DTORegion `json:"region"`
	// The game map for the tournament code game.
	Map string `json:"map"`
	// The team size for the tournament code game.
	TeamSize int32 `json:"teamSize"`
	// The spectator mode for the tournament code game.
	Spectators string `json:"spectators"`
	// The pick mode for tournament code game.
	PickType string `json:"pickType"`
	// The lobby name for the tournament code game.
	LobbyName string `json:"lobbyName"`
	// The password for the tournament code game.
	Password string `json:"password"`
	// The metadata for tournament code.
	MetaData string `json:"metaData"`
	// The puuids of the participants (Encrypted).
	Participants []string `json:"participants"`
}

// GetID returns the value of ID.
func (s *TournamentV5TournamentCodeV5DTO) GetID() int32 {
	return s.ID
}

// GetProviderId returns the value of ProviderId.
func (s *TournamentV5TournamentCodeV5DTO) GetProviderId() int32 {
	return s.ProviderId
}

// GetTournamentId returns the value of TournamentId.
func (s *TournamentV5TournamentCodeV5DTO) GetTournamentId() int32 {
	return s.TournamentId
}

// GetCode returns the value of Code.
func (s *TournamentV5TournamentCodeV5DTO) GetCode() string {
	return s.Code
}

// GetRegion returns the value of Region.
func (s *TournamentV5TournamentCodeV5DTO) GetRegion() TournamentV5TournamentCodeV5DTORegion {
	return s.Region
}

// GetMap returns the value of Map.
func (s *TournamentV5TournamentCodeV5DTO) GetMap() string {
	return s.Map
}

// GetTeamSize returns the value of TeamSize.
func (s *TournamentV5TournamentCodeV5DTO) GetTeamSize() int32 {
	return s.TeamSize
}

// GetSpectators returns the value of Spectators.
func (s *TournamentV5TournamentCodeV5DTO) GetSpectators() string {
	return s.Spectators
}

// GetPickType returns the value of PickType.
func (s *TournamentV5TournamentCodeV5DTO) GetPickType() string {
	return s.PickType
}

// GetLobbyName returns the value of LobbyName.
func (s *TournamentV5TournamentCodeV5DTO) GetLobbyName() string {
	return s.LobbyName
}

// GetPassword returns the value of Password.
func (s *TournamentV5TournamentCodeV5DTO) GetPassword() string {
	return s.Password
}

// GetMetaData returns the value of MetaData.
func (s *TournamentV5TournamentCodeV5DTO) GetMetaData() string {
	return s.MetaData
}

// GetParticipants returns the value of Participants.
func (s *TournamentV5TournamentCodeV5DTO) GetParticipants() []string {
	return s.Participants
}

// SetID sets the value of ID.
func (s *TournamentV5TournamentCodeV5DTO) SetID(val int32) {
	s.ID = val
}

// SetProviderId sets the value of ProviderId.
func (s *TournamentV5TournamentCodeV5DTO) SetProviderId(val int32) {
	s.ProviderId = val
}

// SetTournamentId sets the value of TournamentId.
func (s *TournamentV5TournamentCodeV5DTO) SetTournamentId(val int32) {
	s.TournamentId = val
}

// SetCode sets the value of Code.
func (s *TournamentV5TournamentCodeV5DTO) SetCode(val string) {
	s.Code = val
}

// SetRegion sets the value of Region.
func (s *TournamentV5TournamentCodeV5DTO) SetRegion(val TournamentV5TournamentCodeV5DTORegion) {
	s.Region = val
}

// SetMap sets the value of Map.
func (s *TournamentV5TournamentCodeV5DTO) SetMap(val string) {
	s.Map = val
}

// SetTeamSize sets the value of TeamSize.
func (s *TournamentV5TournamentCodeV5DTO) SetTeamSize(val int32) {
	s.TeamSize = val
}

// SetSpectators sets the value of Spectators.
func (s *TournamentV5TournamentCodeV5DTO) SetSpectators(val string) {
	s.Spectators = val
}

// SetPickType sets the value of PickType.
func (s *TournamentV5TournamentCodeV5DTO) SetPickType(val string) {
	s.PickType = val
}

// SetLobbyName sets the value of LobbyName.
func (s *TournamentV5TournamentCodeV5DTO) SetLobbyName(val string) {
	s.LobbyName = val
}

// SetPassword sets the value of Password.
func (s *TournamentV5TournamentCodeV5DTO) SetPassword(val string) {
	s.Password = val
}

// SetMetaData sets the value of MetaData.
func (s *TournamentV5TournamentCodeV5DTO) SetMetaData(val string) {
	s.MetaData = val
}

// SetParticipants sets the value of Participants.
func (s *TournamentV5TournamentCodeV5DTO) SetParticipants(val []string) {
	s.Participants = val
}

func (*TournamentV5TournamentCodeV5DTO) tournamentV5GetTournamentCodeRes() {}

// The tournament code's region.
// (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR,  PH,  SG,  TH,
// TW,  VN).
type TournamentV5TournamentCodeV5DTORegion string

const (
	TournamentV5TournamentCodeV5DTORegionBR   TournamentV5TournamentCodeV5DTORegion = "BR"
	TournamentV5TournamentCodeV5DTORegionEUNE TournamentV5TournamentCodeV5DTORegion = "EUNE"
	TournamentV5TournamentCodeV5DTORegionEUW  TournamentV5TournamentCodeV5DTORegion = "EUW"
	TournamentV5TournamentCodeV5DTORegionJP   TournamentV5TournamentCodeV5DTORegion = "JP"
	TournamentV5TournamentCodeV5DTORegionLAN  TournamentV5TournamentCodeV5DTORegion = "LAN"
	TournamentV5TournamentCodeV5DTORegionLAS  TournamentV5TournamentCodeV5DTORegion = "LAS"
	TournamentV5TournamentCodeV5DTORegionNA   TournamentV5TournamentCodeV5DTORegion = "NA"
	TournamentV5TournamentCodeV5DTORegionOCE  TournamentV5TournamentCodeV5DTORegion = "OCE"
	TournamentV5TournamentCodeV5DTORegionPBE  TournamentV5TournamentCodeV5DTORegion = "PBE"
	TournamentV5TournamentCodeV5DTORegionRU   TournamentV5TournamentCodeV5DTORegion = "RU"
	TournamentV5TournamentCodeV5DTORegionTR   TournamentV5TournamentCodeV5DTORegion = "TR"
	TournamentV5TournamentCodeV5DTORegionKR   TournamentV5TournamentCodeV5DTORegion = "KR"
	TournamentV5TournamentCodeV5DTORegionPH   TournamentV5TournamentCodeV5DTORegion = "PH"
	TournamentV5TournamentCodeV5DTORegionSG   TournamentV5TournamentCodeV5DTORegion = "SG"
	TournamentV5TournamentCodeV5DTORegionTH   TournamentV5TournamentCodeV5DTORegion = "TH"
	TournamentV5TournamentCodeV5DTORegionTW   TournamentV5TournamentCodeV5DTORegion = "TW"
	TournamentV5TournamentCodeV5DTORegionVN   TournamentV5TournamentCodeV5DTORegion = "VN"
)

// AllValues returns all TournamentV5TournamentCodeV5DTORegion values.
func (TournamentV5TournamentCodeV5DTORegion) AllValues() []TournamentV5TournamentCodeV5DTORegion {
	return []TournamentV5TournamentCodeV5DTORegion{
		TournamentV5TournamentCodeV5DTORegionBR,
		TournamentV5TournamentCodeV5DTORegionEUNE,
		TournamentV5TournamentCodeV5DTORegionEUW,
		TournamentV5TournamentCodeV5DTORegionJP,
		TournamentV5TournamentCodeV5DTORegionLAN,
		TournamentV5TournamentCodeV5DTORegionLAS,
		TournamentV5TournamentCodeV5DTORegionNA,
		TournamentV5TournamentCodeV5DTORegionOCE,
		TournamentV5TournamentCodeV5DTORegionPBE,
		TournamentV5TournamentCodeV5DTORegionRU,
		TournamentV5TournamentCodeV5DTORegionTR,
		TournamentV5TournamentCodeV5DTORegionKR,
		TournamentV5TournamentCodeV5DTORegionPH,
		TournamentV5TournamentCodeV5DTORegionSG,
		TournamentV5TournamentCodeV5DTORegionTH,
		TournamentV5TournamentCodeV5DTORegionTW,
		TournamentV5TournamentCodeV5DTORegionVN,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s TournamentV5TournamentCodeV5DTORegion) MarshalText() ([]byte, error) {
	switch s {
	case TournamentV5TournamentCodeV5DTORegionBR:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionEUNE:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionEUW:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionJP:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionLAN:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionLAS:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionNA:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionOCE:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionPBE:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionRU:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionTR:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionKR:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionPH:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionSG:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionTH:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionTW:
		return []byte(s), nil
	case TournamentV5TournamentCodeV5DTORegionVN:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *TournamentV5TournamentCodeV5DTORegion) UnmarshalText(data []byte) error {
	switch TournamentV5TournamentCodeV5DTORegion(data) {
	case TournamentV5TournamentCodeV5DTORegionBR:
		*s = TournamentV5TournamentCodeV5DTORegionBR
		return nil
	case TournamentV5TournamentCodeV5DTORegionEUNE:
		*s = TournamentV5TournamentCodeV5DTORegionEUNE
		return nil
	case TournamentV5TournamentCodeV5DTORegionEUW:
		*s = TournamentV5TournamentCodeV5DTORegionEUW
		return nil
	case TournamentV5TournamentCodeV5DTORegionJP:
		*s = TournamentV5TournamentCodeV5DTORegionJP
		return nil
	case TournamentV5TournamentCodeV5DTORegionLAN:
		*s = TournamentV5TournamentCodeV5DTORegionLAN
		return nil
	case TournamentV5TournamentCodeV5DTORegionLAS:
		*s = TournamentV5TournamentCodeV5DTORegionLAS
		return nil
	case TournamentV5TournamentCodeV5DTORegionNA:
		*s = TournamentV5TournamentCodeV5DTORegionNA
		return nil
	case TournamentV5TournamentCodeV5DTORegionOCE:
		*s = TournamentV5TournamentCodeV5DTORegionOCE
		return nil
	case TournamentV5TournamentCodeV5DTORegionPBE:
		*s = TournamentV5TournamentCodeV5DTORegionPBE
		return nil
	case TournamentV5TournamentCodeV5DTORegionRU:
		*s = TournamentV5TournamentCodeV5DTORegionRU
		return nil
	case TournamentV5TournamentCodeV5DTORegionTR:
		*s = TournamentV5TournamentCodeV5DTORegionTR
		return nil
	case TournamentV5TournamentCodeV5DTORegionKR:
		*s = TournamentV5TournamentCodeV5DTORegionKR
		return nil
	case TournamentV5TournamentCodeV5DTORegionPH:
		*s = TournamentV5TournamentCodeV5DTORegionPH
		return nil
	case TournamentV5TournamentCodeV5DTORegionSG:
		*s = TournamentV5TournamentCodeV5DTORegionSG
		return nil
	case TournamentV5TournamentCodeV5DTORegionTH:
		*s = TournamentV5TournamentCodeV5DTORegionTH
		return nil
	case TournamentV5TournamentCodeV5DTORegionTW:
		*s = TournamentV5TournamentCodeV5DTORegionTW
		return nil
	case TournamentV5TournamentCodeV5DTORegionVN:
		*s = TournamentV5TournamentCodeV5DTORegionVN
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/tournament-v5.TournamentGamesV5
type TournamentV5TournamentGamesV5 struct {
	StartTime   int64                          `json:"startTime"`
	WinningTeam []TournamentV5TournamentTeamV5 `json:"winningTeam"`
	LosingTeam  []TournamentV5TournamentTeamV5 `json:"losingTeam"`
	// Tournament Code.
	ShortCode string `json:"shortCode"`
	// Metadata for the TournamentCode.
	MetaData OptString `json:"metaData"`
	GameId   int64     `json:"gameId"`
	GameName string    `json:"gameName"`
	GameType string    `json:"gameType"`
	// Game Map ID.
	GameMap  int32  `json:"gameMap"`
	GameMode string `json:"gameMode"`
	// Region of the game.
	Region string `json:"region"`
}

// GetStartTime returns the value of StartTime.
func (s *TournamentV5TournamentGamesV5) GetStartTime() int64 {
	return s.StartTime
}

// GetWinningTeam returns the value of WinningTeam.
func (s *TournamentV5TournamentGamesV5) GetWinningTeam() []TournamentV5TournamentTeamV5 {
	return s.WinningTeam
}

// GetLosingTeam returns the value of LosingTeam.
func (s *TournamentV5TournamentGamesV5) GetLosingTeam() []TournamentV5TournamentTeamV5 {
	return s.LosingTeam
}

// GetShortCode returns the value of ShortCode.
func (s *TournamentV5TournamentGamesV5) GetShortCode() string {
	return s.ShortCode
}

// GetMetaData returns the value of MetaData.
func (s *TournamentV5TournamentGamesV5) GetMetaData() OptString {
	return s.MetaData
}

// GetGameId returns the value of GameId.
func (s *TournamentV5TournamentGamesV5) GetGameId() int64 {
	return s.GameId
}

// GetGameName returns the value of GameName.
func (s *TournamentV5TournamentGamesV5) GetGameName() string {
	return s.GameName
}

// GetGameType returns the value of GameType.
func (s *TournamentV5TournamentGamesV5) GetGameType() string {
	return s.GameType
}

// GetGameMap returns the value of GameMap.
func (s *TournamentV5TournamentGamesV5) GetGameMap() int32 {
	return s.GameMap
}

// GetGameMode returns the value of GameMode.
func (s *TournamentV5TournamentGamesV5) GetGameMode() string {
	return s.GameMode
}

// GetRegion returns the value of Region.
func (s *TournamentV5TournamentGamesV5) GetRegion() string {
	return s.Region
}

// SetStartTime sets the value of StartTime.
func (s *TournamentV5TournamentGamesV5) SetStartTime(val int64) {
	s.StartTime = val
}

// SetWinningTeam sets the value of WinningTeam.
func (s *TournamentV5TournamentGamesV5) SetWinningTeam(val []TournamentV5TournamentTeamV5) {
	s.WinningTeam = val
}

// SetLosingTeam sets the value of LosingTeam.
func (s *TournamentV5TournamentGamesV5) SetLosingTeam(val []TournamentV5TournamentTeamV5) {
	s.LosingTeam = val
}

// SetShortCode sets the value of ShortCode.
func (s *TournamentV5TournamentGamesV5) SetShortCode(val string) {
	s.ShortCode = val
}

// SetMetaData sets the value of MetaData.
func (s *TournamentV5TournamentGamesV5) SetMetaData(val OptString) {
	s.MetaData = val
}

// SetGameId sets the value of GameId.
func (s *TournamentV5TournamentGamesV5) SetGameId(val int64) {
	s.GameId = val
}

// SetGameName sets the value of GameName.
func (s *TournamentV5TournamentGamesV5) SetGameName(val string) {
	s.GameName = val
}

// SetGameType sets the value of GameType.
func (s *TournamentV5TournamentGamesV5) SetGameType(val string) {
	s.GameType = val
}

// SetGameMap sets the value of GameMap.
func (s *TournamentV5TournamentGamesV5) SetGameMap(val int32) {
	s.GameMap = val
}

// SetGameMode sets the value of GameMode.
func (s *TournamentV5TournamentGamesV5) SetGameMode(val string) {
	s.GameMode = val
}

// SetRegion sets the value of Region.
func (s *TournamentV5TournamentGamesV5) SetRegion(val string) {
	s.Region = val
}

// Ref: #/components/schemas/tournament-v5.TournamentRegistrationParametersV5
type TournamentV5TournamentRegistrationParametersV5 struct {
	// The provider ID to specify the regional registered provider data to associate this tournament.
	ProviderId int32 `json:"providerId"`
	// The optional name of the tournament.
	Name OptString `json:"name"`
}

// GetProviderId returns the value of ProviderId.
func (s *TournamentV5TournamentRegistrationParametersV5) GetProviderId() int32 {
	return s.ProviderId
}

// GetName returns the value of Name.
func (s *TournamentV5TournamentRegistrationParametersV5) GetName() OptString {
	return s.Name
}

// SetProviderId sets the value of ProviderId.
func (s *TournamentV5TournamentRegistrationParametersV5) SetProviderId(val int32) {
	s.ProviderId = val
}

// SetName sets the value of Name.
func (s *TournamentV5TournamentRegistrationParametersV5) SetName(val OptString) {
	s.Name = val
}

// Ref: #/components/schemas/tournament-v5.TournamentTeamV5
type TournamentV5TournamentTeamV5 struct {
	// Player Unique UUID (Encrypted).
	Puuid string `json:"puuid"`
}

// GetPuuid returns the value of Puuid.
func (s *TournamentV5TournamentTeamV5) GetPuuid() string {
	return s.Puuid
}

// SetPuuid sets the value of Puuid.
func (s *TournamentV5TournamentTeamV5) SetPuuid(val string) {
	s.Puuid = val
}

// TournamentV5UpdateCodeBadGateway is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeBadGateway struct{}

func (*TournamentV5UpdateCodeBadGateway) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeBadRequest is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeBadRequest struct{}

func (*TournamentV5UpdateCodeBadRequest) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeForbidden is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeForbidden struct{}

func (*TournamentV5UpdateCodeForbidden) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeGatewayTimeout is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeGatewayTimeout struct{}

func (*TournamentV5UpdateCodeGatewayTimeout) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeInternalServerError is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeInternalServerError struct{}

func (*TournamentV5UpdateCodeInternalServerError) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeMethodNotAllowed is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeMethodNotAllowed struct{}

func (*TournamentV5UpdateCodeMethodNotAllowed) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeNotFound is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeNotFound struct{}

func (*TournamentV5UpdateCodeNotFound) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeOK is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeOK struct{}

func (*TournamentV5UpdateCodeOK) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeServiceUnavailable is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeServiceUnavailable struct{}

func (*TournamentV5UpdateCodeServiceUnavailable) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeTooManyRequests is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeTooManyRequests struct{}

func (*TournamentV5UpdateCodeTooManyRequests) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeUnauthorized is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeUnauthorized struct{}

func (*TournamentV5UpdateCodeUnauthorized) tournamentV5UpdateCodeRes() {}

// TournamentV5UpdateCodeUnsupportedMediaType is response for TournamentV5UpdateCode operation.
type TournamentV5UpdateCodeUnsupportedMediaType struct{}

func (*TournamentV5UpdateCodeUnsupportedMediaType) tournamentV5UpdateCodeRes() {}

// Ref: #/components/schemas/val-console-match-v1.AbilityCastsDto
type ValConsoleMatchV1AbilityCastsDto struct {
	GrenadeCasts  int32 `json:"grenadeCasts"`
	Ability1Casts int32 `json:"ability1Casts"`
	Ability2Casts int32 `json:"ability2Casts"`
	UltimateCasts int32 `json:"ultimateCasts"`
}

// GetGrenadeCasts returns the value of GrenadeCasts.
func (s *ValConsoleMatchV1AbilityCastsDto) GetGrenadeCasts() int32 {
	return s.GrenadeCasts
}

// GetAbility1Casts returns the value of Ability1Casts.
func (s *ValConsoleMatchV1AbilityCastsDto) GetAbility1Casts() int32 {
	return s.Ability1Casts
}

// GetAbility2Casts returns the value of Ability2Casts.
func (s *ValConsoleMatchV1AbilityCastsDto) GetAbility2Casts() int32 {
	return s.Ability2Casts
}

// GetUltimateCasts returns the value of UltimateCasts.
func (s *ValConsoleMatchV1AbilityCastsDto) GetUltimateCasts() int32 {
	return s.UltimateCasts
}

// SetGrenadeCasts sets the value of GrenadeCasts.
func (s *ValConsoleMatchV1AbilityCastsDto) SetGrenadeCasts(val int32) {
	s.GrenadeCasts = val
}

// SetAbility1Casts sets the value of Ability1Casts.
func (s *ValConsoleMatchV1AbilityCastsDto) SetAbility1Casts(val int32) {
	s.Ability1Casts = val
}

// SetAbility2Casts sets the value of Ability2Casts.
func (s *ValConsoleMatchV1AbilityCastsDto) SetAbility2Casts(val int32) {
	s.Ability2Casts = val
}

// SetUltimateCasts sets the value of UltimateCasts.
func (s *ValConsoleMatchV1AbilityCastsDto) SetUltimateCasts(val int32) {
	s.UltimateCasts = val
}

// Ref: #/components/schemas/val-console-match-v1.AbilityDto
type ValConsoleMatchV1AbilityDto struct {
	GrenadeEffects  OptString `json:"grenadeEffects"`
	Ability1Effects OptString `json:"ability1Effects"`
	Ability2Effects OptString `json:"ability2Effects"`
	UltimateEffects OptString `json:"ultimateEffects"`
}

// GetGrenadeEffects returns the value of GrenadeEffects.
func (s *ValConsoleMatchV1AbilityDto) GetGrenadeEffects() OptString {
	return s.GrenadeEffects
}

// GetAbility1Effects returns the value of Ability1Effects.
func (s *ValConsoleMatchV1AbilityDto) GetAbility1Effects() OptString {
	return s.Ability1Effects
}

// GetAbility2Effects returns the value of Ability2Effects.
func (s *ValConsoleMatchV1AbilityDto) GetAbility2Effects() OptString {
	return s.Ability2Effects
}

// GetUltimateEffects returns the value of UltimateEffects.
func (s *ValConsoleMatchV1AbilityDto) GetUltimateEffects() OptString {
	return s.UltimateEffects
}

// SetGrenadeEffects sets the value of GrenadeEffects.
func (s *ValConsoleMatchV1AbilityDto) SetGrenadeEffects(val OptString) {
	s.GrenadeEffects = val
}

// SetAbility1Effects sets the value of Ability1Effects.
func (s *ValConsoleMatchV1AbilityDto) SetAbility1Effects(val OptString) {
	s.Ability1Effects = val
}

// SetAbility2Effects sets the value of Ability2Effects.
func (s *ValConsoleMatchV1AbilityDto) SetAbility2Effects(val OptString) {
	s.Ability2Effects = val
}

// SetUltimateEffects sets the value of UltimateEffects.
func (s *ValConsoleMatchV1AbilityDto) SetUltimateEffects(val OptString) {
	s.UltimateEffects = val
}

// Ref: #/components/schemas/val-console-match-v1.CoachDto
type ValConsoleMatchV1CoachDto struct {
	Puuid  string `json:"puuid"`
	TeamId string `json:"teamId"`
}

// GetPuuid returns the value of Puuid.
func (s *ValConsoleMatchV1CoachDto) GetPuuid() string {
	return s.Puuid
}

// GetTeamId returns the value of TeamId.
func (s *ValConsoleMatchV1CoachDto) GetTeamId() string {
	return s.TeamId
}

// SetPuuid sets the value of Puuid.
func (s *ValConsoleMatchV1CoachDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetTeamId sets the value of TeamId.
func (s *ValConsoleMatchV1CoachDto) SetTeamId(val string) {
	s.TeamId = val
}

// Ref: #/components/schemas/val-console-match-v1.DamageDto
type ValConsoleMatchV1DamageDto struct {
	// PUUID.
	Receiver  string `json:"receiver"`
	Damage    int32  `json:"damage"`
	Legshots  int32  `json:"legshots"`
	Bodyshots int32  `json:"bodyshots"`
	Headshots int32  `json:"headshots"`
}

// GetReceiver returns the value of Receiver.
func (s *ValConsoleMatchV1DamageDto) GetReceiver() string {
	return s.Receiver
}

// GetDamage returns the value of Damage.
func (s *ValConsoleMatchV1DamageDto) GetDamage() int32 {
	return s.Damage
}

// GetLegshots returns the value of Legshots.
func (s *ValConsoleMatchV1DamageDto) GetLegshots() int32 {
	return s.Legshots
}

// GetBodyshots returns the value of Bodyshots.
func (s *ValConsoleMatchV1DamageDto) GetBodyshots() int32 {
	return s.Bodyshots
}

// GetHeadshots returns the value of Headshots.
func (s *ValConsoleMatchV1DamageDto) GetHeadshots() int32 {
	return s.Headshots
}

// SetReceiver sets the value of Receiver.
func (s *ValConsoleMatchV1DamageDto) SetReceiver(val string) {
	s.Receiver = val
}

// SetDamage sets the value of Damage.
func (s *ValConsoleMatchV1DamageDto) SetDamage(val int32) {
	s.Damage = val
}

// SetLegshots sets the value of Legshots.
func (s *ValConsoleMatchV1DamageDto) SetLegshots(val int32) {
	s.Legshots = val
}

// SetBodyshots sets the value of Bodyshots.
func (s *ValConsoleMatchV1DamageDto) SetBodyshots(val int32) {
	s.Bodyshots = val
}

// SetHeadshots sets the value of Headshots.
func (s *ValConsoleMatchV1DamageDto) SetHeadshots(val int32) {
	s.Headshots = val
}

// Ref: #/components/schemas/val-console-match-v1.EconomyDto
type ValConsoleMatchV1EconomyDto struct {
	LoadoutValue int32  `json:"loadoutValue"`
	Weapon       string `json:"weapon"`
	Armor        string `json:"armor"`
	Remaining    int32  `json:"remaining"`
	Spent        int32  `json:"spent"`
}

// GetLoadoutValue returns the value of LoadoutValue.
func (s *ValConsoleMatchV1EconomyDto) GetLoadoutValue() int32 {
	return s.LoadoutValue
}

// GetWeapon returns the value of Weapon.
func (s *ValConsoleMatchV1EconomyDto) GetWeapon() string {
	return s.Weapon
}

// GetArmor returns the value of Armor.
func (s *ValConsoleMatchV1EconomyDto) GetArmor() string {
	return s.Armor
}

// GetRemaining returns the value of Remaining.
func (s *ValConsoleMatchV1EconomyDto) GetRemaining() int32 {
	return s.Remaining
}

// GetSpent returns the value of Spent.
func (s *ValConsoleMatchV1EconomyDto) GetSpent() int32 {
	return s.Spent
}

// SetLoadoutValue sets the value of LoadoutValue.
func (s *ValConsoleMatchV1EconomyDto) SetLoadoutValue(val int32) {
	s.LoadoutValue = val
}

// SetWeapon sets the value of Weapon.
func (s *ValConsoleMatchV1EconomyDto) SetWeapon(val string) {
	s.Weapon = val
}

// SetArmor sets the value of Armor.
func (s *ValConsoleMatchV1EconomyDto) SetArmor(val string) {
	s.Armor = val
}

// SetRemaining sets the value of Remaining.
func (s *ValConsoleMatchV1EconomyDto) SetRemaining(val int32) {
	s.Remaining = val
}

// SetSpent sets the value of Spent.
func (s *ValConsoleMatchV1EconomyDto) SetSpent(val int32) {
	s.Spent = val
}

// Ref: #/components/schemas/val-console-match-v1.FinishingDamageDto
type ValConsoleMatchV1FinishingDamageDto struct {
	DamageType          string `json:"damageType"`
	DamageItem          string `json:"damageItem"`
	IsSecondaryFireMode bool   `json:"isSecondaryFireMode"`
}

// GetDamageType returns the value of DamageType.
func (s *ValConsoleMatchV1FinishingDamageDto) GetDamageType() string {
	return s.DamageType
}

// GetDamageItem returns the value of DamageItem.
func (s *ValConsoleMatchV1FinishingDamageDto) GetDamageItem() string {
	return s.DamageItem
}

// GetIsSecondaryFireMode returns the value of IsSecondaryFireMode.
func (s *ValConsoleMatchV1FinishingDamageDto) GetIsSecondaryFireMode() bool {
	return s.IsSecondaryFireMode
}

// SetDamageType sets the value of DamageType.
func (s *ValConsoleMatchV1FinishingDamageDto) SetDamageType(val string) {
	s.DamageType = val
}

// SetDamageItem sets the value of DamageItem.
func (s *ValConsoleMatchV1FinishingDamageDto) SetDamageItem(val string) {
	s.DamageItem = val
}

// SetIsSecondaryFireMode sets the value of IsSecondaryFireMode.
func (s *ValConsoleMatchV1FinishingDamageDto) SetIsSecondaryFireMode(val bool) {
	s.IsSecondaryFireMode = val
}

// ValConsoleMatchV1GetMatchBadGateway is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchBadGateway struct{}

func (*ValConsoleMatchV1GetMatchBadGateway) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchBadRequest is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchBadRequest struct{}

func (*ValConsoleMatchV1GetMatchBadRequest) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchForbidden is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchForbidden struct{}

func (*ValConsoleMatchV1GetMatchForbidden) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchGatewayTimeout is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchGatewayTimeout struct{}

func (*ValConsoleMatchV1GetMatchGatewayTimeout) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchInternalServerError is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchInternalServerError struct{}

func (*ValConsoleMatchV1GetMatchInternalServerError) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchMethodNotAllowed is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchMethodNotAllowed struct{}

func (*ValConsoleMatchV1GetMatchMethodNotAllowed) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchNotFound is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchNotFound struct{}

func (*ValConsoleMatchV1GetMatchNotFound) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchServiceUnavailable is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchServiceUnavailable struct{}

func (*ValConsoleMatchV1GetMatchServiceUnavailable) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchTooManyRequests is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchTooManyRequests struct{}

func (*ValConsoleMatchV1GetMatchTooManyRequests) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchUnauthorized is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchUnauthorized struct{}

func (*ValConsoleMatchV1GetMatchUnauthorized) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchUnsupportedMediaType is response for ValConsoleMatchV1GetMatch operation.
type ValConsoleMatchV1GetMatchUnsupportedMediaType struct{}

func (*ValConsoleMatchV1GetMatchUnsupportedMediaType) valConsoleMatchV1GetMatchRes() {}

// ValConsoleMatchV1GetMatchlistBadGateway is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistBadGateway struct{}

func (*ValConsoleMatchV1GetMatchlistBadGateway) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistBadRequest is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistBadRequest struct{}

func (*ValConsoleMatchV1GetMatchlistBadRequest) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistForbidden is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistForbidden struct{}

func (*ValConsoleMatchV1GetMatchlistForbidden) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistGatewayTimeout is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistGatewayTimeout struct{}

func (*ValConsoleMatchV1GetMatchlistGatewayTimeout) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistInternalServerError is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistInternalServerError struct{}

func (*ValConsoleMatchV1GetMatchlistInternalServerError) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistMethodNotAllowed is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistMethodNotAllowed struct{}

func (*ValConsoleMatchV1GetMatchlistMethodNotAllowed) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistNotFound is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistNotFound struct{}

func (*ValConsoleMatchV1GetMatchlistNotFound) valConsoleMatchV1GetMatchlistRes() {}

type ValConsoleMatchV1GetMatchlistPlatformType string

const (
	ValConsoleMatchV1GetMatchlistPlatformTypePlaystation ValConsoleMatchV1GetMatchlistPlatformType = "playstation"
	ValConsoleMatchV1GetMatchlistPlatformTypeXbox        ValConsoleMatchV1GetMatchlistPlatformType = "xbox"
)

// AllValues returns all ValConsoleMatchV1GetMatchlistPlatformType values.
func (ValConsoleMatchV1GetMatchlistPlatformType) AllValues() []ValConsoleMatchV1GetMatchlistPlatformType {
	return []ValConsoleMatchV1GetMatchlistPlatformType{
		ValConsoleMatchV1GetMatchlistPlatformTypePlaystation,
		ValConsoleMatchV1GetMatchlistPlatformTypeXbox,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValConsoleMatchV1GetMatchlistPlatformType) MarshalText() ([]byte, error) {
	switch s {
	case ValConsoleMatchV1GetMatchlistPlatformTypePlaystation:
		return []byte(s), nil
	case ValConsoleMatchV1GetMatchlistPlatformTypeXbox:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValConsoleMatchV1GetMatchlistPlatformType) UnmarshalText(data []byte) error {
	switch ValConsoleMatchV1GetMatchlistPlatformType(data) {
	case ValConsoleMatchV1GetMatchlistPlatformTypePlaystation:
		*s = ValConsoleMatchV1GetMatchlistPlatformTypePlaystation
		return nil
	case ValConsoleMatchV1GetMatchlistPlatformTypeXbox:
		*s = ValConsoleMatchV1GetMatchlistPlatformTypeXbox
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ValConsoleMatchV1GetMatchlistServiceUnavailable is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistServiceUnavailable struct{}

func (*ValConsoleMatchV1GetMatchlistServiceUnavailable) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistTooManyRequests is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistTooManyRequests struct{}

func (*ValConsoleMatchV1GetMatchlistTooManyRequests) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistUnauthorized is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistUnauthorized struct{}

func (*ValConsoleMatchV1GetMatchlistUnauthorized) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetMatchlistUnsupportedMediaType is response for ValConsoleMatchV1GetMatchlist operation.
type ValConsoleMatchV1GetMatchlistUnsupportedMediaType struct{}

func (*ValConsoleMatchV1GetMatchlistUnsupportedMediaType) valConsoleMatchV1GetMatchlistRes() {}

// ValConsoleMatchV1GetRecentBadGateway is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentBadGateway struct{}

func (*ValConsoleMatchV1GetRecentBadGateway) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentBadRequest is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentBadRequest struct{}

func (*ValConsoleMatchV1GetRecentBadRequest) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentForbidden is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentForbidden struct{}

func (*ValConsoleMatchV1GetRecentForbidden) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentGatewayTimeout is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentGatewayTimeout struct{}

func (*ValConsoleMatchV1GetRecentGatewayTimeout) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentInternalServerError is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentInternalServerError struct{}

func (*ValConsoleMatchV1GetRecentInternalServerError) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentMethodNotAllowed is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentMethodNotAllowed struct{}

func (*ValConsoleMatchV1GetRecentMethodNotAllowed) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentNotFound is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentNotFound struct{}

func (*ValConsoleMatchV1GetRecentNotFound) valConsoleMatchV1GetRecentRes() {}

type ValConsoleMatchV1GetRecentQueue string

const (
	ValConsoleMatchV1GetRecentQueueConsoleUnrated     ValConsoleMatchV1GetRecentQueue = "console_unrated"
	ValConsoleMatchV1GetRecentQueueConsoleSwiftplay   ValConsoleMatchV1GetRecentQueue = "console_swiftplay"
	ValConsoleMatchV1GetRecentQueueConsoleHurm        ValConsoleMatchV1GetRecentQueue = "console_hurm"
	ValConsoleMatchV1GetRecentQueueConsoleDeathmatch  ValConsoleMatchV1GetRecentQueue = "console_deathmatch"
	ValConsoleMatchV1GetRecentQueueConsoleCompetitive ValConsoleMatchV1GetRecentQueue = "console_competitive"
)

// AllValues returns all ValConsoleMatchV1GetRecentQueue values.
func (ValConsoleMatchV1GetRecentQueue) AllValues() []ValConsoleMatchV1GetRecentQueue {
	return []ValConsoleMatchV1GetRecentQueue{
		ValConsoleMatchV1GetRecentQueueConsoleUnrated,
		ValConsoleMatchV1GetRecentQueueConsoleSwiftplay,
		ValConsoleMatchV1GetRecentQueueConsoleHurm,
		ValConsoleMatchV1GetRecentQueueConsoleDeathmatch,
		ValConsoleMatchV1GetRecentQueueConsoleCompetitive,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValConsoleMatchV1GetRecentQueue) MarshalText() ([]byte, error) {
	switch s {
	case ValConsoleMatchV1GetRecentQueueConsoleUnrated:
		return []byte(s), nil
	case ValConsoleMatchV1GetRecentQueueConsoleSwiftplay:
		return []byte(s), nil
	case ValConsoleMatchV1GetRecentQueueConsoleHurm:
		return []byte(s), nil
	case ValConsoleMatchV1GetRecentQueueConsoleDeathmatch:
		return []byte(s), nil
	case ValConsoleMatchV1GetRecentQueueConsoleCompetitive:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValConsoleMatchV1GetRecentQueue) UnmarshalText(data []byte) error {
	switch ValConsoleMatchV1GetRecentQueue(data) {
	case ValConsoleMatchV1GetRecentQueueConsoleUnrated:
		*s = ValConsoleMatchV1GetRecentQueueConsoleUnrated
		return nil
	case ValConsoleMatchV1GetRecentQueueConsoleSwiftplay:
		*s = ValConsoleMatchV1GetRecentQueueConsoleSwiftplay
		return nil
	case ValConsoleMatchV1GetRecentQueueConsoleHurm:
		*s = ValConsoleMatchV1GetRecentQueueConsoleHurm
		return nil
	case ValConsoleMatchV1GetRecentQueueConsoleDeathmatch:
		*s = ValConsoleMatchV1GetRecentQueueConsoleDeathmatch
		return nil
	case ValConsoleMatchV1GetRecentQueueConsoleCompetitive:
		*s = ValConsoleMatchV1GetRecentQueueConsoleCompetitive
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ValConsoleMatchV1GetRecentServiceUnavailable is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentServiceUnavailable struct{}

func (*ValConsoleMatchV1GetRecentServiceUnavailable) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentTooManyRequests is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentTooManyRequests struct{}

func (*ValConsoleMatchV1GetRecentTooManyRequests) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentUnauthorized is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentUnauthorized struct{}

func (*ValConsoleMatchV1GetRecentUnauthorized) valConsoleMatchV1GetRecentRes() {}

// ValConsoleMatchV1GetRecentUnsupportedMediaType is response for ValConsoleMatchV1GetRecent operation.
type ValConsoleMatchV1GetRecentUnsupportedMediaType struct{}

func (*ValConsoleMatchV1GetRecentUnsupportedMediaType) valConsoleMatchV1GetRecentRes() {}

// Ref: #/components/schemas/val-console-match-v1.KillDto
type ValConsoleMatchV1KillDto struct {
	TimeSinceGameStartMillis  int32 `json:"timeSinceGameStartMillis"`
	TimeSinceRoundStartMillis int32 `json:"timeSinceRoundStartMillis"`
	// PUUID.
	Killer string `json:"killer"`
	// PUUID.
	Victim         string                       `json:"victim"`
	VictimLocation ValConsoleMatchV1LocationDto `json:"victimLocation"`
	// List of PUUIDs.
	Assistants      []string                              `json:"assistants"`
	PlayerLocations []ValConsoleMatchV1PlayerLocationsDto `json:"playerLocations"`
	FinishingDamage ValConsoleMatchV1FinishingDamageDto   `json:"finishingDamage"`
}

// GetTimeSinceGameStartMillis returns the value of TimeSinceGameStartMillis.
func (s *ValConsoleMatchV1KillDto) GetTimeSinceGameStartMillis() int32 {
	return s.TimeSinceGameStartMillis
}

// GetTimeSinceRoundStartMillis returns the value of TimeSinceRoundStartMillis.
func (s *ValConsoleMatchV1KillDto) GetTimeSinceRoundStartMillis() int32 {
	return s.TimeSinceRoundStartMillis
}

// GetKiller returns the value of Killer.
func (s *ValConsoleMatchV1KillDto) GetKiller() string {
	return s.Killer
}

// GetVictim returns the value of Victim.
func (s *ValConsoleMatchV1KillDto) GetVictim() string {
	return s.Victim
}

// GetVictimLocation returns the value of VictimLocation.
func (s *ValConsoleMatchV1KillDto) GetVictimLocation() ValConsoleMatchV1LocationDto {
	return s.VictimLocation
}

// GetAssistants returns the value of Assistants.
func (s *ValConsoleMatchV1KillDto) GetAssistants() []string {
	return s.Assistants
}

// GetPlayerLocations returns the value of PlayerLocations.
func (s *ValConsoleMatchV1KillDto) GetPlayerLocations() []ValConsoleMatchV1PlayerLocationsDto {
	return s.PlayerLocations
}

// GetFinishingDamage returns the value of FinishingDamage.
func (s *ValConsoleMatchV1KillDto) GetFinishingDamage() ValConsoleMatchV1FinishingDamageDto {
	return s.FinishingDamage
}

// SetTimeSinceGameStartMillis sets the value of TimeSinceGameStartMillis.
func (s *ValConsoleMatchV1KillDto) SetTimeSinceGameStartMillis(val int32) {
	s.TimeSinceGameStartMillis = val
}

// SetTimeSinceRoundStartMillis sets the value of TimeSinceRoundStartMillis.
func (s *ValConsoleMatchV1KillDto) SetTimeSinceRoundStartMillis(val int32) {
	s.TimeSinceRoundStartMillis = val
}

// SetKiller sets the value of Killer.
func (s *ValConsoleMatchV1KillDto) SetKiller(val string) {
	s.Killer = val
}

// SetVictim sets the value of Victim.
func (s *ValConsoleMatchV1KillDto) SetVictim(val string) {
	s.Victim = val
}

// SetVictimLocation sets the value of VictimLocation.
func (s *ValConsoleMatchV1KillDto) SetVictimLocation(val ValConsoleMatchV1LocationDto) {
	s.VictimLocation = val
}

// SetAssistants sets the value of Assistants.
func (s *ValConsoleMatchV1KillDto) SetAssistants(val []string) {
	s.Assistants = val
}

// SetPlayerLocations sets the value of PlayerLocations.
func (s *ValConsoleMatchV1KillDto) SetPlayerLocations(val []ValConsoleMatchV1PlayerLocationsDto) {
	s.PlayerLocations = val
}

// SetFinishingDamage sets the value of FinishingDamage.
func (s *ValConsoleMatchV1KillDto) SetFinishingDamage(val ValConsoleMatchV1FinishingDamageDto) {
	s.FinishingDamage = val
}

// Ref: #/components/schemas/val-console-match-v1.LocationDto
type ValConsoleMatchV1LocationDto struct {
	X int32 `json:"x"`
	Y int32 `json:"y"`
}

// GetX returns the value of X.
func (s *ValConsoleMatchV1LocationDto) GetX() int32 {
	return s.X
}

// GetY returns the value of Y.
func (s *ValConsoleMatchV1LocationDto) GetY() int32 {
	return s.Y
}

// SetX sets the value of X.
func (s *ValConsoleMatchV1LocationDto) SetX(val int32) {
	s.X = val
}

// SetY sets the value of Y.
func (s *ValConsoleMatchV1LocationDto) SetY(val int32) {
	s.Y = val
}

// Ref: #/components/schemas/val-console-match-v1.MatchDto
type ValConsoleMatchV1MatchDto struct {
	MatchInfo    ValConsoleMatchV1MatchInfoDto     `json:"matchInfo"`
	Players      []ValConsoleMatchV1PlayerDto      `json:"players"`
	Coaches      []ValConsoleMatchV1CoachDto       `json:"coaches"`
	Teams        []ValConsoleMatchV1TeamDto        `json:"teams"`
	RoundResults []ValConsoleMatchV1RoundResultDto `json:"roundResults"`
}

// GetMatchInfo returns the value of MatchInfo.
func (s *ValConsoleMatchV1MatchDto) GetMatchInfo() ValConsoleMatchV1MatchInfoDto {
	return s.MatchInfo
}

// GetPlayers returns the value of Players.
func (s *ValConsoleMatchV1MatchDto) GetPlayers() []ValConsoleMatchV1PlayerDto {
	return s.Players
}

// GetCoaches returns the value of Coaches.
func (s *ValConsoleMatchV1MatchDto) GetCoaches() []ValConsoleMatchV1CoachDto {
	return s.Coaches
}

// GetTeams returns the value of Teams.
func (s *ValConsoleMatchV1MatchDto) GetTeams() []ValConsoleMatchV1TeamDto {
	return s.Teams
}

// GetRoundResults returns the value of RoundResults.
func (s *ValConsoleMatchV1MatchDto) GetRoundResults() []ValConsoleMatchV1RoundResultDto {
	return s.RoundResults
}

// SetMatchInfo sets the value of MatchInfo.
func (s *ValConsoleMatchV1MatchDto) SetMatchInfo(val ValConsoleMatchV1MatchInfoDto) {
	s.MatchInfo = val
}

// SetPlayers sets the value of Players.
func (s *ValConsoleMatchV1MatchDto) SetPlayers(val []ValConsoleMatchV1PlayerDto) {
	s.Players = val
}

// SetCoaches sets the value of Coaches.
func (s *ValConsoleMatchV1MatchDto) SetCoaches(val []ValConsoleMatchV1CoachDto) {
	s.Coaches = val
}

// SetTeams sets the value of Teams.
func (s *ValConsoleMatchV1MatchDto) SetTeams(val []ValConsoleMatchV1TeamDto) {
	s.Teams = val
}

// SetRoundResults sets the value of RoundResults.
func (s *ValConsoleMatchV1MatchDto) SetRoundResults(val []ValConsoleMatchV1RoundResultDto) {
	s.RoundResults = val
}

func (*ValConsoleMatchV1MatchDto) valConsoleMatchV1GetMatchRes() {}

// Ref: #/components/schemas/val-console-match-v1.MatchInfoDto
type ValConsoleMatchV1MatchInfoDto struct {
	MatchId            string   `json:"matchId"`
	MapId              string   `json:"mapId"`
	GameLengthMillis   OptInt32 `json:"gameLengthMillis"`
	GameStartMillis    int64    `json:"gameStartMillis"`
	ProvisioningFlowId string   `json:"provisioningFlowId"`
	IsCompleted        bool     `json:"isCompleted"`
	CustomGameName     string   `json:"customGameName"`
	QueueId            string   `json:"queueId"`
	GameMode           string   `json:"gameMode"`
	IsRanked           bool     `json:"isRanked"`
	SeasonId           string   `json:"seasonId"`
}

// GetMatchId returns the value of MatchId.
func (s *ValConsoleMatchV1MatchInfoDto) GetMatchId() string {
	return s.MatchId
}

// GetMapId returns the value of MapId.
func (s *ValConsoleMatchV1MatchInfoDto) GetMapId() string {
	return s.MapId
}

// GetGameLengthMillis returns the value of GameLengthMillis.
func (s *ValConsoleMatchV1MatchInfoDto) GetGameLengthMillis() OptInt32 {
	return s.GameLengthMillis
}

// GetGameStartMillis returns the value of GameStartMillis.
func (s *ValConsoleMatchV1MatchInfoDto) GetGameStartMillis() int64 {
	return s.GameStartMillis
}

// GetProvisioningFlowId returns the value of ProvisioningFlowId.
func (s *ValConsoleMatchV1MatchInfoDto) GetProvisioningFlowId() string {
	return s.ProvisioningFlowId
}

// GetIsCompleted returns the value of IsCompleted.
func (s *ValConsoleMatchV1MatchInfoDto) GetIsCompleted() bool {
	return s.IsCompleted
}

// GetCustomGameName returns the value of CustomGameName.
func (s *ValConsoleMatchV1MatchInfoDto) GetCustomGameName() string {
	return s.CustomGameName
}

// GetQueueId returns the value of QueueId.
func (s *ValConsoleMatchV1MatchInfoDto) GetQueueId() string {
	return s.QueueId
}

// GetGameMode returns the value of GameMode.
func (s *ValConsoleMatchV1MatchInfoDto) GetGameMode() string {
	return s.GameMode
}

// GetIsRanked returns the value of IsRanked.
func (s *ValConsoleMatchV1MatchInfoDto) GetIsRanked() bool {
	return s.IsRanked
}

// GetSeasonId returns the value of SeasonId.
func (s *ValConsoleMatchV1MatchInfoDto) GetSeasonId() string {
	return s.SeasonId
}

// SetMatchId sets the value of MatchId.
func (s *ValConsoleMatchV1MatchInfoDto) SetMatchId(val string) {
	s.MatchId = val
}

// SetMapId sets the value of MapId.
func (s *ValConsoleMatchV1MatchInfoDto) SetMapId(val string) {
	s.MapId = val
}

// SetGameLengthMillis sets the value of GameLengthMillis.
func (s *ValConsoleMatchV1MatchInfoDto) SetGameLengthMillis(val OptInt32) {
	s.GameLengthMillis = val
}

// SetGameStartMillis sets the value of GameStartMillis.
func (s *ValConsoleMatchV1MatchInfoDto) SetGameStartMillis(val int64) {
	s.GameStartMillis = val
}

// SetProvisioningFlowId sets the value of ProvisioningFlowId.
func (s *ValConsoleMatchV1MatchInfoDto) SetProvisioningFlowId(val string) {
	s.ProvisioningFlowId = val
}

// SetIsCompleted sets the value of IsCompleted.
func (s *ValConsoleMatchV1MatchInfoDto) SetIsCompleted(val bool) {
	s.IsCompleted = val
}

// SetCustomGameName sets the value of CustomGameName.
func (s *ValConsoleMatchV1MatchInfoDto) SetCustomGameName(val string) {
	s.CustomGameName = val
}

// SetQueueId sets the value of QueueId.
func (s *ValConsoleMatchV1MatchInfoDto) SetQueueId(val string) {
	s.QueueId = val
}

// SetGameMode sets the value of GameMode.
func (s *ValConsoleMatchV1MatchInfoDto) SetGameMode(val string) {
	s.GameMode = val
}

// SetIsRanked sets the value of IsRanked.
func (s *ValConsoleMatchV1MatchInfoDto) SetIsRanked(val bool) {
	s.IsRanked = val
}

// SetSeasonId sets the value of SeasonId.
func (s *ValConsoleMatchV1MatchInfoDto) SetSeasonId(val string) {
	s.SeasonId = val
}

// Ref: #/components/schemas/val-console-match-v1.MatchlistDto
type ValConsoleMatchV1MatchlistDto struct {
	Puuid   string                               `json:"puuid"`
	History []ValConsoleMatchV1MatchlistEntryDto `json:"history"`
}

// GetPuuid returns the value of Puuid.
func (s *ValConsoleMatchV1MatchlistDto) GetPuuid() string {
	return s.Puuid
}

// GetHistory returns the value of History.
func (s *ValConsoleMatchV1MatchlistDto) GetHistory() []ValConsoleMatchV1MatchlistEntryDto {
	return s.History
}

// SetPuuid sets the value of Puuid.
func (s *ValConsoleMatchV1MatchlistDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetHistory sets the value of History.
func (s *ValConsoleMatchV1MatchlistDto) SetHistory(val []ValConsoleMatchV1MatchlistEntryDto) {
	s.History = val
}

func (*ValConsoleMatchV1MatchlistDto) valConsoleMatchV1GetMatchlistRes() {}

// Ref: #/components/schemas/val-console-match-v1.MatchlistEntryDto
type ValConsoleMatchV1MatchlistEntryDto struct {
	MatchId             string `json:"matchId"`
	GameStartTimeMillis int64  `json:"gameStartTimeMillis"`
	QueueId             string `json:"queueId"`
}

// GetMatchId returns the value of MatchId.
func (s *ValConsoleMatchV1MatchlistEntryDto) GetMatchId() string {
	return s.MatchId
}

// GetGameStartTimeMillis returns the value of GameStartTimeMillis.
func (s *ValConsoleMatchV1MatchlistEntryDto) GetGameStartTimeMillis() int64 {
	return s.GameStartTimeMillis
}

// GetQueueId returns the value of QueueId.
func (s *ValConsoleMatchV1MatchlistEntryDto) GetQueueId() string {
	return s.QueueId
}

// SetMatchId sets the value of MatchId.
func (s *ValConsoleMatchV1MatchlistEntryDto) SetMatchId(val string) {
	s.MatchId = val
}

// SetGameStartTimeMillis sets the value of GameStartTimeMillis.
func (s *ValConsoleMatchV1MatchlistEntryDto) SetGameStartTimeMillis(val int64) {
	s.GameStartTimeMillis = val
}

// SetQueueId sets the value of QueueId.
func (s *ValConsoleMatchV1MatchlistEntryDto) SetQueueId(val string) {
	s.QueueId = val
}

// Ref: #/components/schemas/val-console-match-v1.PlayerDto
type ValConsoleMatchV1PlayerDto struct {
	Puuid           string                             `json:"puuid"`
	GameName        string                             `json:"gameName"`
	TagLine         string                             `json:"tagLine"`
	TeamId          string                             `json:"teamId"`
	PartyId         string                             `json:"partyId"`
	CharacterId     OptString                          `json:"characterId"`
	Stats           OptValConsoleMatchV1PlayerStatsDto `json:"stats"`
	CompetitiveTier int32                              `json:"competitiveTier"`
	PlayerCard      string                             `json:"playerCard"`
	PlayerTitle     string                             `json:"playerTitle"`
}

// GetPuuid returns the value of Puuid.
func (s *ValConsoleMatchV1PlayerDto) GetPuuid() string {
	return s.Puuid
}

// GetGameName returns the value of GameName.
func (s *ValConsoleMatchV1PlayerDto) GetGameName() string {
	return s.GameName
}

// GetTagLine returns the value of TagLine.
func (s *ValConsoleMatchV1PlayerDto) GetTagLine() string {
	return s.TagLine
}

// GetTeamId returns the value of TeamId.
func (s *ValConsoleMatchV1PlayerDto) GetTeamId() string {
	return s.TeamId
}

// GetPartyId returns the value of PartyId.
func (s *ValConsoleMatchV1PlayerDto) GetPartyId() string {
	return s.PartyId
}

// GetCharacterId returns the value of CharacterId.
func (s *ValConsoleMatchV1PlayerDto) GetCharacterId() OptString {
	return s.CharacterId
}

// GetStats returns the value of Stats.
func (s *ValConsoleMatchV1PlayerDto) GetStats() OptValConsoleMatchV1PlayerStatsDto {
	return s.Stats
}

// GetCompetitiveTier returns the value of CompetitiveTier.
func (s *ValConsoleMatchV1PlayerDto) GetCompetitiveTier() int32 {
	return s.CompetitiveTier
}

// GetPlayerCard returns the value of PlayerCard.
func (s *ValConsoleMatchV1PlayerDto) GetPlayerCard() string {
	return s.PlayerCard
}

// GetPlayerTitle returns the value of PlayerTitle.
func (s *ValConsoleMatchV1PlayerDto) GetPlayerTitle() string {
	return s.PlayerTitle
}

// SetPuuid sets the value of Puuid.
func (s *ValConsoleMatchV1PlayerDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetGameName sets the value of GameName.
func (s *ValConsoleMatchV1PlayerDto) SetGameName(val string) {
	s.GameName = val
}

// SetTagLine sets the value of TagLine.
func (s *ValConsoleMatchV1PlayerDto) SetTagLine(val string) {
	s.TagLine = val
}

// SetTeamId sets the value of TeamId.
func (s *ValConsoleMatchV1PlayerDto) SetTeamId(val string) {
	s.TeamId = val
}

// SetPartyId sets the value of PartyId.
func (s *ValConsoleMatchV1PlayerDto) SetPartyId(val string) {
	s.PartyId = val
}

// SetCharacterId sets the value of CharacterId.
func (s *ValConsoleMatchV1PlayerDto) SetCharacterId(val OptString) {
	s.CharacterId = val
}

// SetStats sets the value of Stats.
func (s *ValConsoleMatchV1PlayerDto) SetStats(val OptValConsoleMatchV1PlayerStatsDto) {
	s.Stats = val
}

// SetCompetitiveTier sets the value of CompetitiveTier.
func (s *ValConsoleMatchV1PlayerDto) SetCompetitiveTier(val int32) {
	s.CompetitiveTier = val
}

// SetPlayerCard sets the value of PlayerCard.
func (s *ValConsoleMatchV1PlayerDto) SetPlayerCard(val string) {
	s.PlayerCard = val
}

// SetPlayerTitle sets the value of PlayerTitle.
func (s *ValConsoleMatchV1PlayerDto) SetPlayerTitle(val string) {
	s.PlayerTitle = val
}

// Ref: #/components/schemas/val-console-match-v1.PlayerLocationsDto
type ValConsoleMatchV1PlayerLocationsDto struct {
	Puuid       string                       `json:"puuid"`
	ViewRadians float32                      `json:"viewRadians"`
	Location    ValConsoleMatchV1LocationDto `json:"location"`
}

// GetPuuid returns the value of Puuid.
func (s *ValConsoleMatchV1PlayerLocationsDto) GetPuuid() string {
	return s.Puuid
}

// GetViewRadians returns the value of ViewRadians.
func (s *ValConsoleMatchV1PlayerLocationsDto) GetViewRadians() float32 {
	return s.ViewRadians
}

// GetLocation returns the value of Location.
func (s *ValConsoleMatchV1PlayerLocationsDto) GetLocation() ValConsoleMatchV1LocationDto {
	return s.Location
}

// SetPuuid sets the value of Puuid.
func (s *ValConsoleMatchV1PlayerLocationsDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetViewRadians sets the value of ViewRadians.
func (s *ValConsoleMatchV1PlayerLocationsDto) SetViewRadians(val float32) {
	s.ViewRadians = val
}

// SetLocation sets the value of Location.
func (s *ValConsoleMatchV1PlayerLocationsDto) SetLocation(val ValConsoleMatchV1LocationDto) {
	s.Location = val
}

// Ref: #/components/schemas/val-console-match-v1.PlayerRoundStatsDto
type ValConsoleMatchV1PlayerRoundStatsDto struct {
	Puuid   string                       `json:"puuid"`
	Kills   []ValConsoleMatchV1KillDto   `json:"kills"`
	Damage  []ValConsoleMatchV1DamageDto `json:"damage"`
	Score   int32                        `json:"score"`
	Economy ValConsoleMatchV1EconomyDto  `json:"economy"`
	Ability ValConsoleMatchV1AbilityDto  `json:"ability"`
}

// GetPuuid returns the value of Puuid.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) GetPuuid() string {
	return s.Puuid
}

// GetKills returns the value of Kills.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) GetKills() []ValConsoleMatchV1KillDto {
	return s.Kills
}

// GetDamage returns the value of Damage.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) GetDamage() []ValConsoleMatchV1DamageDto {
	return s.Damage
}

// GetScore returns the value of Score.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) GetScore() int32 {
	return s.Score
}

// GetEconomy returns the value of Economy.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) GetEconomy() ValConsoleMatchV1EconomyDto {
	return s.Economy
}

// GetAbility returns the value of Ability.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) GetAbility() ValConsoleMatchV1AbilityDto {
	return s.Ability
}

// SetPuuid sets the value of Puuid.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetKills sets the value of Kills.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) SetKills(val []ValConsoleMatchV1KillDto) {
	s.Kills = val
}

// SetDamage sets the value of Damage.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) SetDamage(val []ValConsoleMatchV1DamageDto) {
	s.Damage = val
}

// SetScore sets the value of Score.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) SetScore(val int32) {
	s.Score = val
}

// SetEconomy sets the value of Economy.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) SetEconomy(val ValConsoleMatchV1EconomyDto) {
	s.Economy = val
}

// SetAbility sets the value of Ability.
func (s *ValConsoleMatchV1PlayerRoundStatsDto) SetAbility(val ValConsoleMatchV1AbilityDto) {
	s.Ability = val
}

// Ref: #/components/schemas/val-console-match-v1.PlayerStatsDto
type ValConsoleMatchV1PlayerStatsDto struct {
	Score          int32                               `json:"score"`
	RoundsPlayed   int32                               `json:"roundsPlayed"`
	Kills          int32                               `json:"kills"`
	Deaths         int32                               `json:"deaths"`
	Assists        int32                               `json:"assists"`
	PlaytimeMillis int32                               `json:"playtimeMillis"`
	AbilityCasts   OptValConsoleMatchV1AbilityCastsDto `json:"abilityCasts"`
}

// GetScore returns the value of Score.
func (s *ValConsoleMatchV1PlayerStatsDto) GetScore() int32 {
	return s.Score
}

// GetRoundsPlayed returns the value of RoundsPlayed.
func (s *ValConsoleMatchV1PlayerStatsDto) GetRoundsPlayed() int32 {
	return s.RoundsPlayed
}

// GetKills returns the value of Kills.
func (s *ValConsoleMatchV1PlayerStatsDto) GetKills() int32 {
	return s.Kills
}

// GetDeaths returns the value of Deaths.
func (s *ValConsoleMatchV1PlayerStatsDto) GetDeaths() int32 {
	return s.Deaths
}

// GetAssists returns the value of Assists.
func (s *ValConsoleMatchV1PlayerStatsDto) GetAssists() int32 {
	return s.Assists
}

// GetPlaytimeMillis returns the value of PlaytimeMillis.
func (s *ValConsoleMatchV1PlayerStatsDto) GetPlaytimeMillis() int32 {
	return s.PlaytimeMillis
}

// GetAbilityCasts returns the value of AbilityCasts.
func (s *ValConsoleMatchV1PlayerStatsDto) GetAbilityCasts() OptValConsoleMatchV1AbilityCastsDto {
	return s.AbilityCasts
}

// SetScore sets the value of Score.
func (s *ValConsoleMatchV1PlayerStatsDto) SetScore(val int32) {
	s.Score = val
}

// SetRoundsPlayed sets the value of RoundsPlayed.
func (s *ValConsoleMatchV1PlayerStatsDto) SetRoundsPlayed(val int32) {
	s.RoundsPlayed = val
}

// SetKills sets the value of Kills.
func (s *ValConsoleMatchV1PlayerStatsDto) SetKills(val int32) {
	s.Kills = val
}

// SetDeaths sets the value of Deaths.
func (s *ValConsoleMatchV1PlayerStatsDto) SetDeaths(val int32) {
	s.Deaths = val
}

// SetAssists sets the value of Assists.
func (s *ValConsoleMatchV1PlayerStatsDto) SetAssists(val int32) {
	s.Assists = val
}

// SetPlaytimeMillis sets the value of PlaytimeMillis.
func (s *ValConsoleMatchV1PlayerStatsDto) SetPlaytimeMillis(val int32) {
	s.PlaytimeMillis = val
}

// SetAbilityCasts sets the value of AbilityCasts.
func (s *ValConsoleMatchV1PlayerStatsDto) SetAbilityCasts(val OptValConsoleMatchV1AbilityCastsDto) {
	s.AbilityCasts = val
}

// Ref: #/components/schemas/val-console-match-v1.RecentMatchesDto
type ValConsoleMatchV1RecentMatchesDto struct {
	CurrentTime int64 `json:"currentTime"`
	// A list of recent match ids.
	MatchIds []string `json:"matchIds"`
}

// GetCurrentTime returns the value of CurrentTime.
func (s *ValConsoleMatchV1RecentMatchesDto) GetCurrentTime() int64 {
	return s.CurrentTime
}

// GetMatchIds returns the value of MatchIds.
func (s *ValConsoleMatchV1RecentMatchesDto) GetMatchIds() []string {
	return s.MatchIds
}

// SetCurrentTime sets the value of CurrentTime.
func (s *ValConsoleMatchV1RecentMatchesDto) SetCurrentTime(val int64) {
	s.CurrentTime = val
}

// SetMatchIds sets the value of MatchIds.
func (s *ValConsoleMatchV1RecentMatchesDto) SetMatchIds(val []string) {
	s.MatchIds = val
}

func (*ValConsoleMatchV1RecentMatchesDto) valConsoleMatchV1GetRecentRes() {}

// Ref: #/components/schemas/val-console-match-v1.RoundResultDto
type ValConsoleMatchV1RoundResultDto struct {
	RoundNum      int32  `json:"roundNum"`
	RoundResult   string `json:"roundResult"`
	RoundCeremony string `json:"roundCeremony"`
	WinningTeam   string `json:"winningTeam"`
	// PUUID of player.
	BombPlanter OptString `json:"bombPlanter"`
	// PUUID of player.
	BombDefuser           OptString                              `json:"bombDefuser"`
	PlantRoundTime        int32                                  `json:"plantRoundTime"`
	PlantPlayerLocations  []ValConsoleMatchV1PlayerLocationsDto  `json:"plantPlayerLocations"`
	PlantLocation         ValConsoleMatchV1LocationDto           `json:"plantLocation"`
	PlantSite             string                                 `json:"plantSite"`
	DefuseRoundTime       int32                                  `json:"defuseRoundTime"`
	DefusePlayerLocations []ValConsoleMatchV1PlayerLocationsDto  `json:"defusePlayerLocations"`
	DefuseLocation        ValConsoleMatchV1LocationDto           `json:"defuseLocation"`
	PlayerStats           []ValConsoleMatchV1PlayerRoundStatsDto `json:"playerStats"`
	RoundResultCode       string                                 `json:"roundResultCode"`
}

// GetRoundNum returns the value of RoundNum.
func (s *ValConsoleMatchV1RoundResultDto) GetRoundNum() int32 {
	return s.RoundNum
}

// GetRoundResult returns the value of RoundResult.
func (s *ValConsoleMatchV1RoundResultDto) GetRoundResult() string {
	return s.RoundResult
}

// GetRoundCeremony returns the value of RoundCeremony.
func (s *ValConsoleMatchV1RoundResultDto) GetRoundCeremony() string {
	return s.RoundCeremony
}

// GetWinningTeam returns the value of WinningTeam.
func (s *ValConsoleMatchV1RoundResultDto) GetWinningTeam() string {
	return s.WinningTeam
}

// GetBombPlanter returns the value of BombPlanter.
func (s *ValConsoleMatchV1RoundResultDto) GetBombPlanter() OptString {
	return s.BombPlanter
}

// GetBombDefuser returns the value of BombDefuser.
func (s *ValConsoleMatchV1RoundResultDto) GetBombDefuser() OptString {
	return s.BombDefuser
}

// GetPlantRoundTime returns the value of PlantRoundTime.
func (s *ValConsoleMatchV1RoundResultDto) GetPlantRoundTime() int32 {
	return s.PlantRoundTime
}

// GetPlantPlayerLocations returns the value of PlantPlayerLocations.
func (s *ValConsoleMatchV1RoundResultDto) GetPlantPlayerLocations() []ValConsoleMatchV1PlayerLocationsDto {
	return s.PlantPlayerLocations
}

// GetPlantLocation returns the value of PlantLocation.
func (s *ValConsoleMatchV1RoundResultDto) GetPlantLocation() ValConsoleMatchV1LocationDto {
	return s.PlantLocation
}

// GetPlantSite returns the value of PlantSite.
func (s *ValConsoleMatchV1RoundResultDto) GetPlantSite() string {
	return s.PlantSite
}

// GetDefuseRoundTime returns the value of DefuseRoundTime.
func (s *ValConsoleMatchV1RoundResultDto) GetDefuseRoundTime() int32 {
	return s.DefuseRoundTime
}

// GetDefusePlayerLocations returns the value of DefusePlayerLocations.
func (s *ValConsoleMatchV1RoundResultDto) GetDefusePlayerLocations() []ValConsoleMatchV1PlayerLocationsDto {
	return s.DefusePlayerLocations
}

// GetDefuseLocation returns the value of DefuseLocation.
func (s *ValConsoleMatchV1RoundResultDto) GetDefuseLocation() ValConsoleMatchV1LocationDto {
	return s.DefuseLocation
}

// GetPlayerStats returns the value of PlayerStats.
func (s *ValConsoleMatchV1RoundResultDto) GetPlayerStats() []ValConsoleMatchV1PlayerRoundStatsDto {
	return s.PlayerStats
}

// GetRoundResultCode returns the value of RoundResultCode.
func (s *ValConsoleMatchV1RoundResultDto) GetRoundResultCode() string {
	return s.RoundResultCode
}

// SetRoundNum sets the value of RoundNum.
func (s *ValConsoleMatchV1RoundResultDto) SetRoundNum(val int32) {
	s.RoundNum = val
}

// SetRoundResult sets the value of RoundResult.
func (s *ValConsoleMatchV1RoundResultDto) SetRoundResult(val string) {
	s.RoundResult = val
}

// SetRoundCeremony sets the value of RoundCeremony.
func (s *ValConsoleMatchV1RoundResultDto) SetRoundCeremony(val string) {
	s.RoundCeremony = val
}

// SetWinningTeam sets the value of WinningTeam.
func (s *ValConsoleMatchV1RoundResultDto) SetWinningTeam(val string) {
	s.WinningTeam = val
}

// SetBombPlanter sets the value of BombPlanter.
func (s *ValConsoleMatchV1RoundResultDto) SetBombPlanter(val OptString) {
	s.BombPlanter = val
}

// SetBombDefuser sets the value of BombDefuser.
func (s *ValConsoleMatchV1RoundResultDto) SetBombDefuser(val OptString) {
	s.BombDefuser = val
}

// SetPlantRoundTime sets the value of PlantRoundTime.
func (s *ValConsoleMatchV1RoundResultDto) SetPlantRoundTime(val int32) {
	s.PlantRoundTime = val
}

// SetPlantPlayerLocations sets the value of PlantPlayerLocations.
func (s *ValConsoleMatchV1RoundResultDto) SetPlantPlayerLocations(val []ValConsoleMatchV1PlayerLocationsDto) {
	s.PlantPlayerLocations = val
}

// SetPlantLocation sets the value of PlantLocation.
func (s *ValConsoleMatchV1RoundResultDto) SetPlantLocation(val ValConsoleMatchV1LocationDto) {
	s.PlantLocation = val
}

// SetPlantSite sets the value of PlantSite.
func (s *ValConsoleMatchV1RoundResultDto) SetPlantSite(val string) {
	s.PlantSite = val
}

// SetDefuseRoundTime sets the value of DefuseRoundTime.
func (s *ValConsoleMatchV1RoundResultDto) SetDefuseRoundTime(val int32) {
	s.DefuseRoundTime = val
}

// SetDefusePlayerLocations sets the value of DefusePlayerLocations.
func (s *ValConsoleMatchV1RoundResultDto) SetDefusePlayerLocations(val []ValConsoleMatchV1PlayerLocationsDto) {
	s.DefusePlayerLocations = val
}

// SetDefuseLocation sets the value of DefuseLocation.
func (s *ValConsoleMatchV1RoundResultDto) SetDefuseLocation(val ValConsoleMatchV1LocationDto) {
	s.DefuseLocation = val
}

// SetPlayerStats sets the value of PlayerStats.
func (s *ValConsoleMatchV1RoundResultDto) SetPlayerStats(val []ValConsoleMatchV1PlayerRoundStatsDto) {
	s.PlayerStats = val
}

// SetRoundResultCode sets the value of RoundResultCode.
func (s *ValConsoleMatchV1RoundResultDto) SetRoundResultCode(val string) {
	s.RoundResultCode = val
}

// Ref: #/components/schemas/val-console-match-v1.TeamDto
type ValConsoleMatchV1TeamDto struct {
	// This is an arbitrary string. Red and Blue in bomb modes. The puuid of the player in deathmatch.
	TeamId       string `json:"teamId"`
	Won          bool   `json:"won"`
	RoundsPlayed int32  `json:"roundsPlayed"`
	RoundsWon    int32  `json:"roundsWon"`
	// Team points scored. Number of kills in deathmatch.
	NumPoints int32 `json:"numPoints"`
}

// GetTeamId returns the value of TeamId.
func (s *ValConsoleMatchV1TeamDto) GetTeamId() string {
	return s.TeamId
}

// GetWon returns the value of Won.
func (s *ValConsoleMatchV1TeamDto) GetWon() bool {
	return s.Won
}

// GetRoundsPlayed returns the value of RoundsPlayed.
func (s *ValConsoleMatchV1TeamDto) GetRoundsPlayed() int32 {
	return s.RoundsPlayed
}

// GetRoundsWon returns the value of RoundsWon.
func (s *ValConsoleMatchV1TeamDto) GetRoundsWon() int32 {
	return s.RoundsWon
}

// GetNumPoints returns the value of NumPoints.
func (s *ValConsoleMatchV1TeamDto) GetNumPoints() int32 {
	return s.NumPoints
}

// SetTeamId sets the value of TeamId.
func (s *ValConsoleMatchV1TeamDto) SetTeamId(val string) {
	s.TeamId = val
}

// SetWon sets the value of Won.
func (s *ValConsoleMatchV1TeamDto) SetWon(val bool) {
	s.Won = val
}

// SetRoundsPlayed sets the value of RoundsPlayed.
func (s *ValConsoleMatchV1TeamDto) SetRoundsPlayed(val int32) {
	s.RoundsPlayed = val
}

// SetRoundsWon sets the value of RoundsWon.
func (s *ValConsoleMatchV1TeamDto) SetRoundsWon(val int32) {
	s.RoundsWon = val
}

// SetNumPoints sets the value of NumPoints.
func (s *ValConsoleMatchV1TeamDto) SetNumPoints(val int32) {
	s.NumPoints = val
}

// ValConsoleRankedV1GetLeaderboardBadGateway is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardBadGateway struct{}

func (*ValConsoleRankedV1GetLeaderboardBadGateway) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardBadRequest is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardBadRequest struct{}

func (*ValConsoleRankedV1GetLeaderboardBadRequest) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardForbidden is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardForbidden struct{}

func (*ValConsoleRankedV1GetLeaderboardForbidden) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardGatewayTimeout is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardGatewayTimeout struct{}

func (*ValConsoleRankedV1GetLeaderboardGatewayTimeout) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardInternalServerError is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardInternalServerError struct{}

func (*ValConsoleRankedV1GetLeaderboardInternalServerError) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardMethodNotAllowed is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardMethodNotAllowed struct{}

func (*ValConsoleRankedV1GetLeaderboardMethodNotAllowed) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardNotFound is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardNotFound struct{}

func (*ValConsoleRankedV1GetLeaderboardNotFound) valConsoleRankedV1GetLeaderboardRes() {}

type ValConsoleRankedV1GetLeaderboardPlatformType string

const (
	ValConsoleRankedV1GetLeaderboardPlatformTypePlaystation ValConsoleRankedV1GetLeaderboardPlatformType = "playstation"
	ValConsoleRankedV1GetLeaderboardPlatformTypeXbox        ValConsoleRankedV1GetLeaderboardPlatformType = "xbox"
)

// AllValues returns all ValConsoleRankedV1GetLeaderboardPlatformType values.
func (ValConsoleRankedV1GetLeaderboardPlatformType) AllValues() []ValConsoleRankedV1GetLeaderboardPlatformType {
	return []ValConsoleRankedV1GetLeaderboardPlatformType{
		ValConsoleRankedV1GetLeaderboardPlatformTypePlaystation,
		ValConsoleRankedV1GetLeaderboardPlatformTypeXbox,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValConsoleRankedV1GetLeaderboardPlatformType) MarshalText() ([]byte, error) {
	switch s {
	case ValConsoleRankedV1GetLeaderboardPlatformTypePlaystation:
		return []byte(s), nil
	case ValConsoleRankedV1GetLeaderboardPlatformTypeXbox:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValConsoleRankedV1GetLeaderboardPlatformType) UnmarshalText(data []byte) error {
	switch ValConsoleRankedV1GetLeaderboardPlatformType(data) {
	case ValConsoleRankedV1GetLeaderboardPlatformTypePlaystation:
		*s = ValConsoleRankedV1GetLeaderboardPlatformTypePlaystation
		return nil
	case ValConsoleRankedV1GetLeaderboardPlatformTypeXbox:
		*s = ValConsoleRankedV1GetLeaderboardPlatformTypeXbox
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ValConsoleRankedV1GetLeaderboardServiceUnavailable is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardServiceUnavailable struct{}

func (*ValConsoleRankedV1GetLeaderboardServiceUnavailable) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardTooManyRequests is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardTooManyRequests struct{}

func (*ValConsoleRankedV1GetLeaderboardTooManyRequests) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardUnauthorized is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardUnauthorized struct{}

func (*ValConsoleRankedV1GetLeaderboardUnauthorized) valConsoleRankedV1GetLeaderboardRes() {}

// ValConsoleRankedV1GetLeaderboardUnsupportedMediaType is response for ValConsoleRankedV1GetLeaderboard operation.
type ValConsoleRankedV1GetLeaderboardUnsupportedMediaType struct{}

func (*ValConsoleRankedV1GetLeaderboardUnsupportedMediaType) valConsoleRankedV1GetLeaderboardRes() {}

// Ref: #/components/schemas/val-console-ranked-v1.LeaderboardDto
type ValConsoleRankedV1LeaderboardDto struct {
	// The act id for the given leaderboard. Act ids can be found using the val-content API.
	ActId string `json:"actId"`
	// The total number of players in the leaderboard.
	TotalPlayers int64     `json:"totalPlayers"`
	Query        OptString `json:"query"`
	// The shard for the given leaderboard.
	Shard       string                        `json:"shard"`
	Players     []ValConsoleRankedV1PlayerDto `json:"players"`
	TierDetails []ValConsoleRankedV1TierDto   `json:"tierDetails"`
}

// GetActId returns the value of ActId.
func (s *ValConsoleRankedV1LeaderboardDto) GetActId() string {
	return s.ActId
}

// GetTotalPlayers returns the value of TotalPlayers.
func (s *ValConsoleRankedV1LeaderboardDto) GetTotalPlayers() int64 {
	return s.TotalPlayers
}

// GetQuery returns the value of Query.
func (s *ValConsoleRankedV1LeaderboardDto) GetQuery() OptString {
	return s.Query
}

// GetShard returns the value of Shard.
func (s *ValConsoleRankedV1LeaderboardDto) GetShard() string {
	return s.Shard
}

// GetPlayers returns the value of Players.
func (s *ValConsoleRankedV1LeaderboardDto) GetPlayers() []ValConsoleRankedV1PlayerDto {
	return s.Players
}

// GetTierDetails returns the value of TierDetails.
func (s *ValConsoleRankedV1LeaderboardDto) GetTierDetails() []ValConsoleRankedV1TierDto {
	return s.TierDetails
}

// SetActId sets the value of ActId.
func (s *ValConsoleRankedV1LeaderboardDto) SetActId(val string) {
	s.ActId = val
}

// SetTotalPlayers sets the value of TotalPlayers.
func (s *ValConsoleRankedV1LeaderboardDto) SetTotalPlayers(val int64) {
	s.TotalPlayers = val
}

// SetQuery sets the value of Query.
func (s *ValConsoleRankedV1LeaderboardDto) SetQuery(val OptString) {
	s.Query = val
}

// SetShard sets the value of Shard.
func (s *ValConsoleRankedV1LeaderboardDto) SetShard(val string) {
	s.Shard = val
}

// SetPlayers sets the value of Players.
func (s *ValConsoleRankedV1LeaderboardDto) SetPlayers(val []ValConsoleRankedV1PlayerDto) {
	s.Players = val
}

// SetTierDetails sets the value of TierDetails.
func (s *ValConsoleRankedV1LeaderboardDto) SetTierDetails(val []ValConsoleRankedV1TierDto) {
	s.TierDetails = val
}

func (*ValConsoleRankedV1LeaderboardDto) valConsoleRankedV1GetLeaderboardRes() {}

// Ref: #/components/schemas/val-console-ranked-v1.PlayerDto
type ValConsoleRankedV1PlayerDto struct {
	// This field may be omitted if the player has been anonymized.
	Puuid OptString `json:"puuid"`
	// This field may be omitted if the player has been anonymized.
	GameName OptString `json:"gameName"`
	// This field may be omitted if the player has been anonymized.
	TagLine         OptString `json:"tagLine"`
	LeaderboardRank int64     `json:"leaderboardRank"`
	RankedRating    int64     `json:"rankedRating"`
	NumberOfWins    int64     `json:"numberOfWins"`
}

// GetPuuid returns the value of Puuid.
func (s *ValConsoleRankedV1PlayerDto) GetPuuid() OptString {
	return s.Puuid
}

// GetGameName returns the value of GameName.
func (s *ValConsoleRankedV1PlayerDto) GetGameName() OptString {
	return s.GameName
}

// GetTagLine returns the value of TagLine.
func (s *ValConsoleRankedV1PlayerDto) GetTagLine() OptString {
	return s.TagLine
}

// GetLeaderboardRank returns the value of LeaderboardRank.
func (s *ValConsoleRankedV1PlayerDto) GetLeaderboardRank() int64 {
	return s.LeaderboardRank
}

// GetRankedRating returns the value of RankedRating.
func (s *ValConsoleRankedV1PlayerDto) GetRankedRating() int64 {
	return s.RankedRating
}

// GetNumberOfWins returns the value of NumberOfWins.
func (s *ValConsoleRankedV1PlayerDto) GetNumberOfWins() int64 {
	return s.NumberOfWins
}

// SetPuuid sets the value of Puuid.
func (s *ValConsoleRankedV1PlayerDto) SetPuuid(val OptString) {
	s.Puuid = val
}

// SetGameName sets the value of GameName.
func (s *ValConsoleRankedV1PlayerDto) SetGameName(val OptString) {
	s.GameName = val
}

// SetTagLine sets the value of TagLine.
func (s *ValConsoleRankedV1PlayerDto) SetTagLine(val OptString) {
	s.TagLine = val
}

// SetLeaderboardRank sets the value of LeaderboardRank.
func (s *ValConsoleRankedV1PlayerDto) SetLeaderboardRank(val int64) {
	s.LeaderboardRank = val
}

// SetRankedRating sets the value of RankedRating.
func (s *ValConsoleRankedV1PlayerDto) SetRankedRating(val int64) {
	s.RankedRating = val
}

// SetNumberOfWins sets the value of NumberOfWins.
func (s *ValConsoleRankedV1PlayerDto) SetNumberOfWins(val int64) {
	s.NumberOfWins = val
}

// UNKNOWN TYPE.
// Ref: #/components/schemas/val-console-ranked-v1.TierDto
type ValConsoleRankedV1TierDto struct{}

// Ref: #/components/schemas/val-content-v1.ActDto
type ValContentV1ActDto struct {
	Name string `json:"name"`
	// This field is excluded from the response when a locale is set.
	LocalizedNames OptValContentV1LocalizedNamesDto `json:"localizedNames"`
	ID             string                           `json:"id"`
	IsActive       bool                             `json:"isActive"`
	ParentId       OptString                        `json:"parentId"`
	Type           OptString                        `json:"type"`
}

// GetName returns the value of Name.
func (s *ValContentV1ActDto) GetName() string {
	return s.Name
}

// GetLocalizedNames returns the value of LocalizedNames.
func (s *ValContentV1ActDto) GetLocalizedNames() OptValContentV1LocalizedNamesDto {
	return s.LocalizedNames
}

// GetID returns the value of ID.
func (s *ValContentV1ActDto) GetID() string {
	return s.ID
}

// GetIsActive returns the value of IsActive.
func (s *ValContentV1ActDto) GetIsActive() bool {
	return s.IsActive
}

// GetParentId returns the value of ParentId.
func (s *ValContentV1ActDto) GetParentId() OptString {
	return s.ParentId
}

// GetType returns the value of Type.
func (s *ValContentV1ActDto) GetType() OptString {
	return s.Type
}

// SetName sets the value of Name.
func (s *ValContentV1ActDto) SetName(val string) {
	s.Name = val
}

// SetLocalizedNames sets the value of LocalizedNames.
func (s *ValContentV1ActDto) SetLocalizedNames(val OptValContentV1LocalizedNamesDto) {
	s.LocalizedNames = val
}

// SetID sets the value of ID.
func (s *ValContentV1ActDto) SetID(val string) {
	s.ID = val
}

// SetIsActive sets the value of IsActive.
func (s *ValContentV1ActDto) SetIsActive(val bool) {
	s.IsActive = val
}

// SetParentId sets the value of ParentId.
func (s *ValContentV1ActDto) SetParentId(val OptString) {
	s.ParentId = val
}

// SetType sets the value of Type.
func (s *ValContentV1ActDto) SetType(val OptString) {
	s.Type = val
}

// Ref: #/components/schemas/val-content-v1.ContentDto
type ValContentV1ContentDto struct {
	Version      string                       `json:"version"`
	Characters   []ValContentV1ContentItemDto `json:"characters"`
	Maps         []ValContentV1ContentItemDto `json:"maps"`
	Chromas      []ValContentV1ContentItemDto `json:"chromas"`
	Skins        []ValContentV1ContentItemDto `json:"skins"`
	SkinLevels   []ValContentV1ContentItemDto `json:"skinLevels"`
	Equips       []ValContentV1ContentItemDto `json:"equips"`
	GameModes    []ValContentV1ContentItemDto `json:"gameModes"`
	Sprays       []ValContentV1ContentItemDto `json:"sprays"`
	SprayLevels  []ValContentV1ContentItemDto `json:"sprayLevels"`
	Charms       []ValContentV1ContentItemDto `json:"charms"`
	CharmLevels  []ValContentV1ContentItemDto `json:"charmLevels"`
	PlayerCards  []ValContentV1ContentItemDto `json:"playerCards"`
	PlayerTitles []ValContentV1ContentItemDto `json:"playerTitles"`
	Acts         []ValContentV1ActDto         `json:"acts"`
	Ceremonies   []ValContentV1ContentItemDto `json:"ceremonies"`
	Totems       []ValContentV1ContentItemDto `json:"totems"`
}

// GetVersion returns the value of Version.
func (s *ValContentV1ContentDto) GetVersion() string {
	return s.Version
}

// GetCharacters returns the value of Characters.
func (s *ValContentV1ContentDto) GetCharacters() []ValContentV1ContentItemDto {
	return s.Characters
}

// GetMaps returns the value of Maps.
func (s *ValContentV1ContentDto) GetMaps() []ValContentV1ContentItemDto {
	return s.Maps
}

// GetChromas returns the value of Chromas.
func (s *ValContentV1ContentDto) GetChromas() []ValContentV1ContentItemDto {
	return s.Chromas
}

// GetSkins returns the value of Skins.
func (s *ValContentV1ContentDto) GetSkins() []ValContentV1ContentItemDto {
	return s.Skins
}

// GetSkinLevels returns the value of SkinLevels.
func (s *ValContentV1ContentDto) GetSkinLevels() []ValContentV1ContentItemDto {
	return s.SkinLevels
}

// GetEquips returns the value of Equips.
func (s *ValContentV1ContentDto) GetEquips() []ValContentV1ContentItemDto {
	return s.Equips
}

// GetGameModes returns the value of GameModes.
func (s *ValContentV1ContentDto) GetGameModes() []ValContentV1ContentItemDto {
	return s.GameModes
}

// GetSprays returns the value of Sprays.
func (s *ValContentV1ContentDto) GetSprays() []ValContentV1ContentItemDto {
	return s.Sprays
}

// GetSprayLevels returns the value of SprayLevels.
func (s *ValContentV1ContentDto) GetSprayLevels() []ValContentV1ContentItemDto {
	return s.SprayLevels
}

// GetCharms returns the value of Charms.
func (s *ValContentV1ContentDto) GetCharms() []ValContentV1ContentItemDto {
	return s.Charms
}

// GetCharmLevels returns the value of CharmLevels.
func (s *ValContentV1ContentDto) GetCharmLevels() []ValContentV1ContentItemDto {
	return s.CharmLevels
}

// GetPlayerCards returns the value of PlayerCards.
func (s *ValContentV1ContentDto) GetPlayerCards() []ValContentV1ContentItemDto {
	return s.PlayerCards
}

// GetPlayerTitles returns the value of PlayerTitles.
func (s *ValContentV1ContentDto) GetPlayerTitles() []ValContentV1ContentItemDto {
	return s.PlayerTitles
}

// GetActs returns the value of Acts.
func (s *ValContentV1ContentDto) GetActs() []ValContentV1ActDto {
	return s.Acts
}

// GetCeremonies returns the value of Ceremonies.
func (s *ValContentV1ContentDto) GetCeremonies() []ValContentV1ContentItemDto {
	return s.Ceremonies
}

// GetTotems returns the value of Totems.
func (s *ValContentV1ContentDto) GetTotems() []ValContentV1ContentItemDto {
	return s.Totems
}

// SetVersion sets the value of Version.
func (s *ValContentV1ContentDto) SetVersion(val string) {
	s.Version = val
}

// SetCharacters sets the value of Characters.
func (s *ValContentV1ContentDto) SetCharacters(val []ValContentV1ContentItemDto) {
	s.Characters = val
}

// SetMaps sets the value of Maps.
func (s *ValContentV1ContentDto) SetMaps(val []ValContentV1ContentItemDto) {
	s.Maps = val
}

// SetChromas sets the value of Chromas.
func (s *ValContentV1ContentDto) SetChromas(val []ValContentV1ContentItemDto) {
	s.Chromas = val
}

// SetSkins sets the value of Skins.
func (s *ValContentV1ContentDto) SetSkins(val []ValContentV1ContentItemDto) {
	s.Skins = val
}

// SetSkinLevels sets the value of SkinLevels.
func (s *ValContentV1ContentDto) SetSkinLevels(val []ValContentV1ContentItemDto) {
	s.SkinLevels = val
}

// SetEquips sets the value of Equips.
func (s *ValContentV1ContentDto) SetEquips(val []ValContentV1ContentItemDto) {
	s.Equips = val
}

// SetGameModes sets the value of GameModes.
func (s *ValContentV1ContentDto) SetGameModes(val []ValContentV1ContentItemDto) {
	s.GameModes = val
}

// SetSprays sets the value of Sprays.
func (s *ValContentV1ContentDto) SetSprays(val []ValContentV1ContentItemDto) {
	s.Sprays = val
}

// SetSprayLevels sets the value of SprayLevels.
func (s *ValContentV1ContentDto) SetSprayLevels(val []ValContentV1ContentItemDto) {
	s.SprayLevels = val
}

// SetCharms sets the value of Charms.
func (s *ValContentV1ContentDto) SetCharms(val []ValContentV1ContentItemDto) {
	s.Charms = val
}

// SetCharmLevels sets the value of CharmLevels.
func (s *ValContentV1ContentDto) SetCharmLevels(val []ValContentV1ContentItemDto) {
	s.CharmLevels = val
}

// SetPlayerCards sets the value of PlayerCards.
func (s *ValContentV1ContentDto) SetPlayerCards(val []ValContentV1ContentItemDto) {
	s.PlayerCards = val
}

// SetPlayerTitles sets the value of PlayerTitles.
func (s *ValContentV1ContentDto) SetPlayerTitles(val []ValContentV1ContentItemDto) {
	s.PlayerTitles = val
}

// SetActs sets the value of Acts.
func (s *ValContentV1ContentDto) SetActs(val []ValContentV1ActDto) {
	s.Acts = val
}

// SetCeremonies sets the value of Ceremonies.
func (s *ValContentV1ContentDto) SetCeremonies(val []ValContentV1ContentItemDto) {
	s.Ceremonies = val
}

// SetTotems sets the value of Totems.
func (s *ValContentV1ContentDto) SetTotems(val []ValContentV1ContentItemDto) {
	s.Totems = val
}

func (*ValContentV1ContentDto) valContentV1GetContentRes() {}

// Ref: #/components/schemas/val-content-v1.ContentItemDto
type ValContentV1ContentItemDto struct {
	Name string `json:"name"`
	// This field is excluded from the response when a locale is set.
	LocalizedNames OptValContentV1LocalizedNamesDto `json:"localizedNames"`
	ID             string                           `json:"id"`
	AssetName      string                           `json:"assetName"`
	// This field is only included for maps and game modes. These values are used in the match response.
	AssetPath OptString `json:"assetPath"`
}

// GetName returns the value of Name.
func (s *ValContentV1ContentItemDto) GetName() string {
	return s.Name
}

// GetLocalizedNames returns the value of LocalizedNames.
func (s *ValContentV1ContentItemDto) GetLocalizedNames() OptValContentV1LocalizedNamesDto {
	return s.LocalizedNames
}

// GetID returns the value of ID.
func (s *ValContentV1ContentItemDto) GetID() string {
	return s.ID
}

// GetAssetName returns the value of AssetName.
func (s *ValContentV1ContentItemDto) GetAssetName() string {
	return s.AssetName
}

// GetAssetPath returns the value of AssetPath.
func (s *ValContentV1ContentItemDto) GetAssetPath() OptString {
	return s.AssetPath
}

// SetName sets the value of Name.
func (s *ValContentV1ContentItemDto) SetName(val string) {
	s.Name = val
}

// SetLocalizedNames sets the value of LocalizedNames.
func (s *ValContentV1ContentItemDto) SetLocalizedNames(val OptValContentV1LocalizedNamesDto) {
	s.LocalizedNames = val
}

// SetID sets the value of ID.
func (s *ValContentV1ContentItemDto) SetID(val string) {
	s.ID = val
}

// SetAssetName sets the value of AssetName.
func (s *ValContentV1ContentItemDto) SetAssetName(val string) {
	s.AssetName = val
}

// SetAssetPath sets the value of AssetPath.
func (s *ValContentV1ContentItemDto) SetAssetPath(val OptString) {
	s.AssetPath = val
}

// ValContentV1GetContentBadGateway is response for ValContentV1GetContent operation.
type ValContentV1GetContentBadGateway struct{}

func (*ValContentV1GetContentBadGateway) valContentV1GetContentRes() {}

// ValContentV1GetContentBadRequest is response for ValContentV1GetContent operation.
type ValContentV1GetContentBadRequest struct{}

func (*ValContentV1GetContentBadRequest) valContentV1GetContentRes() {}

// ValContentV1GetContentForbidden is response for ValContentV1GetContent operation.
type ValContentV1GetContentForbidden struct{}

func (*ValContentV1GetContentForbidden) valContentV1GetContentRes() {}

// ValContentV1GetContentGatewayTimeout is response for ValContentV1GetContent operation.
type ValContentV1GetContentGatewayTimeout struct{}

func (*ValContentV1GetContentGatewayTimeout) valContentV1GetContentRes() {}

// ValContentV1GetContentInternalServerError is response for ValContentV1GetContent operation.
type ValContentV1GetContentInternalServerError struct{}

func (*ValContentV1GetContentInternalServerError) valContentV1GetContentRes() {}

// ValContentV1GetContentMethodNotAllowed is response for ValContentV1GetContent operation.
type ValContentV1GetContentMethodNotAllowed struct{}

func (*ValContentV1GetContentMethodNotAllowed) valContentV1GetContentRes() {}

// ValContentV1GetContentNotFound is response for ValContentV1GetContent operation.
type ValContentV1GetContentNotFound struct{}

func (*ValContentV1GetContentNotFound) valContentV1GetContentRes() {}

// ValContentV1GetContentServiceUnavailable is response for ValContentV1GetContent operation.
type ValContentV1GetContentServiceUnavailable struct{}

func (*ValContentV1GetContentServiceUnavailable) valContentV1GetContentRes() {}

// ValContentV1GetContentTooManyRequests is response for ValContentV1GetContent operation.
type ValContentV1GetContentTooManyRequests struct{}

func (*ValContentV1GetContentTooManyRequests) valContentV1GetContentRes() {}

// ValContentV1GetContentUnauthorized is response for ValContentV1GetContent operation.
type ValContentV1GetContentUnauthorized struct{}

func (*ValContentV1GetContentUnauthorized) valContentV1GetContentRes() {}

// ValContentV1GetContentUnsupportedMediaType is response for ValContentV1GetContent operation.
type ValContentV1GetContentUnsupportedMediaType struct{}

func (*ValContentV1GetContentUnsupportedMediaType) valContentV1GetContentRes() {}

// Ref: #/components/schemas/val-content-v1.LocalizedNamesDto
type ValContentV1LocalizedNamesDto struct {
	ArMinusAE string    `json:"ar-AE"`
	DeMinusDE string    `json:"de-DE"`
	EnMinusGB OptString `json:"en-GB"`
	EnMinusUS string    `json:"en-US"`
	EsMinusES string    `json:"es-ES"`
	EsMinusMX string    `json:"es-MX"`
	FrMinusFR string    `json:"fr-FR"`
	IDMinusID string    `json:"id-ID"`
	ItMinusIT string    `json:"it-IT"`
	JaMinusJP string    `json:"ja-JP"`
	KoMinusKR string    `json:"ko-KR"`
	PlMinusPL string    `json:"pl-PL"`
	PtMinusBR string    `json:"pt-BR"`
	RuMinusRU string    `json:"ru-RU"`
	ThMinusTH string    `json:"th-TH"`
	TrMinusTR string    `json:"tr-TR"`
	ViMinusVN string    `json:"vi-VN"`
	ZhMinusCN string    `json:"zh-CN"`
	ZhMinusTW string    `json:"zh-TW"`
}

// GetArMinusAE returns the value of ArMinusAE.
func (s *ValContentV1LocalizedNamesDto) GetArMinusAE() string {
	return s.ArMinusAE
}

// GetDeMinusDE returns the value of DeMinusDE.
func (s *ValContentV1LocalizedNamesDto) GetDeMinusDE() string {
	return s.DeMinusDE
}

// GetEnMinusGB returns the value of EnMinusGB.
func (s *ValContentV1LocalizedNamesDto) GetEnMinusGB() OptString {
	return s.EnMinusGB
}

// GetEnMinusUS returns the value of EnMinusUS.
func (s *ValContentV1LocalizedNamesDto) GetEnMinusUS() string {
	return s.EnMinusUS
}

// GetEsMinusES returns the value of EsMinusES.
func (s *ValContentV1LocalizedNamesDto) GetEsMinusES() string {
	return s.EsMinusES
}

// GetEsMinusMX returns the value of EsMinusMX.
func (s *ValContentV1LocalizedNamesDto) GetEsMinusMX() string {
	return s.EsMinusMX
}

// GetFrMinusFR returns the value of FrMinusFR.
func (s *ValContentV1LocalizedNamesDto) GetFrMinusFR() string {
	return s.FrMinusFR
}

// GetIDMinusID returns the value of IDMinusID.
func (s *ValContentV1LocalizedNamesDto) GetIDMinusID() string {
	return s.IDMinusID
}

// GetItMinusIT returns the value of ItMinusIT.
func (s *ValContentV1LocalizedNamesDto) GetItMinusIT() string {
	return s.ItMinusIT
}

// GetJaMinusJP returns the value of JaMinusJP.
func (s *ValContentV1LocalizedNamesDto) GetJaMinusJP() string {
	return s.JaMinusJP
}

// GetKoMinusKR returns the value of KoMinusKR.
func (s *ValContentV1LocalizedNamesDto) GetKoMinusKR() string {
	return s.KoMinusKR
}

// GetPlMinusPL returns the value of PlMinusPL.
func (s *ValContentV1LocalizedNamesDto) GetPlMinusPL() string {
	return s.PlMinusPL
}

// GetPtMinusBR returns the value of PtMinusBR.
func (s *ValContentV1LocalizedNamesDto) GetPtMinusBR() string {
	return s.PtMinusBR
}

// GetRuMinusRU returns the value of RuMinusRU.
func (s *ValContentV1LocalizedNamesDto) GetRuMinusRU() string {
	return s.RuMinusRU
}

// GetThMinusTH returns the value of ThMinusTH.
func (s *ValContentV1LocalizedNamesDto) GetThMinusTH() string {
	return s.ThMinusTH
}

// GetTrMinusTR returns the value of TrMinusTR.
func (s *ValContentV1LocalizedNamesDto) GetTrMinusTR() string {
	return s.TrMinusTR
}

// GetViMinusVN returns the value of ViMinusVN.
func (s *ValContentV1LocalizedNamesDto) GetViMinusVN() string {
	return s.ViMinusVN
}

// GetZhMinusCN returns the value of ZhMinusCN.
func (s *ValContentV1LocalizedNamesDto) GetZhMinusCN() string {
	return s.ZhMinusCN
}

// GetZhMinusTW returns the value of ZhMinusTW.
func (s *ValContentV1LocalizedNamesDto) GetZhMinusTW() string {
	return s.ZhMinusTW
}

// SetArMinusAE sets the value of ArMinusAE.
func (s *ValContentV1LocalizedNamesDto) SetArMinusAE(val string) {
	s.ArMinusAE = val
}

// SetDeMinusDE sets the value of DeMinusDE.
func (s *ValContentV1LocalizedNamesDto) SetDeMinusDE(val string) {
	s.DeMinusDE = val
}

// SetEnMinusGB sets the value of EnMinusGB.
func (s *ValContentV1LocalizedNamesDto) SetEnMinusGB(val OptString) {
	s.EnMinusGB = val
}

// SetEnMinusUS sets the value of EnMinusUS.
func (s *ValContentV1LocalizedNamesDto) SetEnMinusUS(val string) {
	s.EnMinusUS = val
}

// SetEsMinusES sets the value of EsMinusES.
func (s *ValContentV1LocalizedNamesDto) SetEsMinusES(val string) {
	s.EsMinusES = val
}

// SetEsMinusMX sets the value of EsMinusMX.
func (s *ValContentV1LocalizedNamesDto) SetEsMinusMX(val string) {
	s.EsMinusMX = val
}

// SetFrMinusFR sets the value of FrMinusFR.
func (s *ValContentV1LocalizedNamesDto) SetFrMinusFR(val string) {
	s.FrMinusFR = val
}

// SetIDMinusID sets the value of IDMinusID.
func (s *ValContentV1LocalizedNamesDto) SetIDMinusID(val string) {
	s.IDMinusID = val
}

// SetItMinusIT sets the value of ItMinusIT.
func (s *ValContentV1LocalizedNamesDto) SetItMinusIT(val string) {
	s.ItMinusIT = val
}

// SetJaMinusJP sets the value of JaMinusJP.
func (s *ValContentV1LocalizedNamesDto) SetJaMinusJP(val string) {
	s.JaMinusJP = val
}

// SetKoMinusKR sets the value of KoMinusKR.
func (s *ValContentV1LocalizedNamesDto) SetKoMinusKR(val string) {
	s.KoMinusKR = val
}

// SetPlMinusPL sets the value of PlMinusPL.
func (s *ValContentV1LocalizedNamesDto) SetPlMinusPL(val string) {
	s.PlMinusPL = val
}

// SetPtMinusBR sets the value of PtMinusBR.
func (s *ValContentV1LocalizedNamesDto) SetPtMinusBR(val string) {
	s.PtMinusBR = val
}

// SetRuMinusRU sets the value of RuMinusRU.
func (s *ValContentV1LocalizedNamesDto) SetRuMinusRU(val string) {
	s.RuMinusRU = val
}

// SetThMinusTH sets the value of ThMinusTH.
func (s *ValContentV1LocalizedNamesDto) SetThMinusTH(val string) {
	s.ThMinusTH = val
}

// SetTrMinusTR sets the value of TrMinusTR.
func (s *ValContentV1LocalizedNamesDto) SetTrMinusTR(val string) {
	s.TrMinusTR = val
}

// SetViMinusVN sets the value of ViMinusVN.
func (s *ValContentV1LocalizedNamesDto) SetViMinusVN(val string) {
	s.ViMinusVN = val
}

// SetZhMinusCN sets the value of ZhMinusCN.
func (s *ValContentV1LocalizedNamesDto) SetZhMinusCN(val string) {
	s.ZhMinusCN = val
}

// SetZhMinusTW sets the value of ZhMinusTW.
func (s *ValContentV1LocalizedNamesDto) SetZhMinusTW(val string) {
	s.ZhMinusTW = val
}

// Ref: #/components/schemas/val-match-v1.AbilityCastsDto
type ValMatchV1AbilityCastsDto struct {
	GrenadeCasts  int32 `json:"grenadeCasts"`
	Ability1Casts int32 `json:"ability1Casts"`
	Ability2Casts int32 `json:"ability2Casts"`
	UltimateCasts int32 `json:"ultimateCasts"`
}

// GetGrenadeCasts returns the value of GrenadeCasts.
func (s *ValMatchV1AbilityCastsDto) GetGrenadeCasts() int32 {
	return s.GrenadeCasts
}

// GetAbility1Casts returns the value of Ability1Casts.
func (s *ValMatchV1AbilityCastsDto) GetAbility1Casts() int32 {
	return s.Ability1Casts
}

// GetAbility2Casts returns the value of Ability2Casts.
func (s *ValMatchV1AbilityCastsDto) GetAbility2Casts() int32 {
	return s.Ability2Casts
}

// GetUltimateCasts returns the value of UltimateCasts.
func (s *ValMatchV1AbilityCastsDto) GetUltimateCasts() int32 {
	return s.UltimateCasts
}

// SetGrenadeCasts sets the value of GrenadeCasts.
func (s *ValMatchV1AbilityCastsDto) SetGrenadeCasts(val int32) {
	s.GrenadeCasts = val
}

// SetAbility1Casts sets the value of Ability1Casts.
func (s *ValMatchV1AbilityCastsDto) SetAbility1Casts(val int32) {
	s.Ability1Casts = val
}

// SetAbility2Casts sets the value of Ability2Casts.
func (s *ValMatchV1AbilityCastsDto) SetAbility2Casts(val int32) {
	s.Ability2Casts = val
}

// SetUltimateCasts sets the value of UltimateCasts.
func (s *ValMatchV1AbilityCastsDto) SetUltimateCasts(val int32) {
	s.UltimateCasts = val
}

// Ref: #/components/schemas/val-match-v1.AbilityDto
type ValMatchV1AbilityDto struct {
	GrenadeEffects  OptString `json:"grenadeEffects"`
	Ability1Effects OptString `json:"ability1Effects"`
	Ability2Effects OptString `json:"ability2Effects"`
	UltimateEffects OptString `json:"ultimateEffects"`
}

// GetGrenadeEffects returns the value of GrenadeEffects.
func (s *ValMatchV1AbilityDto) GetGrenadeEffects() OptString {
	return s.GrenadeEffects
}

// GetAbility1Effects returns the value of Ability1Effects.
func (s *ValMatchV1AbilityDto) GetAbility1Effects() OptString {
	return s.Ability1Effects
}

// GetAbility2Effects returns the value of Ability2Effects.
func (s *ValMatchV1AbilityDto) GetAbility2Effects() OptString {
	return s.Ability2Effects
}

// GetUltimateEffects returns the value of UltimateEffects.
func (s *ValMatchV1AbilityDto) GetUltimateEffects() OptString {
	return s.UltimateEffects
}

// SetGrenadeEffects sets the value of GrenadeEffects.
func (s *ValMatchV1AbilityDto) SetGrenadeEffects(val OptString) {
	s.GrenadeEffects = val
}

// SetAbility1Effects sets the value of Ability1Effects.
func (s *ValMatchV1AbilityDto) SetAbility1Effects(val OptString) {
	s.Ability1Effects = val
}

// SetAbility2Effects sets the value of Ability2Effects.
func (s *ValMatchV1AbilityDto) SetAbility2Effects(val OptString) {
	s.Ability2Effects = val
}

// SetUltimateEffects sets the value of UltimateEffects.
func (s *ValMatchV1AbilityDto) SetUltimateEffects(val OptString) {
	s.UltimateEffects = val
}

// Ref: #/components/schemas/val-match-v1.CoachDto
type ValMatchV1CoachDto struct {
	Puuid  string `json:"puuid"`
	TeamId string `json:"teamId"`
}

// GetPuuid returns the value of Puuid.
func (s *ValMatchV1CoachDto) GetPuuid() string {
	return s.Puuid
}

// GetTeamId returns the value of TeamId.
func (s *ValMatchV1CoachDto) GetTeamId() string {
	return s.TeamId
}

// SetPuuid sets the value of Puuid.
func (s *ValMatchV1CoachDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetTeamId sets the value of TeamId.
func (s *ValMatchV1CoachDto) SetTeamId(val string) {
	s.TeamId = val
}

// Ref: #/components/schemas/val-match-v1.DamageDto
type ValMatchV1DamageDto struct {
	// PUUID.
	Receiver  string `json:"receiver"`
	Damage    int32  `json:"damage"`
	Legshots  int32  `json:"legshots"`
	Bodyshots int32  `json:"bodyshots"`
	Headshots int32  `json:"headshots"`
}

// GetReceiver returns the value of Receiver.
func (s *ValMatchV1DamageDto) GetReceiver() string {
	return s.Receiver
}

// GetDamage returns the value of Damage.
func (s *ValMatchV1DamageDto) GetDamage() int32 {
	return s.Damage
}

// GetLegshots returns the value of Legshots.
func (s *ValMatchV1DamageDto) GetLegshots() int32 {
	return s.Legshots
}

// GetBodyshots returns the value of Bodyshots.
func (s *ValMatchV1DamageDto) GetBodyshots() int32 {
	return s.Bodyshots
}

// GetHeadshots returns the value of Headshots.
func (s *ValMatchV1DamageDto) GetHeadshots() int32 {
	return s.Headshots
}

// SetReceiver sets the value of Receiver.
func (s *ValMatchV1DamageDto) SetReceiver(val string) {
	s.Receiver = val
}

// SetDamage sets the value of Damage.
func (s *ValMatchV1DamageDto) SetDamage(val int32) {
	s.Damage = val
}

// SetLegshots sets the value of Legshots.
func (s *ValMatchV1DamageDto) SetLegshots(val int32) {
	s.Legshots = val
}

// SetBodyshots sets the value of Bodyshots.
func (s *ValMatchV1DamageDto) SetBodyshots(val int32) {
	s.Bodyshots = val
}

// SetHeadshots sets the value of Headshots.
func (s *ValMatchV1DamageDto) SetHeadshots(val int32) {
	s.Headshots = val
}

// Ref: #/components/schemas/val-match-v1.EconomyDto
type ValMatchV1EconomyDto struct {
	LoadoutValue int32  `json:"loadoutValue"`
	Weapon       string `json:"weapon"`
	Armor        string `json:"armor"`
	Remaining    int32  `json:"remaining"`
	Spent        int32  `json:"spent"`
}

// GetLoadoutValue returns the value of LoadoutValue.
func (s *ValMatchV1EconomyDto) GetLoadoutValue() int32 {
	return s.LoadoutValue
}

// GetWeapon returns the value of Weapon.
func (s *ValMatchV1EconomyDto) GetWeapon() string {
	return s.Weapon
}

// GetArmor returns the value of Armor.
func (s *ValMatchV1EconomyDto) GetArmor() string {
	return s.Armor
}

// GetRemaining returns the value of Remaining.
func (s *ValMatchV1EconomyDto) GetRemaining() int32 {
	return s.Remaining
}

// GetSpent returns the value of Spent.
func (s *ValMatchV1EconomyDto) GetSpent() int32 {
	return s.Spent
}

// SetLoadoutValue sets the value of LoadoutValue.
func (s *ValMatchV1EconomyDto) SetLoadoutValue(val int32) {
	s.LoadoutValue = val
}

// SetWeapon sets the value of Weapon.
func (s *ValMatchV1EconomyDto) SetWeapon(val string) {
	s.Weapon = val
}

// SetArmor sets the value of Armor.
func (s *ValMatchV1EconomyDto) SetArmor(val string) {
	s.Armor = val
}

// SetRemaining sets the value of Remaining.
func (s *ValMatchV1EconomyDto) SetRemaining(val int32) {
	s.Remaining = val
}

// SetSpent sets the value of Spent.
func (s *ValMatchV1EconomyDto) SetSpent(val int32) {
	s.Spent = val
}

// Ref: #/components/schemas/val-match-v1.FinishingDamageDto
type ValMatchV1FinishingDamageDto struct {
	DamageType          string `json:"damageType"`
	DamageItem          string `json:"damageItem"`
	IsSecondaryFireMode bool   `json:"isSecondaryFireMode"`
}

// GetDamageType returns the value of DamageType.
func (s *ValMatchV1FinishingDamageDto) GetDamageType() string {
	return s.DamageType
}

// GetDamageItem returns the value of DamageItem.
func (s *ValMatchV1FinishingDamageDto) GetDamageItem() string {
	return s.DamageItem
}

// GetIsSecondaryFireMode returns the value of IsSecondaryFireMode.
func (s *ValMatchV1FinishingDamageDto) GetIsSecondaryFireMode() bool {
	return s.IsSecondaryFireMode
}

// SetDamageType sets the value of DamageType.
func (s *ValMatchV1FinishingDamageDto) SetDamageType(val string) {
	s.DamageType = val
}

// SetDamageItem sets the value of DamageItem.
func (s *ValMatchV1FinishingDamageDto) SetDamageItem(val string) {
	s.DamageItem = val
}

// SetIsSecondaryFireMode sets the value of IsSecondaryFireMode.
func (s *ValMatchV1FinishingDamageDto) SetIsSecondaryFireMode(val bool) {
	s.IsSecondaryFireMode = val
}

// ValMatchV1GetMatchBadGateway is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchBadGateway struct{}

func (*ValMatchV1GetMatchBadGateway) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchBadRequest is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchBadRequest struct{}

func (*ValMatchV1GetMatchBadRequest) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchForbidden is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchForbidden struct{}

func (*ValMatchV1GetMatchForbidden) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchGatewayTimeout is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchGatewayTimeout struct{}

func (*ValMatchV1GetMatchGatewayTimeout) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchInternalServerError is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchInternalServerError struct{}

func (*ValMatchV1GetMatchInternalServerError) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchMethodNotAllowed is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchMethodNotAllowed struct{}

func (*ValMatchV1GetMatchMethodNotAllowed) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchNotFound is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchNotFound struct{}

func (*ValMatchV1GetMatchNotFound) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchServiceUnavailable is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchServiceUnavailable struct{}

func (*ValMatchV1GetMatchServiceUnavailable) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchTooManyRequests is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchTooManyRequests struct{}

func (*ValMatchV1GetMatchTooManyRequests) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchUnauthorized is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchUnauthorized struct{}

func (*ValMatchV1GetMatchUnauthorized) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchUnsupportedMediaType is response for ValMatchV1GetMatch operation.
type ValMatchV1GetMatchUnsupportedMediaType struct{}

func (*ValMatchV1GetMatchUnsupportedMediaType) valMatchV1GetMatchRes() {}

// ValMatchV1GetMatchlistBadGateway is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistBadGateway struct{}

func (*ValMatchV1GetMatchlistBadGateway) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistBadRequest is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistBadRequest struct{}

func (*ValMatchV1GetMatchlistBadRequest) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistForbidden is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistForbidden struct{}

func (*ValMatchV1GetMatchlistForbidden) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistGatewayTimeout is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistGatewayTimeout struct{}

func (*ValMatchV1GetMatchlistGatewayTimeout) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistInternalServerError is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistInternalServerError struct{}

func (*ValMatchV1GetMatchlistInternalServerError) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistMethodNotAllowed is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistMethodNotAllowed struct{}

func (*ValMatchV1GetMatchlistMethodNotAllowed) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistNotFound is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistNotFound struct{}

func (*ValMatchV1GetMatchlistNotFound) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistServiceUnavailable is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistServiceUnavailable struct{}

func (*ValMatchV1GetMatchlistServiceUnavailable) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistTooManyRequests is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistTooManyRequests struct{}

func (*ValMatchV1GetMatchlistTooManyRequests) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistUnauthorized is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistUnauthorized struct{}

func (*ValMatchV1GetMatchlistUnauthorized) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetMatchlistUnsupportedMediaType is response for ValMatchV1GetMatchlist operation.
type ValMatchV1GetMatchlistUnsupportedMediaType struct{}

func (*ValMatchV1GetMatchlistUnsupportedMediaType) valMatchV1GetMatchlistRes() {}

// ValMatchV1GetRecentBadGateway is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentBadGateway struct{}

func (*ValMatchV1GetRecentBadGateway) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentBadRequest is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentBadRequest struct{}

func (*ValMatchV1GetRecentBadRequest) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentForbidden is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentForbidden struct{}

func (*ValMatchV1GetRecentForbidden) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentGatewayTimeout is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentGatewayTimeout struct{}

func (*ValMatchV1GetRecentGatewayTimeout) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentInternalServerError is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentInternalServerError struct{}

func (*ValMatchV1GetRecentInternalServerError) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentMethodNotAllowed is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentMethodNotAllowed struct{}

func (*ValMatchV1GetRecentMethodNotAllowed) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentNotFound is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentNotFound struct{}

func (*ValMatchV1GetRecentNotFound) valMatchV1GetRecentRes() {}

type ValMatchV1GetRecentQueue string

const (
	ValMatchV1GetRecentQueueCompetitive    ValMatchV1GetRecentQueue = "competitive"
	ValMatchV1GetRecentQueueUnrated        ValMatchV1GetRecentQueue = "unrated"
	ValMatchV1GetRecentQueueSpikerush      ValMatchV1GetRecentQueue = "spikerush"
	ValMatchV1GetRecentQueueTournamentmode ValMatchV1GetRecentQueue = "tournamentmode"
	ValMatchV1GetRecentQueueDeathmatch     ValMatchV1GetRecentQueue = "deathmatch"
	ValMatchV1GetRecentQueueOnefa          ValMatchV1GetRecentQueue = "onefa"
	ValMatchV1GetRecentQueueGgteam         ValMatchV1GetRecentQueue = "ggteam"
	ValMatchV1GetRecentQueueHurm           ValMatchV1GetRecentQueue = "hurm"
	ValMatchV1GetRecentQueueSwiftplay      ValMatchV1GetRecentQueue = "swiftplay"
)

// AllValues returns all ValMatchV1GetRecentQueue values.
func (ValMatchV1GetRecentQueue) AllValues() []ValMatchV1GetRecentQueue {
	return []ValMatchV1GetRecentQueue{
		ValMatchV1GetRecentQueueCompetitive,
		ValMatchV1GetRecentQueueUnrated,
		ValMatchV1GetRecentQueueSpikerush,
		ValMatchV1GetRecentQueueTournamentmode,
		ValMatchV1GetRecentQueueDeathmatch,
		ValMatchV1GetRecentQueueOnefa,
		ValMatchV1GetRecentQueueGgteam,
		ValMatchV1GetRecentQueueHurm,
		ValMatchV1GetRecentQueueSwiftplay,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValMatchV1GetRecentQueue) MarshalText() ([]byte, error) {
	switch s {
	case ValMatchV1GetRecentQueueCompetitive:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueUnrated:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueSpikerush:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueTournamentmode:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueDeathmatch:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueOnefa:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueGgteam:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueHurm:
		return []byte(s), nil
	case ValMatchV1GetRecentQueueSwiftplay:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValMatchV1GetRecentQueue) UnmarshalText(data []byte) error {
	switch ValMatchV1GetRecentQueue(data) {
	case ValMatchV1GetRecentQueueCompetitive:
		*s = ValMatchV1GetRecentQueueCompetitive
		return nil
	case ValMatchV1GetRecentQueueUnrated:
		*s = ValMatchV1GetRecentQueueUnrated
		return nil
	case ValMatchV1GetRecentQueueSpikerush:
		*s = ValMatchV1GetRecentQueueSpikerush
		return nil
	case ValMatchV1GetRecentQueueTournamentmode:
		*s = ValMatchV1GetRecentQueueTournamentmode
		return nil
	case ValMatchV1GetRecentQueueDeathmatch:
		*s = ValMatchV1GetRecentQueueDeathmatch
		return nil
	case ValMatchV1GetRecentQueueOnefa:
		*s = ValMatchV1GetRecentQueueOnefa
		return nil
	case ValMatchV1GetRecentQueueGgteam:
		*s = ValMatchV1GetRecentQueueGgteam
		return nil
	case ValMatchV1GetRecentQueueHurm:
		*s = ValMatchV1GetRecentQueueHurm
		return nil
	case ValMatchV1GetRecentQueueSwiftplay:
		*s = ValMatchV1GetRecentQueueSwiftplay
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// ValMatchV1GetRecentServiceUnavailable is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentServiceUnavailable struct{}

func (*ValMatchV1GetRecentServiceUnavailable) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentTooManyRequests is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentTooManyRequests struct{}

func (*ValMatchV1GetRecentTooManyRequests) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentUnauthorized is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentUnauthorized struct{}

func (*ValMatchV1GetRecentUnauthorized) valMatchV1GetRecentRes() {}

// ValMatchV1GetRecentUnsupportedMediaType is response for ValMatchV1GetRecent operation.
type ValMatchV1GetRecentUnsupportedMediaType struct{}

func (*ValMatchV1GetRecentUnsupportedMediaType) valMatchV1GetRecentRes() {}

// Ref: #/components/schemas/val-match-v1.KillDto
type ValMatchV1KillDto struct {
	TimeSinceGameStartMillis  int32 `json:"timeSinceGameStartMillis"`
	TimeSinceRoundStartMillis int32 `json:"timeSinceRoundStartMillis"`
	// PUUID.
	Killer string `json:"killer"`
	// PUUID.
	Victim         string                `json:"victim"`
	VictimLocation ValMatchV1LocationDto `json:"victimLocation"`
	// List of PUUIDs.
	Assistants      []string                       `json:"assistants"`
	PlayerLocations []ValMatchV1PlayerLocationsDto `json:"playerLocations"`
	FinishingDamage ValMatchV1FinishingDamageDto   `json:"finishingDamage"`
}

// GetTimeSinceGameStartMillis returns the value of TimeSinceGameStartMillis.
func (s *ValMatchV1KillDto) GetTimeSinceGameStartMillis() int32 {
	return s.TimeSinceGameStartMillis
}

// GetTimeSinceRoundStartMillis returns the value of TimeSinceRoundStartMillis.
func (s *ValMatchV1KillDto) GetTimeSinceRoundStartMillis() int32 {
	return s.TimeSinceRoundStartMillis
}

// GetKiller returns the value of Killer.
func (s *ValMatchV1KillDto) GetKiller() string {
	return s.Killer
}

// GetVictim returns the value of Victim.
func (s *ValMatchV1KillDto) GetVictim() string {
	return s.Victim
}

// GetVictimLocation returns the value of VictimLocation.
func (s *ValMatchV1KillDto) GetVictimLocation() ValMatchV1LocationDto {
	return s.VictimLocation
}

// GetAssistants returns the value of Assistants.
func (s *ValMatchV1KillDto) GetAssistants() []string {
	return s.Assistants
}

// GetPlayerLocations returns the value of PlayerLocations.
func (s *ValMatchV1KillDto) GetPlayerLocations() []ValMatchV1PlayerLocationsDto {
	return s.PlayerLocations
}

// GetFinishingDamage returns the value of FinishingDamage.
func (s *ValMatchV1KillDto) GetFinishingDamage() ValMatchV1FinishingDamageDto {
	return s.FinishingDamage
}

// SetTimeSinceGameStartMillis sets the value of TimeSinceGameStartMillis.
func (s *ValMatchV1KillDto) SetTimeSinceGameStartMillis(val int32) {
	s.TimeSinceGameStartMillis = val
}

// SetTimeSinceRoundStartMillis sets the value of TimeSinceRoundStartMillis.
func (s *ValMatchV1KillDto) SetTimeSinceRoundStartMillis(val int32) {
	s.TimeSinceRoundStartMillis = val
}

// SetKiller sets the value of Killer.
func (s *ValMatchV1KillDto) SetKiller(val string) {
	s.Killer = val
}

// SetVictim sets the value of Victim.
func (s *ValMatchV1KillDto) SetVictim(val string) {
	s.Victim = val
}

// SetVictimLocation sets the value of VictimLocation.
func (s *ValMatchV1KillDto) SetVictimLocation(val ValMatchV1LocationDto) {
	s.VictimLocation = val
}

// SetAssistants sets the value of Assistants.
func (s *ValMatchV1KillDto) SetAssistants(val []string) {
	s.Assistants = val
}

// SetPlayerLocations sets the value of PlayerLocations.
func (s *ValMatchV1KillDto) SetPlayerLocations(val []ValMatchV1PlayerLocationsDto) {
	s.PlayerLocations = val
}

// SetFinishingDamage sets the value of FinishingDamage.
func (s *ValMatchV1KillDto) SetFinishingDamage(val ValMatchV1FinishingDamageDto) {
	s.FinishingDamage = val
}

// Ref: #/components/schemas/val-match-v1.LocationDto
type ValMatchV1LocationDto struct {
	X int32 `json:"x"`
	Y int32 `json:"y"`
}

// GetX returns the value of X.
func (s *ValMatchV1LocationDto) GetX() int32 {
	return s.X
}

// GetY returns the value of Y.
func (s *ValMatchV1LocationDto) GetY() int32 {
	return s.Y
}

// SetX sets the value of X.
func (s *ValMatchV1LocationDto) SetX(val int32) {
	s.X = val
}

// SetY sets the value of Y.
func (s *ValMatchV1LocationDto) SetY(val int32) {
	s.Y = val
}

// Ref: #/components/schemas/val-match-v1.MatchDto
type ValMatchV1MatchDto struct {
	MatchInfo    ValMatchV1MatchInfoDto     `json:"matchInfo"`
	Players      []ValMatchV1PlayerDto      `json:"players"`
	Coaches      []ValMatchV1CoachDto       `json:"coaches"`
	Teams        []ValMatchV1TeamDto        `json:"teams"`
	RoundResults []ValMatchV1RoundResultDto `json:"roundResults"`
}

// GetMatchInfo returns the value of MatchInfo.
func (s *ValMatchV1MatchDto) GetMatchInfo() ValMatchV1MatchInfoDto {
	return s.MatchInfo
}

// GetPlayers returns the value of Players.
func (s *ValMatchV1MatchDto) GetPlayers() []ValMatchV1PlayerDto {
	return s.Players
}

// GetCoaches returns the value of Coaches.
func (s *ValMatchV1MatchDto) GetCoaches() []ValMatchV1CoachDto {
	return s.Coaches
}

// GetTeams returns the value of Teams.
func (s *ValMatchV1MatchDto) GetTeams() []ValMatchV1TeamDto {
	return s.Teams
}

// GetRoundResults returns the value of RoundResults.
func (s *ValMatchV1MatchDto) GetRoundResults() []ValMatchV1RoundResultDto {
	return s.RoundResults
}

// SetMatchInfo sets the value of MatchInfo.
func (s *ValMatchV1MatchDto) SetMatchInfo(val ValMatchV1MatchInfoDto) {
	s.MatchInfo = val
}

// SetPlayers sets the value of Players.
func (s *ValMatchV1MatchDto) SetPlayers(val []ValMatchV1PlayerDto) {
	s.Players = val
}

// SetCoaches sets the value of Coaches.
func (s *ValMatchV1MatchDto) SetCoaches(val []ValMatchV1CoachDto) {
	s.Coaches = val
}

// SetTeams sets the value of Teams.
func (s *ValMatchV1MatchDto) SetTeams(val []ValMatchV1TeamDto) {
	s.Teams = val
}

// SetRoundResults sets the value of RoundResults.
func (s *ValMatchV1MatchDto) SetRoundResults(val []ValMatchV1RoundResultDto) {
	s.RoundResults = val
}

func (*ValMatchV1MatchDto) valMatchV1GetMatchRes() {}

// Ref: #/components/schemas/val-match-v1.MatchInfoDto
type ValMatchV1MatchInfoDto struct {
	MatchId            string                                 `json:"matchId"`
	MapId              string                                 `json:"mapId"`
	GameVersion        string                                 `json:"gameVersion"`
	GameLengthMillis   OptInt32                               `json:"gameLengthMillis"`
	Region             string                                 `json:"region"`
	GameStartMillis    int64                                  `json:"gameStartMillis"`
	ProvisioningFlowId string                                 `json:"provisioningFlowId"`
	IsCompleted        bool                                   `json:"isCompleted"`
	CustomGameName     string                                 `json:"customGameName"`
	QueueId            string                                 `json:"queueId"`
	GameMode           string                                 `json:"gameMode"`
	IsRanked           bool                                   `json:"isRanked"`
	SeasonId           string                                 `json:"seasonId"`
	PremierMatchInfo   ValMatchV1MatchInfoDtoPremierMatchInfo `json:"premierMatchInfo"`
}

// GetMatchId returns the value of MatchId.
func (s *ValMatchV1MatchInfoDto) GetMatchId() string {
	return s.MatchId
}

// GetMapId returns the value of MapId.
func (s *ValMatchV1MatchInfoDto) GetMapId() string {
	return s.MapId
}

// GetGameVersion returns the value of GameVersion.
func (s *ValMatchV1MatchInfoDto) GetGameVersion() string {
	return s.GameVersion
}

// GetGameLengthMillis returns the value of GameLengthMillis.
func (s *ValMatchV1MatchInfoDto) GetGameLengthMillis() OptInt32 {
	return s.GameLengthMillis
}

// GetRegion returns the value of Region.
func (s *ValMatchV1MatchInfoDto) GetRegion() string {
	return s.Region
}

// GetGameStartMillis returns the value of GameStartMillis.
func (s *ValMatchV1MatchInfoDto) GetGameStartMillis() int64 {
	return s.GameStartMillis
}

// GetProvisioningFlowId returns the value of ProvisioningFlowId.
func (s *ValMatchV1MatchInfoDto) GetProvisioningFlowId() string {
	return s.ProvisioningFlowId
}

// GetIsCompleted returns the value of IsCompleted.
func (s *ValMatchV1MatchInfoDto) GetIsCompleted() bool {
	return s.IsCompleted
}

// GetCustomGameName returns the value of CustomGameName.
func (s *ValMatchV1MatchInfoDto) GetCustomGameName() string {
	return s.CustomGameName
}

// GetQueueId returns the value of QueueId.
func (s *ValMatchV1MatchInfoDto) GetQueueId() string {
	return s.QueueId
}

// GetGameMode returns the value of GameMode.
func (s *ValMatchV1MatchInfoDto) GetGameMode() string {
	return s.GameMode
}

// GetIsRanked returns the value of IsRanked.
func (s *ValMatchV1MatchInfoDto) GetIsRanked() bool {
	return s.IsRanked
}

// GetSeasonId returns the value of SeasonId.
func (s *ValMatchV1MatchInfoDto) GetSeasonId() string {
	return s.SeasonId
}

// GetPremierMatchInfo returns the value of PremierMatchInfo.
func (s *ValMatchV1MatchInfoDto) GetPremierMatchInfo() ValMatchV1MatchInfoDtoPremierMatchInfo {
	return s.PremierMatchInfo
}

// SetMatchId sets the value of MatchId.
func (s *ValMatchV1MatchInfoDto) SetMatchId(val string) {
	s.MatchId = val
}

// SetMapId sets the value of MapId.
func (s *ValMatchV1MatchInfoDto) SetMapId(val string) {
	s.MapId = val
}

// SetGameVersion sets the value of GameVersion.
func (s *ValMatchV1MatchInfoDto) SetGameVersion(val string) {
	s.GameVersion = val
}

// SetGameLengthMillis sets the value of GameLengthMillis.
func (s *ValMatchV1MatchInfoDto) SetGameLengthMillis(val OptInt32) {
	s.GameLengthMillis = val
}

// SetRegion sets the value of Region.
func (s *ValMatchV1MatchInfoDto) SetRegion(val string) {
	s.Region = val
}

// SetGameStartMillis sets the value of GameStartMillis.
func (s *ValMatchV1MatchInfoDto) SetGameStartMillis(val int64) {
	s.GameStartMillis = val
}

// SetProvisioningFlowId sets the value of ProvisioningFlowId.
func (s *ValMatchV1MatchInfoDto) SetProvisioningFlowId(val string) {
	s.ProvisioningFlowId = val
}

// SetIsCompleted sets the value of IsCompleted.
func (s *ValMatchV1MatchInfoDto) SetIsCompleted(val bool) {
	s.IsCompleted = val
}

// SetCustomGameName sets the value of CustomGameName.
func (s *ValMatchV1MatchInfoDto) SetCustomGameName(val string) {
	s.CustomGameName = val
}

// SetQueueId sets the value of QueueId.
func (s *ValMatchV1MatchInfoDto) SetQueueId(val string) {
	s.QueueId = val
}

// SetGameMode sets the value of GameMode.
func (s *ValMatchV1MatchInfoDto) SetGameMode(val string) {
	s.GameMode = val
}

// SetIsRanked sets the value of IsRanked.
func (s *ValMatchV1MatchInfoDto) SetIsRanked(val bool) {
	s.IsRanked = val
}

// SetSeasonId sets the value of SeasonId.
func (s *ValMatchV1MatchInfoDto) SetSeasonId(val string) {
	s.SeasonId = val
}

// SetPremierMatchInfo sets the value of PremierMatchInfo.
func (s *ValMatchV1MatchInfoDto) SetPremierMatchInfo(val ValMatchV1MatchInfoDtoPremierMatchInfo) {
	s.PremierMatchInfo = val
}

type ValMatchV1MatchInfoDtoPremierMatchInfo struct{}

// Ref: #/components/schemas/val-match-v1.MatchlistDto
type ValMatchV1MatchlistDto struct {
	Puuid   string                        `json:"puuid"`
	History []ValMatchV1MatchlistEntryDto `json:"history"`
}

// GetPuuid returns the value of Puuid.
func (s *ValMatchV1MatchlistDto) GetPuuid() string {
	return s.Puuid
}

// GetHistory returns the value of History.
func (s *ValMatchV1MatchlistDto) GetHistory() []ValMatchV1MatchlistEntryDto {
	return s.History
}

// SetPuuid sets the value of Puuid.
func (s *ValMatchV1MatchlistDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetHistory sets the value of History.
func (s *ValMatchV1MatchlistDto) SetHistory(val []ValMatchV1MatchlistEntryDto) {
	s.History = val
}

func (*ValMatchV1MatchlistDto) valMatchV1GetMatchlistRes() {}

// Ref: #/components/schemas/val-match-v1.MatchlistEntryDto
type ValMatchV1MatchlistEntryDto struct {
	MatchId             string `json:"matchId"`
	GameStartTimeMillis int64  `json:"gameStartTimeMillis"`
	QueueId             string `json:"queueId"`
}

// GetMatchId returns the value of MatchId.
func (s *ValMatchV1MatchlistEntryDto) GetMatchId() string {
	return s.MatchId
}

// GetGameStartTimeMillis returns the value of GameStartTimeMillis.
func (s *ValMatchV1MatchlistEntryDto) GetGameStartTimeMillis() int64 {
	return s.GameStartTimeMillis
}

// GetQueueId returns the value of QueueId.
func (s *ValMatchV1MatchlistEntryDto) GetQueueId() string {
	return s.QueueId
}

// SetMatchId sets the value of MatchId.
func (s *ValMatchV1MatchlistEntryDto) SetMatchId(val string) {
	s.MatchId = val
}

// SetGameStartTimeMillis sets the value of GameStartTimeMillis.
func (s *ValMatchV1MatchlistEntryDto) SetGameStartTimeMillis(val int64) {
	s.GameStartTimeMillis = val
}

// SetQueueId sets the value of QueueId.
func (s *ValMatchV1MatchlistEntryDto) SetQueueId(val string) {
	s.QueueId = val
}

// Ref: #/components/schemas/val-match-v1.PlayerDto
type ValMatchV1PlayerDto struct {
	Puuid           string                      `json:"puuid"`
	GameName        string                      `json:"gameName"`
	TagLine         string                      `json:"tagLine"`
	TeamId          string                      `json:"teamId"`
	PartyId         string                      `json:"partyId"`
	CharacterId     OptString                   `json:"characterId"`
	Stats           OptValMatchV1PlayerStatsDto `json:"stats"`
	CompetitiveTier int32                       `json:"competitiveTier"`
	IsObserver      bool                        `json:"isObserver"`
	PlayerCard      string                      `json:"playerCard"`
	PlayerTitle     string                      `json:"playerTitle"`
	AccountLevel    int32                       `json:"accountLevel"`
}

// GetPuuid returns the value of Puuid.
func (s *ValMatchV1PlayerDto) GetPuuid() string {
	return s.Puuid
}

// GetGameName returns the value of GameName.
func (s *ValMatchV1PlayerDto) GetGameName() string {
	return s.GameName
}

// GetTagLine returns the value of TagLine.
func (s *ValMatchV1PlayerDto) GetTagLine() string {
	return s.TagLine
}

// GetTeamId returns the value of TeamId.
func (s *ValMatchV1PlayerDto) GetTeamId() string {
	return s.TeamId
}

// GetPartyId returns the value of PartyId.
func (s *ValMatchV1PlayerDto) GetPartyId() string {
	return s.PartyId
}

// GetCharacterId returns the value of CharacterId.
func (s *ValMatchV1PlayerDto) GetCharacterId() OptString {
	return s.CharacterId
}

// GetStats returns the value of Stats.
func (s *ValMatchV1PlayerDto) GetStats() OptValMatchV1PlayerStatsDto {
	return s.Stats
}

// GetCompetitiveTier returns the value of CompetitiveTier.
func (s *ValMatchV1PlayerDto) GetCompetitiveTier() int32 {
	return s.CompetitiveTier
}

// GetIsObserver returns the value of IsObserver.
func (s *ValMatchV1PlayerDto) GetIsObserver() bool {
	return s.IsObserver
}

// GetPlayerCard returns the value of PlayerCard.
func (s *ValMatchV1PlayerDto) GetPlayerCard() string {
	return s.PlayerCard
}

// GetPlayerTitle returns the value of PlayerTitle.
func (s *ValMatchV1PlayerDto) GetPlayerTitle() string {
	return s.PlayerTitle
}

// GetAccountLevel returns the value of AccountLevel.
func (s *ValMatchV1PlayerDto) GetAccountLevel() int32 {
	return s.AccountLevel
}

// SetPuuid sets the value of Puuid.
func (s *ValMatchV1PlayerDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetGameName sets the value of GameName.
func (s *ValMatchV1PlayerDto) SetGameName(val string) {
	s.GameName = val
}

// SetTagLine sets the value of TagLine.
func (s *ValMatchV1PlayerDto) SetTagLine(val string) {
	s.TagLine = val
}

// SetTeamId sets the value of TeamId.
func (s *ValMatchV1PlayerDto) SetTeamId(val string) {
	s.TeamId = val
}

// SetPartyId sets the value of PartyId.
func (s *ValMatchV1PlayerDto) SetPartyId(val string) {
	s.PartyId = val
}

// SetCharacterId sets the value of CharacterId.
func (s *ValMatchV1PlayerDto) SetCharacterId(val OptString) {
	s.CharacterId = val
}

// SetStats sets the value of Stats.
func (s *ValMatchV1PlayerDto) SetStats(val OptValMatchV1PlayerStatsDto) {
	s.Stats = val
}

// SetCompetitiveTier sets the value of CompetitiveTier.
func (s *ValMatchV1PlayerDto) SetCompetitiveTier(val int32) {
	s.CompetitiveTier = val
}

// SetIsObserver sets the value of IsObserver.
func (s *ValMatchV1PlayerDto) SetIsObserver(val bool) {
	s.IsObserver = val
}

// SetPlayerCard sets the value of PlayerCard.
func (s *ValMatchV1PlayerDto) SetPlayerCard(val string) {
	s.PlayerCard = val
}

// SetPlayerTitle sets the value of PlayerTitle.
func (s *ValMatchV1PlayerDto) SetPlayerTitle(val string) {
	s.PlayerTitle = val
}

// SetAccountLevel sets the value of AccountLevel.
func (s *ValMatchV1PlayerDto) SetAccountLevel(val int32) {
	s.AccountLevel = val
}

// Ref: #/components/schemas/val-match-v1.PlayerLocationsDto
type ValMatchV1PlayerLocationsDto struct {
	Puuid       string                `json:"puuid"`
	ViewRadians float32               `json:"viewRadians"`
	Location    ValMatchV1LocationDto `json:"location"`
}

// GetPuuid returns the value of Puuid.
func (s *ValMatchV1PlayerLocationsDto) GetPuuid() string {
	return s.Puuid
}

// GetViewRadians returns the value of ViewRadians.
func (s *ValMatchV1PlayerLocationsDto) GetViewRadians() float32 {
	return s.ViewRadians
}

// GetLocation returns the value of Location.
func (s *ValMatchV1PlayerLocationsDto) GetLocation() ValMatchV1LocationDto {
	return s.Location
}

// SetPuuid sets the value of Puuid.
func (s *ValMatchV1PlayerLocationsDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetViewRadians sets the value of ViewRadians.
func (s *ValMatchV1PlayerLocationsDto) SetViewRadians(val float32) {
	s.ViewRadians = val
}

// SetLocation sets the value of Location.
func (s *ValMatchV1PlayerLocationsDto) SetLocation(val ValMatchV1LocationDto) {
	s.Location = val
}

// Ref: #/components/schemas/val-match-v1.PlayerRoundStatsDto
type ValMatchV1PlayerRoundStatsDto struct {
	Puuid   string                `json:"puuid"`
	Kills   []ValMatchV1KillDto   `json:"kills"`
	Damage  []ValMatchV1DamageDto `json:"damage"`
	Score   int32                 `json:"score"`
	Economy ValMatchV1EconomyDto  `json:"economy"`
	Ability ValMatchV1AbilityDto  `json:"ability"`
}

// GetPuuid returns the value of Puuid.
func (s *ValMatchV1PlayerRoundStatsDto) GetPuuid() string {
	return s.Puuid
}

// GetKills returns the value of Kills.
func (s *ValMatchV1PlayerRoundStatsDto) GetKills() []ValMatchV1KillDto {
	return s.Kills
}

// GetDamage returns the value of Damage.
func (s *ValMatchV1PlayerRoundStatsDto) GetDamage() []ValMatchV1DamageDto {
	return s.Damage
}

// GetScore returns the value of Score.
func (s *ValMatchV1PlayerRoundStatsDto) GetScore() int32 {
	return s.Score
}

// GetEconomy returns the value of Economy.
func (s *ValMatchV1PlayerRoundStatsDto) GetEconomy() ValMatchV1EconomyDto {
	return s.Economy
}

// GetAbility returns the value of Ability.
func (s *ValMatchV1PlayerRoundStatsDto) GetAbility() ValMatchV1AbilityDto {
	return s.Ability
}

// SetPuuid sets the value of Puuid.
func (s *ValMatchV1PlayerRoundStatsDto) SetPuuid(val string) {
	s.Puuid = val
}

// SetKills sets the value of Kills.
func (s *ValMatchV1PlayerRoundStatsDto) SetKills(val []ValMatchV1KillDto) {
	s.Kills = val
}

// SetDamage sets the value of Damage.
func (s *ValMatchV1PlayerRoundStatsDto) SetDamage(val []ValMatchV1DamageDto) {
	s.Damage = val
}

// SetScore sets the value of Score.
func (s *ValMatchV1PlayerRoundStatsDto) SetScore(val int32) {
	s.Score = val
}

// SetEconomy sets the value of Economy.
func (s *ValMatchV1PlayerRoundStatsDto) SetEconomy(val ValMatchV1EconomyDto) {
	s.Economy = val
}

// SetAbility sets the value of Ability.
func (s *ValMatchV1PlayerRoundStatsDto) SetAbility(val ValMatchV1AbilityDto) {
	s.Ability = val
}

// Ref: #/components/schemas/val-match-v1.PlayerStatsDto
type ValMatchV1PlayerStatsDto struct {
	Score          int32                        `json:"score"`
	RoundsPlayed   int32                        `json:"roundsPlayed"`
	Kills          int32                        `json:"kills"`
	Deaths         int32                        `json:"deaths"`
	Assists        int32                        `json:"assists"`
	PlaytimeMillis int32                        `json:"playtimeMillis"`
	AbilityCasts   OptValMatchV1AbilityCastsDto `json:"abilityCasts"`
}

// GetScore returns the value of Score.
func (s *ValMatchV1PlayerStatsDto) GetScore() int32 {
	return s.Score
}

// GetRoundsPlayed returns the value of RoundsPlayed.
func (s *ValMatchV1PlayerStatsDto) GetRoundsPlayed() int32 {
	return s.RoundsPlayed
}

// GetKills returns the value of Kills.
func (s *ValMatchV1PlayerStatsDto) GetKills() int32 {
	return s.Kills
}

// GetDeaths returns the value of Deaths.
func (s *ValMatchV1PlayerStatsDto) GetDeaths() int32 {
	return s.Deaths
}

// GetAssists returns the value of Assists.
func (s *ValMatchV1PlayerStatsDto) GetAssists() int32 {
	return s.Assists
}

// GetPlaytimeMillis returns the value of PlaytimeMillis.
func (s *ValMatchV1PlayerStatsDto) GetPlaytimeMillis() int32 {
	return s.PlaytimeMillis
}

// GetAbilityCasts returns the value of AbilityCasts.
func (s *ValMatchV1PlayerStatsDto) GetAbilityCasts() OptValMatchV1AbilityCastsDto {
	return s.AbilityCasts
}

// SetScore sets the value of Score.
func (s *ValMatchV1PlayerStatsDto) SetScore(val int32) {
	s.Score = val
}

// SetRoundsPlayed sets the value of RoundsPlayed.
func (s *ValMatchV1PlayerStatsDto) SetRoundsPlayed(val int32) {
	s.RoundsPlayed = val
}

// SetKills sets the value of Kills.
func (s *ValMatchV1PlayerStatsDto) SetKills(val int32) {
	s.Kills = val
}

// SetDeaths sets the value of Deaths.
func (s *ValMatchV1PlayerStatsDto) SetDeaths(val int32) {
	s.Deaths = val
}

// SetAssists sets the value of Assists.
func (s *ValMatchV1PlayerStatsDto) SetAssists(val int32) {
	s.Assists = val
}

// SetPlaytimeMillis sets the value of PlaytimeMillis.
func (s *ValMatchV1PlayerStatsDto) SetPlaytimeMillis(val int32) {
	s.PlaytimeMillis = val
}

// SetAbilityCasts sets the value of AbilityCasts.
func (s *ValMatchV1PlayerStatsDto) SetAbilityCasts(val OptValMatchV1AbilityCastsDto) {
	s.AbilityCasts = val
}

// Ref: #/components/schemas/val-match-v1.RecentMatchesDto
type ValMatchV1RecentMatchesDto struct {
	CurrentTime int64 `json:"currentTime"`
	// A list of recent match ids.
	MatchIds []string `json:"matchIds"`
}

// GetCurrentTime returns the value of CurrentTime.
func (s *ValMatchV1RecentMatchesDto) GetCurrentTime() int64 {
	return s.CurrentTime
}

// GetMatchIds returns the value of MatchIds.
func (s *ValMatchV1RecentMatchesDto) GetMatchIds() []string {
	return s.MatchIds
}

// SetCurrentTime sets the value of CurrentTime.
func (s *ValMatchV1RecentMatchesDto) SetCurrentTime(val int64) {
	s.CurrentTime = val
}

// SetMatchIds sets the value of MatchIds.
func (s *ValMatchV1RecentMatchesDto) SetMatchIds(val []string) {
	s.MatchIds = val
}

func (*ValMatchV1RecentMatchesDto) valMatchV1GetRecentRes() {}

// Ref: #/components/schemas/val-match-v1.RoundResultDto
type ValMatchV1RoundResultDto struct {
	RoundNum        int32  `json:"roundNum"`
	RoundResult     string `json:"roundResult"`
	RoundCeremony   string `json:"roundCeremony"`
	WinningTeam     string `json:"winningTeam"`
	WinningTeamRole string `json:"winningTeamRole"`
	// PUUID of player.
	BombPlanter OptString `json:"bombPlanter"`
	// PUUID of player.
	BombDefuser           OptString                       `json:"bombDefuser"`
	PlantRoundTime        int32                           `json:"plantRoundTime"`
	PlantPlayerLocations  []ValMatchV1PlayerLocationsDto  `json:"plantPlayerLocations"`
	PlantLocation         ValMatchV1LocationDto           `json:"plantLocation"`
	PlantSite             string                          `json:"plantSite"`
	DefuseRoundTime       int32                           `json:"defuseRoundTime"`
	DefusePlayerLocations []ValMatchV1PlayerLocationsDto  `json:"defusePlayerLocations"`
	DefuseLocation        ValMatchV1LocationDto           `json:"defuseLocation"`
	PlayerStats           []ValMatchV1PlayerRoundStatsDto `json:"playerStats"`
	RoundResultCode       string                          `json:"roundResultCode"`
}

// GetRoundNum returns the value of RoundNum.
func (s *ValMatchV1RoundResultDto) GetRoundNum() int32 {
	return s.RoundNum
}

// GetRoundResult returns the value of RoundResult.
func (s *ValMatchV1RoundResultDto) GetRoundResult() string {
	return s.RoundResult
}

// GetRoundCeremony returns the value of RoundCeremony.
func (s *ValMatchV1RoundResultDto) GetRoundCeremony() string {
	return s.RoundCeremony
}

// GetWinningTeam returns the value of WinningTeam.
func (s *ValMatchV1RoundResultDto) GetWinningTeam() string {
	return s.WinningTeam
}

// GetWinningTeamRole returns the value of WinningTeamRole.
func (s *ValMatchV1RoundResultDto) GetWinningTeamRole() string {
	return s.WinningTeamRole
}

// GetBombPlanter returns the value of BombPlanter.
func (s *ValMatchV1RoundResultDto) GetBombPlanter() OptString {
	return s.BombPlanter
}

// GetBombDefuser returns the value of BombDefuser.
func (s *ValMatchV1RoundResultDto) GetBombDefuser() OptString {
	return s.BombDefuser
}

// GetPlantRoundTime returns the value of PlantRoundTime.
func (s *ValMatchV1RoundResultDto) GetPlantRoundTime() int32 {
	return s.PlantRoundTime
}

// GetPlantPlayerLocations returns the value of PlantPlayerLocations.
func (s *ValMatchV1RoundResultDto) GetPlantPlayerLocations() []ValMatchV1PlayerLocationsDto {
	return s.PlantPlayerLocations
}

// GetPlantLocation returns the value of PlantLocation.
func (s *ValMatchV1RoundResultDto) GetPlantLocation() ValMatchV1LocationDto {
	return s.PlantLocation
}

// GetPlantSite returns the value of PlantSite.
func (s *ValMatchV1RoundResultDto) GetPlantSite() string {
	return s.PlantSite
}

// GetDefuseRoundTime returns the value of DefuseRoundTime.
func (s *ValMatchV1RoundResultDto) GetDefuseRoundTime() int32 {
	return s.DefuseRoundTime
}

// GetDefusePlayerLocations returns the value of DefusePlayerLocations.
func (s *ValMatchV1RoundResultDto) GetDefusePlayerLocations() []ValMatchV1PlayerLocationsDto {
	return s.DefusePlayerLocations
}

// GetDefuseLocation returns the value of DefuseLocation.
func (s *ValMatchV1RoundResultDto) GetDefuseLocation() ValMatchV1LocationDto {
	return s.DefuseLocation
}

// GetPlayerStats returns the value of PlayerStats.
func (s *ValMatchV1RoundResultDto) GetPlayerStats() []ValMatchV1PlayerRoundStatsDto {
	return s.PlayerStats
}

// GetRoundResultCode returns the value of RoundResultCode.
func (s *ValMatchV1RoundResultDto) GetRoundResultCode() string {
	return s.RoundResultCode
}

// SetRoundNum sets the value of RoundNum.
func (s *ValMatchV1RoundResultDto) SetRoundNum(val int32) {
	s.RoundNum = val
}

// SetRoundResult sets the value of RoundResult.
func (s *ValMatchV1RoundResultDto) SetRoundResult(val string) {
	s.RoundResult = val
}

// SetRoundCeremony sets the value of RoundCeremony.
func (s *ValMatchV1RoundResultDto) SetRoundCeremony(val string) {
	s.RoundCeremony = val
}

// SetWinningTeam sets the value of WinningTeam.
func (s *ValMatchV1RoundResultDto) SetWinningTeam(val string) {
	s.WinningTeam = val
}

// SetWinningTeamRole sets the value of WinningTeamRole.
func (s *ValMatchV1RoundResultDto) SetWinningTeamRole(val string) {
	s.WinningTeamRole = val
}

// SetBombPlanter sets the value of BombPlanter.
func (s *ValMatchV1RoundResultDto) SetBombPlanter(val OptString) {
	s.BombPlanter = val
}

// SetBombDefuser sets the value of BombDefuser.
func (s *ValMatchV1RoundResultDto) SetBombDefuser(val OptString) {
	s.BombDefuser = val
}

// SetPlantRoundTime sets the value of PlantRoundTime.
func (s *ValMatchV1RoundResultDto) SetPlantRoundTime(val int32) {
	s.PlantRoundTime = val
}

// SetPlantPlayerLocations sets the value of PlantPlayerLocations.
func (s *ValMatchV1RoundResultDto) SetPlantPlayerLocations(val []ValMatchV1PlayerLocationsDto) {
	s.PlantPlayerLocations = val
}

// SetPlantLocation sets the value of PlantLocation.
func (s *ValMatchV1RoundResultDto) SetPlantLocation(val ValMatchV1LocationDto) {
	s.PlantLocation = val
}

// SetPlantSite sets the value of PlantSite.
func (s *ValMatchV1RoundResultDto) SetPlantSite(val string) {
	s.PlantSite = val
}

// SetDefuseRoundTime sets the value of DefuseRoundTime.
func (s *ValMatchV1RoundResultDto) SetDefuseRoundTime(val int32) {
	s.DefuseRoundTime = val
}

// SetDefusePlayerLocations sets the value of DefusePlayerLocations.
func (s *ValMatchV1RoundResultDto) SetDefusePlayerLocations(val []ValMatchV1PlayerLocationsDto) {
	s.DefusePlayerLocations = val
}

// SetDefuseLocation sets the value of DefuseLocation.
func (s *ValMatchV1RoundResultDto) SetDefuseLocation(val ValMatchV1LocationDto) {
	s.DefuseLocation = val
}

// SetPlayerStats sets the value of PlayerStats.
func (s *ValMatchV1RoundResultDto) SetPlayerStats(val []ValMatchV1PlayerRoundStatsDto) {
	s.PlayerStats = val
}

// SetRoundResultCode sets the value of RoundResultCode.
func (s *ValMatchV1RoundResultDto) SetRoundResultCode(val string) {
	s.RoundResultCode = val
}

// Ref: #/components/schemas/val-match-v1.TeamDto
type ValMatchV1TeamDto struct {
	// This is an arbitrary string. Red and Blue in bomb modes. The puuid of the player in deathmatch.
	TeamId       string `json:"teamId"`
	Won          bool   `json:"won"`
	RoundsPlayed int32  `json:"roundsPlayed"`
	RoundsWon    int32  `json:"roundsWon"`
	// Team points scored. Number of kills in deathmatch.
	NumPoints int32 `json:"numPoints"`
}

// GetTeamId returns the value of TeamId.
func (s *ValMatchV1TeamDto) GetTeamId() string {
	return s.TeamId
}

// GetWon returns the value of Won.
func (s *ValMatchV1TeamDto) GetWon() bool {
	return s.Won
}

// GetRoundsPlayed returns the value of RoundsPlayed.
func (s *ValMatchV1TeamDto) GetRoundsPlayed() int32 {
	return s.RoundsPlayed
}

// GetRoundsWon returns the value of RoundsWon.
func (s *ValMatchV1TeamDto) GetRoundsWon() int32 {
	return s.RoundsWon
}

// GetNumPoints returns the value of NumPoints.
func (s *ValMatchV1TeamDto) GetNumPoints() int32 {
	return s.NumPoints
}

// SetTeamId sets the value of TeamId.
func (s *ValMatchV1TeamDto) SetTeamId(val string) {
	s.TeamId = val
}

// SetWon sets the value of Won.
func (s *ValMatchV1TeamDto) SetWon(val bool) {
	s.Won = val
}

// SetRoundsPlayed sets the value of RoundsPlayed.
func (s *ValMatchV1TeamDto) SetRoundsPlayed(val int32) {
	s.RoundsPlayed = val
}

// SetRoundsWon sets the value of RoundsWon.
func (s *ValMatchV1TeamDto) SetRoundsWon(val int32) {
	s.RoundsWon = val
}

// SetNumPoints sets the value of NumPoints.
func (s *ValMatchV1TeamDto) SetNumPoints(val int32) {
	s.NumPoints = val
}

// ValRankedV1GetLeaderboardBadGateway is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardBadGateway struct{}

func (*ValRankedV1GetLeaderboardBadGateway) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardBadRequest is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardBadRequest struct{}

func (*ValRankedV1GetLeaderboardBadRequest) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardForbidden is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardForbidden struct{}

func (*ValRankedV1GetLeaderboardForbidden) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardGatewayTimeout is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardGatewayTimeout struct{}

func (*ValRankedV1GetLeaderboardGatewayTimeout) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardInternalServerError is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardInternalServerError struct{}

func (*ValRankedV1GetLeaderboardInternalServerError) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardMethodNotAllowed is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardMethodNotAllowed struct{}

func (*ValRankedV1GetLeaderboardMethodNotAllowed) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardNotFound is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardNotFound struct{}

func (*ValRankedV1GetLeaderboardNotFound) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardServiceUnavailable is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardServiceUnavailable struct{}

func (*ValRankedV1GetLeaderboardServiceUnavailable) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardTooManyRequests is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardTooManyRequests struct{}

func (*ValRankedV1GetLeaderboardTooManyRequests) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardUnauthorized is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardUnauthorized struct{}

func (*ValRankedV1GetLeaderboardUnauthorized) valRankedV1GetLeaderboardRes() {}

// ValRankedV1GetLeaderboardUnsupportedMediaType is response for ValRankedV1GetLeaderboard operation.
type ValRankedV1GetLeaderboardUnsupportedMediaType struct{}

func (*ValRankedV1GetLeaderboardUnsupportedMediaType) valRankedV1GetLeaderboardRes() {}

// Ref: #/components/schemas/val-ranked-v1.LeaderboardDto
type ValRankedV1LeaderboardDto struct {
	// The shard for the given leaderboard.
	Shard string `json:"shard"`
	// The act id for the given leaderboard. Act ids can be found using the val-content API.
	ActId string `json:"actId"`
	// The total number of players in the leaderboard.
	TotalPlayers          int64                                   `json:"totalPlayers"`
	Players               []ValRankedV1PlayerDto                  `json:"players"`
	ImmortalStartingPage  OptInt64                                `json:"immortalStartingPage"`
	ImmortalStartingIndex OptInt64                                `json:"immortalStartingIndex"`
	TopTierRRThreshold    OptInt64                                `json:"topTierRRThreshold"`
	TierDetails           OptValRankedV1LeaderboardDtoTierDetails `json:"tierDetails"`
	StartIndex            OptInt64                                `json:"startIndex"`
	Query                 OptString                               `json:"query"`
}

// GetShard returns the value of Shard.
func (s *ValRankedV1LeaderboardDto) GetShard() string {
	return s.Shard
}

// GetActId returns the value of ActId.
func (s *ValRankedV1LeaderboardDto) GetActId() string {
	return s.ActId
}

// GetTotalPlayers returns the value of TotalPlayers.
func (s *ValRankedV1LeaderboardDto) GetTotalPlayers() int64 {
	return s.TotalPlayers
}

// GetPlayers returns the value of Players.
func (s *ValRankedV1LeaderboardDto) GetPlayers() []ValRankedV1PlayerDto {
	return s.Players
}

// GetImmortalStartingPage returns the value of ImmortalStartingPage.
func (s *ValRankedV1LeaderboardDto) GetImmortalStartingPage() OptInt64 {
	return s.ImmortalStartingPage
}

// GetImmortalStartingIndex returns the value of ImmortalStartingIndex.
func (s *ValRankedV1LeaderboardDto) GetImmortalStartingIndex() OptInt64 {
	return s.ImmortalStartingIndex
}

// GetTopTierRRThreshold returns the value of TopTierRRThreshold.
func (s *ValRankedV1LeaderboardDto) GetTopTierRRThreshold() OptInt64 {
	return s.TopTierRRThreshold
}

// GetTierDetails returns the value of TierDetails.
func (s *ValRankedV1LeaderboardDto) GetTierDetails() OptValRankedV1LeaderboardDtoTierDetails {
	return s.TierDetails
}

// GetStartIndex returns the value of StartIndex.
func (s *ValRankedV1LeaderboardDto) GetStartIndex() OptInt64 {
	return s.StartIndex
}

// GetQuery returns the value of Query.
func (s *ValRankedV1LeaderboardDto) GetQuery() OptString {
	return s.Query
}

// SetShard sets the value of Shard.
func (s *ValRankedV1LeaderboardDto) SetShard(val string) {
	s.Shard = val
}

// SetActId sets the value of ActId.
func (s *ValRankedV1LeaderboardDto) SetActId(val string) {
	s.ActId = val
}

// SetTotalPlayers sets the value of TotalPlayers.
func (s *ValRankedV1LeaderboardDto) SetTotalPlayers(val int64) {
	s.TotalPlayers = val
}

// SetPlayers sets the value of Players.
func (s *ValRankedV1LeaderboardDto) SetPlayers(val []ValRankedV1PlayerDto) {
	s.Players = val
}

// SetImmortalStartingPage sets the value of ImmortalStartingPage.
func (s *ValRankedV1LeaderboardDto) SetImmortalStartingPage(val OptInt64) {
	s.ImmortalStartingPage = val
}

// SetImmortalStartingIndex sets the value of ImmortalStartingIndex.
func (s *ValRankedV1LeaderboardDto) SetImmortalStartingIndex(val OptInt64) {
	s.ImmortalStartingIndex = val
}

// SetTopTierRRThreshold sets the value of TopTierRRThreshold.
func (s *ValRankedV1LeaderboardDto) SetTopTierRRThreshold(val OptInt64) {
	s.TopTierRRThreshold = val
}

// SetTierDetails sets the value of TierDetails.
func (s *ValRankedV1LeaderboardDto) SetTierDetails(val OptValRankedV1LeaderboardDtoTierDetails) {
	s.TierDetails = val
}

// SetStartIndex sets the value of StartIndex.
func (s *ValRankedV1LeaderboardDto) SetStartIndex(val OptInt64) {
	s.StartIndex = val
}

// SetQuery sets the value of Query.
func (s *ValRankedV1LeaderboardDto) SetQuery(val OptString) {
	s.Query = val
}

func (*ValRankedV1LeaderboardDto) valRankedV1GetLeaderboardRes() {}

type ValRankedV1LeaderboardDtoTierDetails map[string]ValRankedV1TierDetailDto

func (s *ValRankedV1LeaderboardDtoTierDetails) init() ValRankedV1LeaderboardDtoTierDetails {
	m := *s
	if m == nil {
		m = map[string]ValRankedV1TierDetailDto{}
		*s = m
	}
	return m
}

// Ref: #/components/schemas/val-ranked-v1.PlayerDto
type ValRankedV1PlayerDto struct {
	// This field may be omitted if the player has been anonymized.
	Puuid OptString `json:"puuid"`
	// This field may be omitted if the player has been anonymized.
	GameName OptString `json:"gameName"`
	// This field may be omitted if the player has been anonymized.
	TagLine         OptString `json:"tagLine"`
	LeaderboardRank int64     `json:"leaderboardRank"`
	RankedRating    int64     `json:"rankedRating"`
	NumberOfWins    int64     `json:"numberOfWins"`
	CompetitiveTier OptInt64  `json:"competitiveTier"`
	Prefix          OptString `json:"prefix"`
}

// GetPuuid returns the value of Puuid.
func (s *ValRankedV1PlayerDto) GetPuuid() OptString {
	return s.Puuid
}

// GetGameName returns the value of GameName.
func (s *ValRankedV1PlayerDto) GetGameName() OptString {
	return s.GameName
}

// GetTagLine returns the value of TagLine.
func (s *ValRankedV1PlayerDto) GetTagLine() OptString {
	return s.TagLine
}

// GetLeaderboardRank returns the value of LeaderboardRank.
func (s *ValRankedV1PlayerDto) GetLeaderboardRank() int64 {
	return s.LeaderboardRank
}

// GetRankedRating returns the value of RankedRating.
func (s *ValRankedV1PlayerDto) GetRankedRating() int64 {
	return s.RankedRating
}

// GetNumberOfWins returns the value of NumberOfWins.
func (s *ValRankedV1PlayerDto) GetNumberOfWins() int64 {
	return s.NumberOfWins
}

// GetCompetitiveTier returns the value of CompetitiveTier.
func (s *ValRankedV1PlayerDto) GetCompetitiveTier() OptInt64 {
	return s.CompetitiveTier
}

// GetPrefix returns the value of Prefix.
func (s *ValRankedV1PlayerDto) GetPrefix() OptString {
	return s.Prefix
}

// SetPuuid sets the value of Puuid.
func (s *ValRankedV1PlayerDto) SetPuuid(val OptString) {
	s.Puuid = val
}

// SetGameName sets the value of GameName.
func (s *ValRankedV1PlayerDto) SetGameName(val OptString) {
	s.GameName = val
}

// SetTagLine sets the value of TagLine.
func (s *ValRankedV1PlayerDto) SetTagLine(val OptString) {
	s.TagLine = val
}

// SetLeaderboardRank sets the value of LeaderboardRank.
func (s *ValRankedV1PlayerDto) SetLeaderboardRank(val int64) {
	s.LeaderboardRank = val
}

// SetRankedRating sets the value of RankedRating.
func (s *ValRankedV1PlayerDto) SetRankedRating(val int64) {
	s.RankedRating = val
}

// SetNumberOfWins sets the value of NumberOfWins.
func (s *ValRankedV1PlayerDto) SetNumberOfWins(val int64) {
	s.NumberOfWins = val
}

// SetCompetitiveTier sets the value of CompetitiveTier.
func (s *ValRankedV1PlayerDto) SetCompetitiveTier(val OptInt64) {
	s.CompetitiveTier = val
}

// SetPrefix sets the value of Prefix.
func (s *ValRankedV1PlayerDto) SetPrefix(val OptString) {
	s.Prefix = val
}

// Ref: #/components/schemas/val-ranked-v1.TierDetailDto
type ValRankedV1TierDetailDto struct {
	RankedRatingThreshold int64 `json:"rankedRatingThreshold"`
	StartingPage          int64 `json:"startingPage"`
	StartingIndex         int64 `json:"startingIndex"`
}

// GetRankedRatingThreshold returns the value of RankedRatingThreshold.
func (s *ValRankedV1TierDetailDto) GetRankedRatingThreshold() int64 {
	return s.RankedRatingThreshold
}

// GetStartingPage returns the value of StartingPage.
func (s *ValRankedV1TierDetailDto) GetStartingPage() int64 {
	return s.StartingPage
}

// GetStartingIndex returns the value of StartingIndex.
func (s *ValRankedV1TierDetailDto) GetStartingIndex() int64 {
	return s.StartingIndex
}

// SetRankedRatingThreshold sets the value of RankedRatingThreshold.
func (s *ValRankedV1TierDetailDto) SetRankedRatingThreshold(val int64) {
	s.RankedRatingThreshold = val
}

// SetStartingPage sets the value of StartingPage.
func (s *ValRankedV1TierDetailDto) SetStartingPage(val int64) {
	s.StartingPage = val
}

// SetStartingIndex sets the value of StartingIndex.
func (s *ValRankedV1TierDetailDto) SetStartingIndex(val int64) {
	s.StartingIndex = val
}

// Ref: #/components/schemas/val-status-v1.ContentDto
type ValStatusV1ContentDto struct {
	Locale  string `json:"locale"`
	Content string `json:"content"`
}

// GetLocale returns the value of Locale.
func (s *ValStatusV1ContentDto) GetLocale() string {
	return s.Locale
}

// GetContent returns the value of Content.
func (s *ValStatusV1ContentDto) GetContent() string {
	return s.Content
}

// SetLocale sets the value of Locale.
func (s *ValStatusV1ContentDto) SetLocale(val string) {
	s.Locale = val
}

// SetContent sets the value of Content.
func (s *ValStatusV1ContentDto) SetContent(val string) {
	s.Content = val
}

// ValStatusV1GetPlatformDataBadGateway is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataBadGateway struct{}

func (*ValStatusV1GetPlatformDataBadGateway) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataBadRequest is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataBadRequest struct{}

func (*ValStatusV1GetPlatformDataBadRequest) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataForbidden is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataForbidden struct{}

func (*ValStatusV1GetPlatformDataForbidden) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataGatewayTimeout is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataGatewayTimeout struct{}

func (*ValStatusV1GetPlatformDataGatewayTimeout) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataInternalServerError is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataInternalServerError struct{}

func (*ValStatusV1GetPlatformDataInternalServerError) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataMethodNotAllowed is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataMethodNotAllowed struct{}

func (*ValStatusV1GetPlatformDataMethodNotAllowed) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataNotFound is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataNotFound struct{}

func (*ValStatusV1GetPlatformDataNotFound) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataServiceUnavailable is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataServiceUnavailable struct{}

func (*ValStatusV1GetPlatformDataServiceUnavailable) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataTooManyRequests is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataTooManyRequests struct{}

func (*ValStatusV1GetPlatformDataTooManyRequests) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataUnauthorized is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataUnauthorized struct{}

func (*ValStatusV1GetPlatformDataUnauthorized) valStatusV1GetPlatformDataRes() {}

// ValStatusV1GetPlatformDataUnsupportedMediaType is response for ValStatusV1GetPlatformData operation.
type ValStatusV1GetPlatformDataUnsupportedMediaType struct{}

func (*ValStatusV1GetPlatformDataUnsupportedMediaType) valStatusV1GetPlatformDataRes() {}

// Ref: #/components/schemas/val-status-v1.PlatformDataDto
type ValStatusV1PlatformDataDto struct {
	ID           string                 `json:"id"`
	Name         string                 `json:"name"`
	Locales      []string               `json:"locales"`
	Maintenances []ValStatusV1StatusDto `json:"maintenances"`
	Incidents    []ValStatusV1StatusDto `json:"incidents"`
}

// GetID returns the value of ID.
func (s *ValStatusV1PlatformDataDto) GetID() string {
	return s.ID
}

// GetName returns the value of Name.
func (s *ValStatusV1PlatformDataDto) GetName() string {
	return s.Name
}

// GetLocales returns the value of Locales.
func (s *ValStatusV1PlatformDataDto) GetLocales() []string {
	return s.Locales
}

// GetMaintenances returns the value of Maintenances.
func (s *ValStatusV1PlatformDataDto) GetMaintenances() []ValStatusV1StatusDto {
	return s.Maintenances
}

// GetIncidents returns the value of Incidents.
func (s *ValStatusV1PlatformDataDto) GetIncidents() []ValStatusV1StatusDto {
	return s.Incidents
}

// SetID sets the value of ID.
func (s *ValStatusV1PlatformDataDto) SetID(val string) {
	s.ID = val
}

// SetName sets the value of Name.
func (s *ValStatusV1PlatformDataDto) SetName(val string) {
	s.Name = val
}

// SetLocales sets the value of Locales.
func (s *ValStatusV1PlatformDataDto) SetLocales(val []string) {
	s.Locales = val
}

// SetMaintenances sets the value of Maintenances.
func (s *ValStatusV1PlatformDataDto) SetMaintenances(val []ValStatusV1StatusDto) {
	s.Maintenances = val
}

// SetIncidents sets the value of Incidents.
func (s *ValStatusV1PlatformDataDto) SetIncidents(val []ValStatusV1StatusDto) {
	s.Incidents = val
}

func (*ValStatusV1PlatformDataDto) valStatusV1GetPlatformDataRes() {}

// Ref: #/components/schemas/val-status-v1.StatusDto
type ValStatusV1StatusDto struct {
	ID int32 `json:"id"`
	// (Legal values:  scheduled,  in_progress,  complete).
	MaintenanceStatus ValStatusV1StatusDtoMaintenanceStatus `json:"maintenance_status"`
	// (Legal values:  info,  warning,  critical).
	IncidentSeverity ValStatusV1StatusDtoIncidentSeverity `json:"incident_severity"`
	Titles           []ValStatusV1ContentDto              `json:"titles"`
	Updates          []ValStatusV1UpdateDto               `json:"updates"`
	CreatedAt        string                               `json:"created_at"`
	ArchiveAt        string                               `json:"archive_at"`
	UpdatedAt        string                               `json:"updated_at"`
	// (Legal values: windows, macos, android, ios, ps4, xbone, switch).
	Platforms []ValStatusV1StatusDtoPlatformsItem `json:"platforms"`
}

// GetID returns the value of ID.
func (s *ValStatusV1StatusDto) GetID() int32 {
	return s.ID
}

// GetMaintenanceStatus returns the value of MaintenanceStatus.
func (s *ValStatusV1StatusDto) GetMaintenanceStatus() ValStatusV1StatusDtoMaintenanceStatus {
	return s.MaintenanceStatus
}

// GetIncidentSeverity returns the value of IncidentSeverity.
func (s *ValStatusV1StatusDto) GetIncidentSeverity() ValStatusV1StatusDtoIncidentSeverity {
	return s.IncidentSeverity
}

// GetTitles returns the value of Titles.
func (s *ValStatusV1StatusDto) GetTitles() []ValStatusV1ContentDto {
	return s.Titles
}

// GetUpdates returns the value of Updates.
func (s *ValStatusV1StatusDto) GetUpdates() []ValStatusV1UpdateDto {
	return s.Updates
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ValStatusV1StatusDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetArchiveAt returns the value of ArchiveAt.
func (s *ValStatusV1StatusDto) GetArchiveAt() string {
	return s.ArchiveAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ValStatusV1StatusDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// GetPlatforms returns the value of Platforms.
func (s *ValStatusV1StatusDto) GetPlatforms() []ValStatusV1StatusDtoPlatformsItem {
	return s.Platforms
}

// SetID sets the value of ID.
func (s *ValStatusV1StatusDto) SetID(val int32) {
	s.ID = val
}

// SetMaintenanceStatus sets the value of MaintenanceStatus.
func (s *ValStatusV1StatusDto) SetMaintenanceStatus(val ValStatusV1StatusDtoMaintenanceStatus) {
	s.MaintenanceStatus = val
}

// SetIncidentSeverity sets the value of IncidentSeverity.
func (s *ValStatusV1StatusDto) SetIncidentSeverity(val ValStatusV1StatusDtoIncidentSeverity) {
	s.IncidentSeverity = val
}

// SetTitles sets the value of Titles.
func (s *ValStatusV1StatusDto) SetTitles(val []ValStatusV1ContentDto) {
	s.Titles = val
}

// SetUpdates sets the value of Updates.
func (s *ValStatusV1StatusDto) SetUpdates(val []ValStatusV1UpdateDto) {
	s.Updates = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ValStatusV1StatusDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetArchiveAt sets the value of ArchiveAt.
func (s *ValStatusV1StatusDto) SetArchiveAt(val string) {
	s.ArchiveAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ValStatusV1StatusDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

// SetPlatforms sets the value of Platforms.
func (s *ValStatusV1StatusDto) SetPlatforms(val []ValStatusV1StatusDtoPlatformsItem) {
	s.Platforms = val
}

// (Legal values:  info,  warning,  critical).
type ValStatusV1StatusDtoIncidentSeverity string

const (
	ValStatusV1StatusDtoIncidentSeverityInfo     ValStatusV1StatusDtoIncidentSeverity = "info"
	ValStatusV1StatusDtoIncidentSeverityWarning  ValStatusV1StatusDtoIncidentSeverity = "warning"
	ValStatusV1StatusDtoIncidentSeverityCritical ValStatusV1StatusDtoIncidentSeverity = "critical"
)

// AllValues returns all ValStatusV1StatusDtoIncidentSeverity values.
func (ValStatusV1StatusDtoIncidentSeverity) AllValues() []ValStatusV1StatusDtoIncidentSeverity {
	return []ValStatusV1StatusDtoIncidentSeverity{
		ValStatusV1StatusDtoIncidentSeverityInfo,
		ValStatusV1StatusDtoIncidentSeverityWarning,
		ValStatusV1StatusDtoIncidentSeverityCritical,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValStatusV1StatusDtoIncidentSeverity) MarshalText() ([]byte, error) {
	switch s {
	case ValStatusV1StatusDtoIncidentSeverityInfo:
		return []byte(s), nil
	case ValStatusV1StatusDtoIncidentSeverityWarning:
		return []byte(s), nil
	case ValStatusV1StatusDtoIncidentSeverityCritical:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValStatusV1StatusDtoIncidentSeverity) UnmarshalText(data []byte) error {
	switch ValStatusV1StatusDtoIncidentSeverity(data) {
	case ValStatusV1StatusDtoIncidentSeverityInfo:
		*s = ValStatusV1StatusDtoIncidentSeverityInfo
		return nil
	case ValStatusV1StatusDtoIncidentSeverityWarning:
		*s = ValStatusV1StatusDtoIncidentSeverityWarning
		return nil
	case ValStatusV1StatusDtoIncidentSeverityCritical:
		*s = ValStatusV1StatusDtoIncidentSeverityCritical
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// (Legal values:  scheduled,  in_progress,  complete).
type ValStatusV1StatusDtoMaintenanceStatus string

const (
	ValStatusV1StatusDtoMaintenanceStatusScheduled  ValStatusV1StatusDtoMaintenanceStatus = "scheduled"
	ValStatusV1StatusDtoMaintenanceStatusInProgress ValStatusV1StatusDtoMaintenanceStatus = "in_progress"
	ValStatusV1StatusDtoMaintenanceStatusComplete   ValStatusV1StatusDtoMaintenanceStatus = "complete"
)

// AllValues returns all ValStatusV1StatusDtoMaintenanceStatus values.
func (ValStatusV1StatusDtoMaintenanceStatus) AllValues() []ValStatusV1StatusDtoMaintenanceStatus {
	return []ValStatusV1StatusDtoMaintenanceStatus{
		ValStatusV1StatusDtoMaintenanceStatusScheduled,
		ValStatusV1StatusDtoMaintenanceStatusInProgress,
		ValStatusV1StatusDtoMaintenanceStatusComplete,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValStatusV1StatusDtoMaintenanceStatus) MarshalText() ([]byte, error) {
	switch s {
	case ValStatusV1StatusDtoMaintenanceStatusScheduled:
		return []byte(s), nil
	case ValStatusV1StatusDtoMaintenanceStatusInProgress:
		return []byte(s), nil
	case ValStatusV1StatusDtoMaintenanceStatusComplete:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValStatusV1StatusDtoMaintenanceStatus) UnmarshalText(data []byte) error {
	switch ValStatusV1StatusDtoMaintenanceStatus(data) {
	case ValStatusV1StatusDtoMaintenanceStatusScheduled:
		*s = ValStatusV1StatusDtoMaintenanceStatusScheduled
		return nil
	case ValStatusV1StatusDtoMaintenanceStatusInProgress:
		*s = ValStatusV1StatusDtoMaintenanceStatusInProgress
		return nil
	case ValStatusV1StatusDtoMaintenanceStatusComplete:
		*s = ValStatusV1StatusDtoMaintenanceStatusComplete
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type ValStatusV1StatusDtoPlatformsItem string

const (
	ValStatusV1StatusDtoPlatformsItemWindows ValStatusV1StatusDtoPlatformsItem = "windows"
	ValStatusV1StatusDtoPlatformsItemMacos   ValStatusV1StatusDtoPlatformsItem = "macos"
	ValStatusV1StatusDtoPlatformsItemAndroid ValStatusV1StatusDtoPlatformsItem = "android"
	ValStatusV1StatusDtoPlatformsItemIos     ValStatusV1StatusDtoPlatformsItem = "ios"
	ValStatusV1StatusDtoPlatformsItemPs4     ValStatusV1StatusDtoPlatformsItem = "ps4"
	ValStatusV1StatusDtoPlatformsItemXbone   ValStatusV1StatusDtoPlatformsItem = "xbone"
	ValStatusV1StatusDtoPlatformsItemSwitch  ValStatusV1StatusDtoPlatformsItem = "switch"
)

// AllValues returns all ValStatusV1StatusDtoPlatformsItem values.
func (ValStatusV1StatusDtoPlatformsItem) AllValues() []ValStatusV1StatusDtoPlatformsItem {
	return []ValStatusV1StatusDtoPlatformsItem{
		ValStatusV1StatusDtoPlatformsItemWindows,
		ValStatusV1StatusDtoPlatformsItemMacos,
		ValStatusV1StatusDtoPlatformsItemAndroid,
		ValStatusV1StatusDtoPlatformsItemIos,
		ValStatusV1StatusDtoPlatformsItemPs4,
		ValStatusV1StatusDtoPlatformsItemXbone,
		ValStatusV1StatusDtoPlatformsItemSwitch,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValStatusV1StatusDtoPlatformsItem) MarshalText() ([]byte, error) {
	switch s {
	case ValStatusV1StatusDtoPlatformsItemWindows:
		return []byte(s), nil
	case ValStatusV1StatusDtoPlatformsItemMacos:
		return []byte(s), nil
	case ValStatusV1StatusDtoPlatformsItemAndroid:
		return []byte(s), nil
	case ValStatusV1StatusDtoPlatformsItemIos:
		return []byte(s), nil
	case ValStatusV1StatusDtoPlatformsItemPs4:
		return []byte(s), nil
	case ValStatusV1StatusDtoPlatformsItemXbone:
		return []byte(s), nil
	case ValStatusV1StatusDtoPlatformsItemSwitch:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValStatusV1StatusDtoPlatformsItem) UnmarshalText(data []byte) error {
	switch ValStatusV1StatusDtoPlatformsItem(data) {
	case ValStatusV1StatusDtoPlatformsItemWindows:
		*s = ValStatusV1StatusDtoPlatformsItemWindows
		return nil
	case ValStatusV1StatusDtoPlatformsItemMacos:
		*s = ValStatusV1StatusDtoPlatformsItemMacos
		return nil
	case ValStatusV1StatusDtoPlatformsItemAndroid:
		*s = ValStatusV1StatusDtoPlatformsItemAndroid
		return nil
	case ValStatusV1StatusDtoPlatformsItemIos:
		*s = ValStatusV1StatusDtoPlatformsItemIos
		return nil
	case ValStatusV1StatusDtoPlatformsItemPs4:
		*s = ValStatusV1StatusDtoPlatformsItemPs4
		return nil
	case ValStatusV1StatusDtoPlatformsItemXbone:
		*s = ValStatusV1StatusDtoPlatformsItemXbone
		return nil
	case ValStatusV1StatusDtoPlatformsItemSwitch:
		*s = ValStatusV1StatusDtoPlatformsItemSwitch
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

// Ref: #/components/schemas/val-status-v1.UpdateDto
type ValStatusV1UpdateDto struct {
	ID      int32  `json:"id"`
	Author  string `json:"author"`
	Publish bool   `json:"publish"`
	// (Legal values: riotclient, riotstatus, game).
	PublishLocations []ValStatusV1UpdateDtoPublishLocationsItem `json:"publish_locations"`
	Translations     []ValStatusV1ContentDto                    `json:"translations"`
	CreatedAt        string                                     `json:"created_at"`
	UpdatedAt        string                                     `json:"updated_at"`
}

// GetID returns the value of ID.
func (s *ValStatusV1UpdateDto) GetID() int32 {
	return s.ID
}

// GetAuthor returns the value of Author.
func (s *ValStatusV1UpdateDto) GetAuthor() string {
	return s.Author
}

// GetPublish returns the value of Publish.
func (s *ValStatusV1UpdateDto) GetPublish() bool {
	return s.Publish
}

// GetPublishLocations returns the value of PublishLocations.
func (s *ValStatusV1UpdateDto) GetPublishLocations() []ValStatusV1UpdateDtoPublishLocationsItem {
	return s.PublishLocations
}

// GetTranslations returns the value of Translations.
func (s *ValStatusV1UpdateDto) GetTranslations() []ValStatusV1ContentDto {
	return s.Translations
}

// GetCreatedAt returns the value of CreatedAt.
func (s *ValStatusV1UpdateDto) GetCreatedAt() string {
	return s.CreatedAt
}

// GetUpdatedAt returns the value of UpdatedAt.
func (s *ValStatusV1UpdateDto) GetUpdatedAt() string {
	return s.UpdatedAt
}

// SetID sets the value of ID.
func (s *ValStatusV1UpdateDto) SetID(val int32) {
	s.ID = val
}

// SetAuthor sets the value of Author.
func (s *ValStatusV1UpdateDto) SetAuthor(val string) {
	s.Author = val
}

// SetPublish sets the value of Publish.
func (s *ValStatusV1UpdateDto) SetPublish(val bool) {
	s.Publish = val
}

// SetPublishLocations sets the value of PublishLocations.
func (s *ValStatusV1UpdateDto) SetPublishLocations(val []ValStatusV1UpdateDtoPublishLocationsItem) {
	s.PublishLocations = val
}

// SetTranslations sets the value of Translations.
func (s *ValStatusV1UpdateDto) SetTranslations(val []ValStatusV1ContentDto) {
	s.Translations = val
}

// SetCreatedAt sets the value of CreatedAt.
func (s *ValStatusV1UpdateDto) SetCreatedAt(val string) {
	s.CreatedAt = val
}

// SetUpdatedAt sets the value of UpdatedAt.
func (s *ValStatusV1UpdateDto) SetUpdatedAt(val string) {
	s.UpdatedAt = val
}

type ValStatusV1UpdateDtoPublishLocationsItem string

const (
	ValStatusV1UpdateDtoPublishLocationsItemRiotclient ValStatusV1UpdateDtoPublishLocationsItem = "riotclient"
	ValStatusV1UpdateDtoPublishLocationsItemRiotstatus ValStatusV1UpdateDtoPublishLocationsItem = "riotstatus"
	ValStatusV1UpdateDtoPublishLocationsItemGame       ValStatusV1UpdateDtoPublishLocationsItem = "game"
)

// AllValues returns all ValStatusV1UpdateDtoPublishLocationsItem values.
func (ValStatusV1UpdateDtoPublishLocationsItem) AllValues() []ValStatusV1UpdateDtoPublishLocationsItem {
	return []ValStatusV1UpdateDtoPublishLocationsItem{
		ValStatusV1UpdateDtoPublishLocationsItemRiotclient,
		ValStatusV1UpdateDtoPublishLocationsItemRiotstatus,
		ValStatusV1UpdateDtoPublishLocationsItemGame,
	}
}

// MarshalText implements encoding.TextMarshaler.
func (s ValStatusV1UpdateDtoPublishLocationsItem) MarshalText() ([]byte, error) {
	switch s {
	case ValStatusV1UpdateDtoPublishLocationsItemRiotclient:
		return []byte(s), nil
	case ValStatusV1UpdateDtoPublishLocationsItemRiotstatus:
		return []byte(s), nil
	case ValStatusV1UpdateDtoPublishLocationsItemGame:
		return []byte(s), nil
	default:
		return nil, errors.Errorf("invalid value: %q", s)
	}
}

// UnmarshalText implements encoding.TextUnmarshaler.
func (s *ValStatusV1UpdateDtoPublishLocationsItem) UnmarshalText(data []byte) error {
	switch ValStatusV1UpdateDtoPublishLocationsItem(data) {
	case ValStatusV1UpdateDtoPublishLocationsItemRiotclient:
		*s = ValStatusV1UpdateDtoPublishLocationsItemRiotclient
		return nil
	case ValStatusV1UpdateDtoPublishLocationsItemRiotstatus:
		*s = ValStatusV1UpdateDtoPublishLocationsItemRiotstatus
		return nil
	case ValStatusV1UpdateDtoPublishLocationsItemGame:
		*s = ValStatusV1UpdateDtoPublishLocationsItemGame
		return nil
	default:
		return errors.Errorf("invalid value: %q", data)
	}
}

type XRiotToken struct {
	APIKey string
	Roles  []string
}

// GetAPIKey returns the value of APIKey.
func (s *XRiotToken) GetAPIKey() string {
	return s.APIKey
}

// GetRoles returns the value of Roles.
func (s *XRiotToken) GetRoles() []string {
	return s.Roles
}

// SetAPIKey sets the value of APIKey.
func (s *XRiotToken) SetAPIKey(val string) {
	s.APIKey = val
}

// SetRoles sets the value of Roles.
func (s *XRiotToken) SetRoles(val []string) {
	s.Roles = val
}
